{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"C:\\\\test\\\\mbti-match-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/defineProperty\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar mapObj = require('map-obj');\nvar camelCase = require('camelcase');\nvar QuickLru = require('quick-lru');\nvar has = function has(array, key) {\n  return array.some(function (x) {\n    if (typeof x === 'string') {\n      return x === key;\n    }\n    x.lastIndex = 0;\n    return x.test(key);\n  });\n};\nvar cache = new QuickLru({\n  maxSize: 100000\n});\n\n// Reproduces behavior from `map-obj`\nvar isObject = function isObject(value) {\n  return typeof value === 'object' && value !== null && !(value instanceof RegExp) && !(value instanceof Error) && !(value instanceof Date);\n};\nvar camelCaseConvert = function camelCaseConvert(input, options) {\n  if (!isObject(input)) {\n    return input;\n  }\n  options = _objectSpread({\n    deep: false,\n    pascalCase: false\n  }, options);\n  var _options = options,\n    exclude = _options.exclude,\n    pascalCase = _options.pascalCase,\n    stopPaths = _options.stopPaths,\n    deep = _options.deep;\n  var stopPathsSet = new Set(stopPaths);\n  var _makeMapper = function makeMapper(parentPath) {\n    return function (key, value) {\n      if (deep && isObject(value)) {\n        var path = parentPath === undefined ? key : \"\".concat(parentPath, \".\").concat(key);\n        if (!stopPathsSet.has(path)) {\n          value = mapObj(value, _makeMapper(path));\n        }\n      }\n      if (!(exclude && has(exclude, key))) {\n        var cacheKey = pascalCase ? \"\".concat(key, \"_\") : key;\n        if (cache.has(cacheKey)) {\n          key = cache.get(cacheKey);\n        } else {\n          var ret = camelCase(key, {\n            pascalCase: pascalCase\n          });\n          if (key.length < 100) {\n            // Prevent abuse\n            cache.set(cacheKey, ret);\n          }\n          key = ret;\n        }\n      }\n      return [key, value];\n    };\n  };\n  return mapObj(input, _makeMapper(undefined));\n};\nmodule.exports = function (input, options) {\n  if (Array.isArray(input)) {\n    return Object.keys(input).map(function (key) {\n      return camelCaseConvert(input[key], options);\n    });\n  }\n  return camelCaseConvert(input, options);\n};","map":null,"metadata":{},"sourceType":"script"}