{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\test\\\\mbti-match-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\test\\\\mbti-match-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\test\\\\mbti-match-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{useSelector,useDispatch}from'react-redux';// import { withRouter } from 'react-router-dom';\nimport LoginForm from'../components/Login/LoginForm';import Logo from'../components/Logo/Logo';import{changeLoginForm,getGeolocation,successUserAuthentication}from'../actions';import{postLogin}from'../api';import{objectKeysToCamelCase}from'../utility/formattingData';import{Auth}from'aws-amplify';import awsconfig from'../aws-config';import{Amplify}from'aws-amplify';Amplify.configure(awsconfig);var Login=function Login(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var login=useSelector(function(state){return state.login;});var dispatch=useDispatch();var navigate=useNavigate();var handleLoginSuccess=function handleLoginSuccess(){navigate('/profile');// ✅ v6 방식\n};useEffect(function(){var getPosition=function getPosition(){return new Promise(function(resolve,reject){navigator.geolocation.getCurrentPosition(resolve,reject);},React.createElement(\"button\",{onClick:handleLoginSuccess},\"\\uB85C\\uADF8\\uC778\"));};getPosition().then(function(position){console.log(position.coords);dispatch(getGeolocation('login',{latitude:position.coords.latitude,longitude:position.coords.longitude}));}).catch(function(error){setError('현재 위치를 받아올 수 없습니다.');});},[dispatch]);var onChange=function onChange(ev){var _ev$target=ev.target,value=_ev$target.value,name=_ev$target.name;dispatch(changeLoginForm({name:name,value:value}));};var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(ev){var user,jwt,res,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:ev.preventDefault();_context.prev=1;_context.next=4;return Auth.signIn(login.email,login.password);case 4:user=_context.sent;jwt=user.signInUserSession.idToken.jwtToken;// ✅ JWT 저장\nlocalStorage.setItem('jwt',jwt);// ✅ 백엔드에서 유저 정보 요청 (API Gateway + Lambda)\n_context.next=9;return fetch('https://wfqynf004c.execute-api.ap-northeast-2.amazonaws.com/prod/auth/user',{method:'GET',headers:{Authorization:\"Bearer \".concat(jwt)}});case 9:res=_context.sent;_context.next=12;return res.json();case 12:data=_context.sent;console.log('✅ 유저 정보:',data);// ✅ Redux 저장\ndispatch(successUserAuthentication(objectKeysToCamelCase(data.user)));// ✅ 이동\nnavigate('/profile');_context.next=22;break;case 18:_context.prev=18;_context.t0=_context[\"catch\"](1);console.error('로그인 실패:',_context.t0);setError('로그인에 실패했습니다.');case 22:case\"end\":return _context.stop();}}},_callee,null,[[1,18]]);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();return React.createElement(React.Fragment,null,React.createElement(Logo,null),React.createElement(LoginForm,{onChange:onChange,onSubmit:onSubmit,error:error,login:login}));};export default Login;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useSelector","useDispatch","LoginForm","Logo","changeLoginForm","getGeolocation","successUserAuthentication","postLogin","objectKeysToCamelCase","Auth","awsconfig","Amplify","configure","Login","_useState","_useState2","_slicedToArray","error","setError","login","state","dispatch","navigate","handleLoginSuccess","getPosition","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","createElement","onClick","then","position","console","log","coords","latitude","longitude","catch","onChange","ev","_ev$target","target","value","name","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","jwt","res","data","wrap","_callee$","_context","prev","next","preventDefault","signIn","email","password","sent","signInUserSession","idToken","jwtToken","localStorage","setItem","fetch","method","headers","Authorization","concat","json","t0","stop","_x","apply","arguments","Fragment"],"sources":["C:/test/mbti-match-client/src/containers/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n// import { withRouter } from 'react-router-dom';\nimport LoginForm from '../components/Login/LoginForm';\nimport Logo from '../components/Logo/Logo';\nimport {\n  changeLoginForm,\n  getGeolocation,\n  successUserAuthentication\n} from '../actions';\nimport { postLogin } from '../api';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\nimport { Auth } from 'aws-amplify';\nimport awsconfig from '../aws-config';\nimport { Amplify } from 'aws-amplify';\n\nAmplify.configure(awsconfig);\n\n\nconst Login = () => {\n  const [error, setError] = useState('');\n  const login = useSelector(state => state.login);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleLoginSuccess = () => {\n    navigate('/profile'); // ✅ v6 방식\n  };\n\n  useEffect(() => {\n    const getPosition = () => {\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      },\n      <button onClick={handleLoginSuccess}>로그인</button>);\n    };\n\n    getPosition()\n      .then(position => {\n        console.log(position.coords);\n        dispatch(\n          getGeolocation('login', {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          })\n        );\n      })\n      .catch(error => {\n        setError('현재 위치를 받아올 수 없습니다.');\n      });\n  }, [dispatch]);\n\n  const onChange = ev => {\n    const { value, name } = ev.target;\n    dispatch(\n      changeLoginForm({\n        name,\n        value\n      })\n    );\n  };\n\n  const onSubmit = async ev => {\n    ev.preventDefault();\n    try {\n      // ✅ Cognito 로그인\n      const user = await Auth.signIn(login.email, login.password);\n      const jwt = user.signInUserSession.idToken.jwtToken;\n  \n      // ✅ JWT 저장\n      localStorage.setItem('jwt', jwt);\n  \n      // ✅ 백엔드에서 유저 정보 요청 (API Gateway + Lambda)\n      const res = await fetch('https://wfqynf004c.execute-api.ap-northeast-2.amazonaws.com/prod/auth/user', {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${jwt}`,\n        },\n      });\n  \n      const data = await res.json();\n      console.log('✅ 유저 정보:', data);\n  \n      // ✅ Redux 저장\n      dispatch(successUserAuthentication(objectKeysToCamelCase(data.user)));\n  \n      // ✅ 이동\n      navigate('/profile');\n  \n    } catch (err) {\n      console.error('로그인 실패:', err);\n      setError('로그인에 실패했습니다.');\n    }\n  };\n\n  return (\n    <>\n      <Logo />\n      <LoginForm\n        onChange={onChange}\n        onSubmit={onSubmit}\n        error={error}\n        login={login}\n      />\n    </>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}