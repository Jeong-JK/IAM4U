{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\test\\\\mbti-match-client-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\test\\\\mbti-match-client-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import React from'react';import{Link}from'react-router-dom';import'./login.scss';var LoginForm=function LoginForm(_ref){var onSubmit=_ref.onSubmit,onChange=_ref.onChange,login=_ref.login,error=_ref.error;var renderErrors='';if(Array.isArray(error)){renderErrors=error.map(function(error){return React.createElement(\"p\",{className:\"error\"},error);});}else{renderErrors=React.createElement(\"p\",{className:\"error\"},error);}return React.createElement(\"div\",{className:\"loginForm form\"},React.createElement(\"div\",{className:\"errors\"},renderErrors),React.createElement(\"form\",{onSubmit:onSubmit},React.createElement(\"input\",{type:\"email\",name:\"email\",placeholder:\"email\",maxLength:\"80\",value:login.email,onChange:onChange,required:true}),React.createElement(\"input\",{type:\"password\",name:\"password\",placeholder:\"password\",value:login.password,onChange:onChange,required:true}),React.createElement(\"button\",null,\"Login\")),React.createElement(Link,{to:\"/signup\",className:\"button\"},\"Sign up\"));};var handleLogin=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var user,jwt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return Auth.signIn(email,password);case 3:user=_context.sent;jwt=user.signInUserSession.idToken.jwtToken;localStorage.setItem('jwt',jwt);alert('로그인 성공!');_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.error('로그인 실패:',_context.t0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function handleLogin(){return _ref2.apply(this,arguments);};}();export default LoginForm;","map":{"version":3,"names":["React","Link","LoginForm","_ref","onSubmit","onChange","login","error","renderErrors","Array","isArray","map","createElement","className","type","name","placeholder","maxLength","value","email","required","password","to","handleLogin","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","jwt","wrap","_callee$","_context","prev","next","Auth","signIn","sent","signInUserSession","idToken","jwtToken","localStorage","setItem","alert","t0","console","stop","apply","arguments"],"sources":["C:/test/mbti-match-client-master/src/components/Login/LoginForm.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './login.scss';\n\nconst LoginForm = ({ onSubmit, onChange, login, error }) => {\n  let renderErrors = '';\n  if (Array.isArray(error)) {\n    renderErrors = error.map(error => <p className=\"error\">{error}</p>);\n  } else {\n    renderErrors = <p className=\"error\">{error}</p>;\n  }\n  return (\n    <div className=\"loginForm form\">\n      <div className=\"errors\">{renderErrors}</div>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"email\"\n          maxLength=\"80\"\n          value={login.email}\n          onChange={onChange}\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"password\"\n          value={login.password}\n          onChange={onChange}\n          required\n        />\n        <button>Login</button>\n      </form>\n      <Link to=\"/signup\" className=\"button\">\n        Sign up\n      </Link>\n    </div>\n  );\n};\n\nconst handleLogin = async () => {\n  try {\n    const user = await Auth.signIn(email, password);\n    const jwt = user.signInUserSession.idToken.jwtToken;\n    localStorage.setItem('jwt', jwt);\n    alert('로그인 성공!');\n  } catch (error) {\n    console.error('로그인 실패:', error);\n  }\n};\nexport default LoginForm;\n"],"mappings":"yTAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,IAAI,KAAQ,kBAAkB,CACvC,MAAO,cAAc,CAErB,GAAM,CAAAC,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAAC,IAAA,CAA6C,IAAvC,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CAAEC,QAAQ,CAAAF,IAAA,CAARE,QAAQ,CAAEC,KAAK,CAAAH,IAAA,CAALG,KAAK,CAAEC,KAAK,CAAAJ,IAAA,CAALI,KAAK,CACnD,GAAI,CAAAC,YAAY,CAAG,EAAE,CACrB,GAAIC,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,CAAE,CACxBC,YAAY,CAAGD,KAAK,CAACI,GAAG,CAAC,SAAAJ,KAAK,QAAI,CAAAP,KAAA,CAAAY,aAAA,MAAGC,SAAS,CAAC,OAAO,EAAEN,KAAS,CAAC,GAAC,CACrE,CAAC,IAAM,CACLC,YAAY,CAAGR,KAAA,CAAAY,aAAA,MAAGC,SAAS,CAAC,OAAO,EAAEN,KAAS,CAAC,CACjD,CACA,MACE,CAAAP,KAAA,CAAAY,aAAA,QAAKC,SAAS,CAAC,gBAAgB,EAC7Bb,KAAA,CAAAY,aAAA,QAAKC,SAAS,CAAC,QAAQ,EAAEL,YAAkB,CAAC,CAC5CR,KAAA,CAAAY,aAAA,SAAMR,QAAQ,CAAEA,QAAS,EACvBJ,KAAA,CAAAY,aAAA,UACEE,IAAI,CAAC,OAAO,CACZC,IAAI,CAAC,OAAO,CACZC,WAAW,CAAC,OAAO,CACnBC,SAAS,CAAC,IAAI,CACdC,KAAK,CAAEZ,KAAK,CAACa,KAAM,CACnBd,QAAQ,CAAEA,QAAS,CACnBe,QAAQ,MACT,CAAC,CACFpB,KAAA,CAAAY,aAAA,UACEE,IAAI,CAAC,UAAU,CACfC,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,UAAU,CACtBE,KAAK,CAAEZ,KAAK,CAACe,QAAS,CACtBhB,QAAQ,CAAEA,QAAS,CACnBe,QAAQ,MACT,CAAC,CACFpB,KAAA,CAAAY,aAAA,eAAQ,OAAa,CACjB,CAAC,CACPZ,KAAA,CAAAY,aAAA,CAACX,IAAI,EAACqB,EAAE,CAAC,SAAS,CAACT,SAAS,CAAC,QAAQ,EAAC,SAEhC,CACH,CAAC,CAEV,CAAC,CAED,GAAM,CAAAU,WAAW,6BAAAC,KAAA,CAAAC,iBAAA,cAAAC,mBAAA,CAAAC,IAAA,CAAG,SAAAC,QAAA,MAAAC,IAAA,CAAAC,GAAA,QAAAJ,mBAAA,CAAAK,IAAA,UAAAC,SAAAC,QAAA,kBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA,SAEG,CAAAC,IAAI,CAACC,MAAM,CAAClB,KAAK,CAAEE,QAAQ,CAAC,QAAzCQ,IAAI,CAAAI,QAAA,CAAAK,IAAA,CACJR,GAAG,CAAGD,IAAI,CAACU,iBAAiB,CAACC,OAAO,CAACC,QAAQ,CACnDC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAEb,GAAG,CAAC,CAChCc,KAAK,CAAC,SAAS,CAAC,CAACX,QAAA,CAAAE,IAAA,iBAAAF,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAY,EAAA,CAAAZ,QAAA,aAEjBa,OAAO,CAACvC,KAAK,CAAC,SAAS,CAAA0B,QAAA,CAAAY,EAAO,CAAC,CAAC,yBAAAZ,QAAA,CAAAc,IAAA,OAAAnB,OAAA,gBAEnC,kBATK,CAAAL,WAAWA,CAAA,SAAAC,KAAA,CAAAwB,KAAA,MAAAC,SAAA,OAShB,CACD,cAAe,CAAA/C,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}