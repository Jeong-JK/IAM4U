{"ast":null,"code":"import { CHANGE_REGISTER_FORM, CHANGE_LOGIN_FORM, GET_GEOLOCATION, SUCCESS_USER_AUTHENTICATION, LOAD_USERS_SUCCESS, INCREASE_CHOICE_COUNT, RESET_CHOICE_COUNT, INCREASE_PAGE_INDEX, LOAD_CHATS_LIST_SUCCESS, ENTER_CHAT_ROOM, ADD_NEW_MESSAGE, LEAVE_ROOM, CHANGE_EDIT_FORM, CONFIRMED_NOT_AUTHENTICATED, USER_LOGOUT, SUCCESS_USER_DATA_UPDATE, SUCCESS_REGISTER_MEMBER, SELECTED_ALL_MEMBERS, NONE_CHATS, ADD_NEW_USERS_LIST, LEAVE_MEMBERS_LIST } from '../contants/actionTypes';\n// import { useEffect } from 'react';\n// import { useSelector } from 'react-redux';\n// import { useNavigate } from 'react-router-dom';\n\nexport const CHECK_USER_NOT_LOGIN = 'CHECK_USER_NOT_LOGIN';\nexport const changeRegisterForm = ({\n  name,\n  value\n}) => ({\n  type: CHANGE_REGISTER_FORM,\n  name,\n  value\n});\nexport const changeLoginForm = ({\n  name,\n  value\n}) => ({\n  type: CHANGE_LOGIN_FORM,\n  name,\n  value\n});\nexport const checkUserNotLogin = () => ({\n  type: CHECK_USER_NOT_LOGIN\n});\nexport const registerMember = ({\n  user,\n  isAuthenticated\n}) => {\n  return {\n    type: SUCCESS_REGISTER_MEMBER,\n    user,\n    edit: {\n      mbti: user.mbti.type,\n      name: user.name,\n      description: user.description\n    },\n    isAuthenticated\n  };\n};\nexport const logoutUser = () => ({\n  type: USER_LOGOUT\n});\nexport const changeEditForm = ({\n  name,\n  value\n}) => ({\n  type: CHANGE_EDIT_FORM,\n  name,\n  value\n});\nexport const getGeolocation = (state, location) => ({\n  type: GET_GEOLOCATION,\n  state,\n  location\n});\nexport const successUserAuthentication = user => ({\n  type: SUCCESS_USER_AUTHENTICATION,\n  user,\n  edit: {\n    mbti: user.mbti.type,\n    name: user.name,\n    description: user.description\n  }\n});\nexport const changeUserData = user => ({\n  type: SUCCESS_USER_DATA_UPDATE,\n  user\n});\nexport const loadUsersSuccess = data => ({\n  type: LOAD_USERS_SUCCESS,\n  users: data.users,\n  totalUserCount: data.totalUserCount\n});\nexport const increaseChoiceCount = () => ({\n  type: INCREASE_CHOICE_COUNT\n});\nexport const resetChoiceCount = () => ({\n  type: RESET_CHOICE_COUNT\n});\nexport const increasePageIndex = () => ({\n  type: INCREASE_PAGE_INDEX\n});\nexport const noticeSelectedAll = () => ({\n  type: SELECTED_ALL_MEMBERS\n});\nexport const loadChatsListSuccess = chats => ({\n  type: LOAD_CHATS_LIST_SUCCESS,\n  chats\n});\nexport const addNewMessage = newMessage => ({\n  type: ADD_NEW_MESSAGE,\n  newMessage\n});\nexport const enterChatRoom = chat => ({\n  type: ENTER_CHAT_ROOM,\n  chat\n});\nexport const leaveRoom = () => ({\n  type: LEAVE_ROOM\n});\nexport const noticeNoneChats = () => ({\n  type: NONE_CHATS\n});\nexport const addNewUsers = data => ({\n  type: ADD_NEW_USERS_LIST,\n  users: data.users\n});\nexport const leaveMemberList = () => ({\n  type: LEAVE_MEMBERS_LIST\n});\n\n// export const LoginRedirect = () => {\n//   const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (!isAuthenticated) {\n//       navigate('/login');\n//     }\n//   }, [isAuthenticated]);\n\n//   return null;\n// };","map":{"version":3,"names":["CHANGE_REGISTER_FORM","CHANGE_LOGIN_FORM","GET_GEOLOCATION","SUCCESS_USER_AUTHENTICATION","LOAD_USERS_SUCCESS","INCREASE_CHOICE_COUNT","RESET_CHOICE_COUNT","INCREASE_PAGE_INDEX","LOAD_CHATS_LIST_SUCCESS","ENTER_CHAT_ROOM","ADD_NEW_MESSAGE","LEAVE_ROOM","CHANGE_EDIT_FORM","CONFIRMED_NOT_AUTHENTICATED","USER_LOGOUT","SUCCESS_USER_DATA_UPDATE","SUCCESS_REGISTER_MEMBER","SELECTED_ALL_MEMBERS","NONE_CHATS","ADD_NEW_USERS_LIST","LEAVE_MEMBERS_LIST","CHECK_USER_NOT_LOGIN","changeRegisterForm","name","value","type","changeLoginForm","checkUserNotLogin","registerMember","user","isAuthenticated","edit","mbti","description","logoutUser","changeEditForm","getGeolocation","state","location","successUserAuthentication","changeUserData","loadUsersSuccess","data","users","totalUserCount","increaseChoiceCount","resetChoiceCount","increasePageIndex","noticeSelectedAll","loadChatsListSuccess","chats","addNewMessage","newMessage","enterChatRoom","chat","leaveRoom","noticeNoneChats","addNewUsers","leaveMemberList"],"sources":["C:/test/mbti-match-client/src/actions/index.js"],"sourcesContent":["import {\n  CHANGE_REGISTER_FORM,\n  CHANGE_LOGIN_FORM,\n  GET_GEOLOCATION,\n  SUCCESS_USER_AUTHENTICATION,\n  LOAD_USERS_SUCCESS,\n  INCREASE_CHOICE_COUNT,\n  RESET_CHOICE_COUNT,\n  INCREASE_PAGE_INDEX,\n  LOAD_CHATS_LIST_SUCCESS,\n  ENTER_CHAT_ROOM,\n  ADD_NEW_MESSAGE,\n  LEAVE_ROOM,\n  CHANGE_EDIT_FORM,\n  CONFIRMED_NOT_AUTHENTICATED,\n  USER_LOGOUT,\n  SUCCESS_USER_DATA_UPDATE,\n  SUCCESS_REGISTER_MEMBER,\n  SELECTED_ALL_MEMBERS,\n  NONE_CHATS,\n  ADD_NEW_USERS_LIST,\n  LEAVE_MEMBERS_LIST\n} from '../contants/actionTypes';\n// import { useEffect } from 'react';\n// import { useSelector } from 'react-redux';\n// import { useNavigate } from 'react-router-dom';\n\nexport const CHECK_USER_NOT_LOGIN = 'CHECK_USER_NOT_LOGIN';\n\nexport const changeRegisterForm = ({ name, value }) => ({\n  type: CHANGE_REGISTER_FORM,\n  name,\n  value\n});\n\nexport const changeLoginForm = ({ name, value }) => ({\n  type: CHANGE_LOGIN_FORM,\n  name,\n  value\n});\n\nexport const checkUserNotLogin = () => ({\n  type: CHECK_USER_NOT_LOGIN\n});\n\nexport const registerMember = ({ user, isAuthenticated }) => {\n  return {\n    type: SUCCESS_REGISTER_MEMBER,\n    user,\n    edit: {\n      mbti: user.mbti.type,\n      name: user.name,\n      description: user.description\n    },\n    isAuthenticated\n  };\n};\n\nexport const logoutUser = () => ({\n  type: USER_LOGOUT\n});\n\nexport const changeEditForm = ({ name, value }) => ({\n  type: CHANGE_EDIT_FORM,\n  name,\n  value\n});\n\nexport const getGeolocation = (state, location) => ({\n  type: GET_GEOLOCATION,\n  state,\n  location\n});\n\nexport const successUserAuthentication = user => ({\n  type: SUCCESS_USER_AUTHENTICATION,\n  user,\n  edit: {\n    mbti: user.mbti.type,\n    name: user.name,\n    description: user.description\n  }\n});\n\nexport const changeUserData = user => ({\n  type: SUCCESS_USER_DATA_UPDATE,\n  user\n});\n\nexport const loadUsersSuccess = data => ({\n  type: LOAD_USERS_SUCCESS,\n  users: data.users,\n  totalUserCount: data.totalUserCount\n});\n\nexport const increaseChoiceCount = () => ({\n  type: INCREASE_CHOICE_COUNT\n});\n\nexport const resetChoiceCount = () => ({\n  type: RESET_CHOICE_COUNT\n});\n\nexport const increasePageIndex = () => ({\n  type: INCREASE_PAGE_INDEX\n});\n\nexport const noticeSelectedAll = () => ({\n  type: SELECTED_ALL_MEMBERS\n});\n\nexport const loadChatsListSuccess = chats => ({\n  type: LOAD_CHATS_LIST_SUCCESS,\n  chats\n});\n\nexport const addNewMessage = newMessage => ({\n  type: ADD_NEW_MESSAGE,\n  newMessage\n});\n\nexport const enterChatRoom = chat => ({\n  type: ENTER_CHAT_ROOM,\n  chat\n});\n\nexport const leaveRoom = () => ({\n  type: LEAVE_ROOM\n});\n\nexport const noticeNoneChats = () => ({\n  type: NONE_CHATS\n});\n\nexport const addNewUsers = data => ({\n  type: ADD_NEW_USERS_LIST,\n  users: data.users\n});\n\nexport const leaveMemberList = () => ({\n  type: LEAVE_MEMBERS_LIST\n});\n\n// export const LoginRedirect = () => {\n//   const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (!isAuthenticated) {\n//       navigate('/login');\n//     }\n//   }, [isAuthenticated]);\n\n//   return null;\n// };\n"],"mappings":"AAAA,SACEA,oBAAoB,EACpBC,iBAAiB,EACjBC,eAAe,EACfC,2BAA2B,EAC3BC,kBAAkB,EAClBC,qBAAqB,EACrBC,kBAAkB,EAClBC,mBAAmB,EACnBC,uBAAuB,EACvBC,eAAe,EACfC,eAAe,EACfC,UAAU,EACVC,gBAAgB,EAChBC,2BAA2B,EAC3BC,WAAW,EACXC,wBAAwB,EACxBC,uBAAuB,EACvBC,oBAAoB,EACpBC,UAAU,EACVC,kBAAkB,EAClBC,kBAAkB,QACb,yBAAyB;AAChC;AACA;AACA;;AAEA,OAAO,MAAMC,oBAAoB,GAAG,sBAAsB;AAE1D,OAAO,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAM,CAAC,MAAM;EACtDC,IAAI,EAAEzB,oBAAoB;EAC1BuB,IAAI;EACJC;AACF,CAAC,CAAC;AAEF,OAAO,MAAME,eAAe,GAAGA,CAAC;EAAEH,IAAI;EAAEC;AAAM,CAAC,MAAM;EACnDC,IAAI,EAAExB,iBAAiB;EACvBsB,IAAI;EACJC;AACF,CAAC,CAAC;AAEF,OAAO,MAAMG,iBAAiB,GAAGA,CAAA,MAAO;EACtCF,IAAI,EAAEJ;AACR,CAAC,CAAC;AAEF,OAAO,MAAMO,cAAc,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAgB,CAAC,KAAK;EAC3D,OAAO;IACLL,IAAI,EAAET,uBAAuB;IAC7Ba,IAAI;IACJE,IAAI,EAAE;MACJC,IAAI,EAAEH,IAAI,CAACG,IAAI,CAACP,IAAI;MACpBF,IAAI,EAAEM,IAAI,CAACN,IAAI;MACfU,WAAW,EAAEJ,IAAI,CAACI;IACpB,CAAC;IACDH;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMI,UAAU,GAAGA,CAAA,MAAO;EAC/BT,IAAI,EAAEX;AACR,CAAC,CAAC;AAEF,OAAO,MAAMqB,cAAc,GAAGA,CAAC;EAAEZ,IAAI;EAAEC;AAAM,CAAC,MAAM;EAClDC,IAAI,EAAEb,gBAAgB;EACtBW,IAAI;EACJC;AACF,CAAC,CAAC;AAEF,OAAO,MAAMY,cAAc,GAAGA,CAACC,KAAK,EAAEC,QAAQ,MAAM;EAClDb,IAAI,EAAEvB,eAAe;EACrBmC,KAAK;EACLC;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,yBAAyB,GAAGV,IAAI,KAAK;EAChDJ,IAAI,EAAEtB,2BAA2B;EACjC0B,IAAI;EACJE,IAAI,EAAE;IACJC,IAAI,EAAEH,IAAI,CAACG,IAAI,CAACP,IAAI;IACpBF,IAAI,EAAEM,IAAI,CAACN,IAAI;IACfU,WAAW,EAAEJ,IAAI,CAACI;EACpB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMO,cAAc,GAAGX,IAAI,KAAK;EACrCJ,IAAI,EAAEV,wBAAwB;EAC9Bc;AACF,CAAC,CAAC;AAEF,OAAO,MAAMY,gBAAgB,GAAGC,IAAI,KAAK;EACvCjB,IAAI,EAAErB,kBAAkB;EACxBuC,KAAK,EAAED,IAAI,CAACC,KAAK;EACjBC,cAAc,EAAEF,IAAI,CAACE;AACvB,CAAC,CAAC;AAEF,OAAO,MAAMC,mBAAmB,GAAGA,CAAA,MAAO;EACxCpB,IAAI,EAAEpB;AACR,CAAC,CAAC;AAEF,OAAO,MAAMyC,gBAAgB,GAAGA,CAAA,MAAO;EACrCrB,IAAI,EAAEnB;AACR,CAAC,CAAC;AAEF,OAAO,MAAMyC,iBAAiB,GAAGA,CAAA,MAAO;EACtCtB,IAAI,EAAElB;AACR,CAAC,CAAC;AAEF,OAAO,MAAMyC,iBAAiB,GAAGA,CAAA,MAAO;EACtCvB,IAAI,EAAER;AACR,CAAC,CAAC;AAEF,OAAO,MAAMgC,oBAAoB,GAAGC,KAAK,KAAK;EAC5CzB,IAAI,EAAEjB,uBAAuB;EAC7B0C;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,aAAa,GAAGC,UAAU,KAAK;EAC1C3B,IAAI,EAAEf,eAAe;EACrB0C;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,aAAa,GAAGC,IAAI,KAAK;EACpC7B,IAAI,EAAEhB,eAAe;EACrB6C;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAGA,CAAA,MAAO;EAC9B9B,IAAI,EAAEd;AACR,CAAC,CAAC;AAEF,OAAO,MAAM6C,eAAe,GAAGA,CAAA,MAAO;EACpC/B,IAAI,EAAEP;AACR,CAAC,CAAC;AAEF,OAAO,MAAMuC,WAAW,GAAGf,IAAI,KAAK;EAClCjB,IAAI,EAAEN,kBAAkB;EACxBwB,KAAK,EAAED,IAAI,CAACC;AACd,CAAC,CAAC;AAEF,OAAO,MAAMe,eAAe,GAAGA,CAAA,MAAO;EACpCjC,IAAI,EAAEL;AACR,CAAC,CAAC;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module"}