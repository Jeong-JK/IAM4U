{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = require(\"C:\\\\test\\\\mbti-match-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\nvar _defineProperty = require(\"C:\\\\test\\\\mbti-match-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/defineProperty\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar isObject = function isObject(value) {\n  return typeof value === 'object' && value !== null;\n};\nvar mapObjectSkip = Symbol('skip');\n\n// Customized for this use-case\nvar isObjectCustom = function isObjectCustom(value) {\n  return isObject(value) && !(value instanceof RegExp) && !(value instanceof Error) && !(value instanceof Date);\n};\nvar _mapObject = function mapObject(object, mapper, options) {\n  var isSeen = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new WeakMap();\n  options = _objectSpread({\n    deep: false,\n    target: {}\n  }, options);\n  if (isSeen.has(object)) {\n    return isSeen.get(object);\n  }\n  isSeen.set(object, options.target);\n  var _options = options,\n    target = _options.target;\n  delete options.target;\n  var mapArray = function mapArray(array) {\n    return array.map(function (element) {\n      return isObjectCustom(element) ? _mapObject(element, mapper, options, isSeen) : element;\n    });\n  };\n  if (Array.isArray(object)) {\n    return mapArray(object);\n  }\n  for (var _i = 0, _Object$entries = Object.entries(object); _i < _Object$entries.length; _i++) {\n    var _ref = _Object$entries[_i];\n    var _ref2 = _slicedToArray(_ref, 2);\n    var key = _ref2[0];\n    var value = _ref2[1];\n    var mapResult = mapper(key, value, object);\n    if (mapResult === mapObjectSkip) {\n      continue;\n    }\n    var _mapResult = _slicedToArray(mapResult, 3),\n      newKey = _mapResult[0],\n      newValue = _mapResult[1],\n      _mapResult$ = _mapResult[2];\n    _mapResult$ = _mapResult$ === void 0 ? {} : _mapResult$;\n    var _mapResult$$shouldRec = _mapResult$.shouldRecurse,\n      shouldRecurse = _mapResult$$shouldRec === void 0 ? true : _mapResult$$shouldRec; // Drop `__proto__` keys.\n    if (newKey === '__proto__') {\n      continue;\n    }\n    if (options.deep && shouldRecurse && isObjectCustom(newValue)) {\n      newValue = Array.isArray(newValue) ? mapArray(newValue) : _mapObject(newValue, mapper, options, isSeen);\n    }\n    target[newKey] = newValue;\n  }\n  return target;\n};\nmodule.exports = function (object, mapper, options) {\n  if (!isObject(object)) {\n    throw new TypeError(\"Expected an object, got `\".concat(object, \"` (\").concat(typeof object, \")\"));\n  }\n  return _mapObject(object, mapper, options);\n};\nmodule.exports.mapObjectSkip = mapObjectSkip;","map":null,"metadata":{},"sourceType":"script"}