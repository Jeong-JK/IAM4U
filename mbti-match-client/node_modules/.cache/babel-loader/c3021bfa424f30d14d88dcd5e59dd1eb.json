{"ast":null,"code":"import _slicedToArray from \"C:\\\\test\\\\mbti-match-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\test\\\\mbti-match-client\\\\src\\\\containers\\\\ChatView.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport InputPanel from '../components/ChatView/InputPanel';\nimport View from '../components/ChatView/View';\nimport BackTab from '../components/BackTab/BackTab';\nimport { useParams } from 'react-router-dom';\nimport { getChat, postNewMessage } from '../api';\nimport { enterChatRoom, addNewMessage, leaveRoom } from '../actions';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\nconst ChatView = () => {\n  const _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setMessage = _useState2[1];\n  const _useSelector = useSelector(state => ({\n      client: state.client,\n      user: state.user,\n      currentRoomChat: state.currentRoomChat\n    })),\n    client = _useSelector.client,\n    user = _useSelector.user,\n    currentRoomChat = _useSelector.currentRoomChat;\n  const dispatch = useDispatch();\n  const _useParams = useParams(),\n    roomId = _useParams.roomId;\n  const userId = user.id;\n  useEffect(() => {\n    const setChat = async () => {\n      const chat = await getChat(roomId);\n      dispatch(enterChatRoom(objectKeysToCamelCase(chat)));\n    };\n    setChat();\n    client.joinRoom({\n      roomId,\n      userId\n    });\n    client.receiveNewMessage(data => {\n      dispatch(addNewMessage({\n        createAt: new Date(),\n        content: data.message,\n        speaker: data.userId\n      }));\n    });\n    return () => {\n      client.leaveRoom(roomId);\n      dispatch(leaveRoom());\n    };\n  }, []);\n  const onMessageChange = ev => {\n    const value = ev.currentTarget.value;\n    setMessage(value);\n  };\n  const handleSubmit = () => {\n    if (!message) return;\n    client.sendMessage({\n      roomId,\n      userId,\n      message\n    });\n    postNewMessage(roomId, {\n      message\n    });\n    setMessage('');\n  };\n  const handleKeyPress = ev => {\n    if (ev.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n  return React.createElement(React.Fragment, null, currentRoomChat.hasOwnProperty('partner') && React.createElement(BackTab, {\n    title: currentRoomChat.partner.name || '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(View, {\n    chats: currentRoomChat,\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(InputPanel, {\n    onMessageChange: onMessageChange,\n    message: message,\n    onKeyPress: handleKeyPress,\n    onSubmit: handleSubmit,\n    chat: currentRoomChat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n};\nexport default ChatView;","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","InputPanel","View","BackTab","useParams","getChat","postNewMessage","enterChatRoom","addNewMessage","leaveRoom","objectKeysToCamelCase","ChatView","_useState","_useState2","_slicedToArray","message","setMessage","_useSelector","state","client","user","currentRoomChat","dispatch","_useParams","roomId","userId","id","setChat","chat","joinRoom","receiveNewMessage","data","createAt","Date","content","speaker","onMessageChange","ev","value","currentTarget","handleSubmit","sendMessage","handleKeyPress","key","createElement","Fragment","hasOwnProperty","title","partner","name","__source","fileName","_jsxFileName","lineNumber","__self","chats","onKeyPress","onSubmit"],"sources":["C:/test/mbti-match-client/src/containers/ChatView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport InputPanel from '../components/ChatView/InputPanel';\nimport View from '../components/ChatView/View';\nimport BackTab from '../components/BackTab/BackTab';\nimport { useParams } from 'react-router-dom';\nimport { getChat, postNewMessage } from '../api';\nimport { enterChatRoom, addNewMessage, leaveRoom } from '../actions';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\n\nconst ChatView = () => {\n  const [message, setMessage] = useState('');\n  const { client, user, currentRoomChat } = useSelector(state => ({\n    client: state.client,\n    user: state.user,\n    currentRoomChat: state.currentRoomChat\n  }));\n  const dispatch = useDispatch();\n  const { roomId } = useParams();\n  const userId = user.id;\n\n  useEffect(() => {\n    const setChat = async () => {\n      const chat = await getChat(roomId);\n      dispatch(enterChatRoom(objectKeysToCamelCase(chat)));\n    };\n\n    setChat();\n\n    client.joinRoom({ roomId, userId });\n\n    client.receiveNewMessage(data => {\n      dispatch(\n        addNewMessage({\n          createAt: new Date(),\n          content: data.message,\n          speaker: data.userId\n        })\n      );\n    });\n\n    return () => {\n      client.leaveRoom(roomId);\n      dispatch(leaveRoom());\n    };\n  }, []);\n\n  const onMessageChange = ev => {\n    const { value } = ev.currentTarget;\n    setMessage(value);\n  };\n\n  const handleSubmit = () => {\n    if (!message) return;\n    client.sendMessage({ roomId, userId, message });\n    postNewMessage(roomId, { message });\n    setMessage('');\n  };\n\n  const handleKeyPress = ev => {\n    if (ev.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  return (\n    <>\n      {currentRoomChat.hasOwnProperty('partner') && (\n        <BackTab title={currentRoomChat.partner.name || ''} />\n      )}\n      <View chats={currentRoomChat} user={user} />\n      <InputPanel\n        onMessageChange={onMessageChange}\n        message={message}\n        onKeyPress={handleKeyPress}\n        onSubmit={handleSubmit}\n        chat={currentRoomChat}\n      />\n    </>\n  );\n};\n\nexport default ChatView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}