{"ast":null,"code":"import _slicedToArray from \"C:\\\\test\\\\mbti-match-client-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\test\\\\mbti-match-client-master\\\\src\\\\containers\\\\Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n// import { withRouter } from 'react-router-dom';\nimport LoginForm from '../components/Login/LoginForm';\nimport Logo from '../components/Logo/Logo';\nimport { changeLoginForm, getGeolocation, successUserAuthentication } from '../actions';\nimport { postLogin } from '../api';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\nimport { Auth } from 'aws-amplify';\nimport awsconfig from '../aws-config'; // 또는 './aws-exports'\nimport { Amplify } from 'aws-amplify';\nAmplify.configure(awsconfig);\nconst handleLogin = async () => {\n  try {\n    // const user = await Auth.signIn(email, password); // 기존 로그인 로직이 있을 것\n    const jwt = user.signInUserSession.idToken.jwtToken;\n    localStorage.setItem('jwt', jwt); // ✅ 저장\n    alert('로그인 성공!');\n  } catch (err) {\n    console.error('로그인 실패:', err);\n  }\n};\nconst Login = () => {\n  const _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    error = _useState2[0],\n    setError = _useState2[1];\n  const login = useSelector(state => state.login);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handleLoginSuccess = () => {\n    navigate('/profile'); // ✅ v6 방식\n  };\n  useEffect(() => {\n    const getPosition = () => {\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      }, React.createElement(\"button\", {\n        onClick: handleLoginSuccess,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"\\uB85C\\uADF8\\uC778\"));\n    };\n    getPosition().then(position => {\n      console.log(position.coords);\n      dispatch(getGeolocation('login', {\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      }));\n    }).catch(error => {\n      setError('현재 위치를 받아올 수 없습니다.');\n    });\n  }, [dispatch]);\n  const onChange = ev => {\n    const _ev$target = ev.target,\n      value = _ev$target.value,\n      name = _ev$target.name;\n    dispatch(changeLoginForm({\n      name,\n      value\n    }));\n  };\n  const onSubmit = async ev => {\n    ev.preventDefault();\n    const result = await postLogin(login);\n    if (result.error) {\n      return setError(result.error);\n    }\n    dispatch(successUserAuthentication(objectKeysToCamelCase(result.data.user)));\n    // history.push('/users/list');\n  };\n  return React.createElement(React.Fragment, null, React.createElement(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(LoginForm, {\n    onChange: onChange,\n    onSubmit: onSubmit,\n    error: error,\n    login: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }));\n};\nexport default Login;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useSelector","useDispatch","LoginForm","Logo","changeLoginForm","getGeolocation","successUserAuthentication","postLogin","objectKeysToCamelCase","Auth","awsconfig","Amplify","configure","handleLogin","jwt","user","signInUserSession","idToken","jwtToken","localStorage","setItem","alert","err","console","error","Login","_useState","_useState2","_slicedToArray","setError","login","state","dispatch","navigate","handleLoginSuccess","getPosition","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","createElement","onClick","__source","fileName","_jsxFileName","lineNumber","__self","then","position","log","coords","latitude","longitude","catch","onChange","ev","_ev$target","target","value","name","onSubmit","preventDefault","result","data","Fragment"],"sources":["C:/test/mbti-match-client-master/src/containers/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n// import { withRouter } from 'react-router-dom';\nimport LoginForm from '../components/Login/LoginForm';\nimport Logo from '../components/Logo/Logo';\nimport {\n  changeLoginForm,\n  getGeolocation,\n  successUserAuthentication\n} from '../actions';\nimport { postLogin } from '../api';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\nimport { Auth } from 'aws-amplify';\nimport awsconfig from '../aws-config';       // 또는 './aws-exports'\nimport { Amplify } from 'aws-amplify';\n\nAmplify.configure(awsconfig);\n\nconst handleLogin = async () => {\n  try {\n    // const user = await Auth.signIn(email, password); // 기존 로그인 로직이 있을 것\n    const jwt = user.signInUserSession.idToken.jwtToken;\n    localStorage.setItem('jwt', jwt); // ✅ 저장\n    alert('로그인 성공!');\n  } catch (err) {\n    console.error('로그인 실패:', err);\n  }\n};\n\n\nconst Login = () => {\n  const [error, setError] = useState('');\n  const login = useSelector(state => state.login);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleLoginSuccess = () => {\n    navigate('/profile'); // ✅ v6 방식\n  };\n\n  useEffect(() => {\n    const getPosition = () => {\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      },\n      <button onClick={handleLoginSuccess}>로그인</button>);\n    };\n\n    getPosition()\n      .then(position => {\n        console.log(position.coords);\n        dispatch(\n          getGeolocation('login', {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          })\n        );\n      })\n      .catch(error => {\n        setError('현재 위치를 받아올 수 없습니다.');\n      });\n  }, [dispatch]);\n\n  const onChange = ev => {\n    const { value, name } = ev.target;\n    dispatch(\n      changeLoginForm({\n        name,\n        value\n      })\n    );\n  };\n\n  const onSubmit = async ev => {\n    ev.preventDefault();\n    const result = await postLogin(login);\n    if (result.error) {\n      return setError(result.error);\n    }\n    dispatch(\n      successUserAuthentication(objectKeysToCamelCase(result.data.user))\n    );\n    // history.push('/users/list');\n  };\n\n  return (\n    <>\n      <Logo />\n      <LoginForm\n        onChange={onChange}\n        onSubmit={onSubmit}\n        error={error}\n        login={login}\n      />\n    </>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}