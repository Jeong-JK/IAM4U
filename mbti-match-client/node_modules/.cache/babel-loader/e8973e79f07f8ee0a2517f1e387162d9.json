{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\test\\\\mbti-match-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\test\\\\mbti-match-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\test\\\\mbti-match-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";// import React, { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// // import { withRouter } from 'react-router-dom';\n// import { useSelector, useDispatch } from 'react-redux';\n// import SignupForm from '../components/Signup/SignupForm';\n// import BackTab from '../components/BackTab/BackTab';\n// import { changeRegisterForm, getGeolocation, registerMember } from '../actions';\n// import { objectKeysToCamelCase } from '../utility/formattingData';\n// import { postSignup } from '../api';\n// const Signup = () => {\n//   const [error, setError] = useState('');\n//   const [file, setFile] = useState(null);\n//   const register = useSelector(state => state.register);\n//   const dispatch = useDispatch();\n//   useEffect(() => {\n//     const getPosition = () => {\n//       return new Promise((resolve, reject) => {\n//         navigator.geolocation.getCurrentPosition(resolve, reject);\n//       });\n//     };\n//     getPosition()\n//       .then(position => {\n//         console.log(position.coords);\n//         dispatch(\n//           getGeolocation('register', {\n//             latitude: position.coords.latitude,\n//             longitude: position.coords.longitude\n//           })\n//         );\n//       })\n//       .catch(error => {\n//         setError('현재 위치를 받아올 수 없습니다.');\n//       });\n//   }, [dispatch]);\n//   const onChange = ev => {\n//     const { value, name } = ev.target;\n//     dispatch(\n//       changeRegisterForm({\n//         name,\n//         value\n//       })\n//     );\n//   };\n//   const onFileChange = ev => {\n//     setFile(ev.target.files[0]);\n//   };\n//   const onSubmit = async ev => {\n//     ev.preventDefault();\n//     const passwordReg = new RegExp(\n//       '^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{6,18}$'\n//     );\n//     const { email, password, passwordConfirm, name, mbti, gender } = register;\n//     if ([email, password, passwordConfirm, name, mbti, gender].includes('')) {\n//       setError('모두 입력하세요.');\n//       return;\n//     }\n//     if (!passwordReg.test(password)) {\n//       setError(\n//         '비밀번호는 숫자와 영문 포함 6자 이상 18자 이하로 입력해주세요.'\n//       );\n//       return;\n//     }\n//     if (password !== passwordConfirm) {\n//       setError('비밀번호가 일치하지 않습니다.');\n//       dispatch(\n//         changeRegisterForm({\n//           key: 'password',\n//           value: ''\n//         })\n//       );\n//       dispatch(\n//         changeRegisterForm({\n//           key: 'passwordConfirm',\n//           value: ''\n//         })\n//       );\n//       return;\n//     }\n//     const formData = new FormData();\n//     formData.append('file', file);\n//     await postSignup(formData, register).then(result =>\n//       dispatch(registerMember(objectKeysToCamelCase(result.data)))\n//     );\n//     // history.push('/profile');\n//   };\n//   return (\n//     <>\n//       <BackTab title={'Sign up'} />\n//       <SignupForm\n//         register={register}\n//         onChange={onChange}\n//         onFileChange={onFileChange}\n//         onSubmit={onSubmit}\n//         error={error}\n//       />\n//     </>\n//   );\n// };\n// export default Signup;\nimport React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{useSelector,useDispatch}from'react-redux';import SignupForm from'../components/Signup/SignupForm';import BackTab from'../components/BackTab/BackTab';import{changeRegisterForm,getGeolocation,registerMember}from'../actions';import{objectKeysToCamelCase}from'../utility/formattingData';import{postSignup}from'../api';var Signup=function Signup(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),file=_useState4[0],setFile=_useState4[1];var register=useSelector(function(state){return state.register;});var dispatch=useDispatch();var navigate=useNavigate();useEffect(function(){var getPosition=function getPosition(){return new Promise(function(resolve,reject){navigator.geolocation.getCurrentPosition(resolve,reject);});};getPosition().then(function(position){dispatch(getGeolocation('register',{latitude:position.coords.latitude,longitude:position.coords.longitude}));}).catch(function(){setError('현재 위치를 받아올 수 없습니다.');});},[dispatch]);var onChange=function onChange(ev){var _ev$target=ev.target,value=_ev$target.value,name=_ev$target.name;dispatch(changeRegisterForm({name:name,value:value}));};var onFileChange=function onFileChange(ev){setFile(ev.target.files[0]);};var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(ev){var passwordReg,email,password,passwordConfirm,name,mbti,gender,formData,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:ev.preventDefault();passwordReg=/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,18}$/;email=register.email,password=register.password,passwordConfirm=register.passwordConfirm,name=register.name,mbti=register.mbti,gender=register.gender;if(![email,password,passwordConfirm,name,mbti,gender].includes('')){_context.next=6;break;}setError('모두 입력하세요.');return _context.abrupt(\"return\");case 6:if(passwordReg.test(password)){_context.next=9;break;}setError('비밀번호는 숫자와 영문 포함 6자 이상 18자 이하로 입력해주세요.');return _context.abrupt(\"return\");case 9:if(!(password!==passwordConfirm)){_context.next=14;break;}setError('비밀번호가 일치하지 않습니다.');dispatch(changeRegisterForm({key:'password',value:''}));dispatch(changeRegisterForm({key:'passwordConfirm',value:''}));return _context.abrupt(\"return\");case 14:formData=new FormData();formData.append('file',file);formData.append('email',register.email);formData.append('password',register.password);formData.append('name',register.name);formData.append('mbti',register.mbti);formData.append('gender',register.gender);_context.next=23;return postSignup(formData,register);case 23:result=_context.sent;console.log('[DEBUG] postSignup result.data:',result.data);// ✅ 확인용\ndispatch(registerMember(objectKeysToCamelCase(result.data)));// navigate('/profile');\ncase 26:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();return React.createElement(React.Fragment,null,React.createElement(BackTab,{title:'Sign up'}),React.createElement(SignupForm,{register:register,onChange:onChange,onFileChange:onFileChange,onSubmit:onSubmit,error:error}));};export default Signup;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useSelector","useDispatch","SignupForm","BackTab","changeRegisterForm","getGeolocation","registerMember","objectKeysToCamelCase","postSignup","Signup","_useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","file","setFile","register","state","dispatch","navigate","getPosition","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","then","position","latitude","coords","longitude","catch","onChange","ev","_ev$target","target","value","name","onFileChange","files","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","passwordReg","email","password","passwordConfirm","mbti","gender","formData","result","wrap","_callee$","_context","prev","next","preventDefault","includes","abrupt","test","key","FormData","append","sent","console","log","data","stop","_x","apply","arguments","createElement","Fragment","title"],"sources":["C:/test/mbti-match-client/src/containers/Signup.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// // import { withRouter } from 'react-router-dom';\n// import { useSelector, useDispatch } from 'react-redux';\n// import SignupForm from '../components/Signup/SignupForm';\n// import BackTab from '../components/BackTab/BackTab';\n// import { changeRegisterForm, getGeolocation, registerMember } from '../actions';\n// import { objectKeysToCamelCase } from '../utility/formattingData';\n// import { postSignup } from '../api';\n\n// const Signup = () => {\n//   const [error, setError] = useState('');\n//   const [file, setFile] = useState(null);\n//   const register = useSelector(state => state.register);\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     const getPosition = () => {\n//       return new Promise((resolve, reject) => {\n//         navigator.geolocation.getCurrentPosition(resolve, reject);\n//       });\n//     };\n\n//     getPosition()\n//       .then(position => {\n//         console.log(position.coords);\n//         dispatch(\n//           getGeolocation('register', {\n//             latitude: position.coords.latitude,\n//             longitude: position.coords.longitude\n//           })\n//         );\n//       })\n//       .catch(error => {\n//         setError('현재 위치를 받아올 수 없습니다.');\n//       });\n//   }, [dispatch]);\n\n//   const onChange = ev => {\n//     const { value, name } = ev.target;\n//     dispatch(\n//       changeRegisterForm({\n//         name,\n//         value\n//       })\n//     );\n//   };\n\n//   const onFileChange = ev => {\n//     setFile(ev.target.files[0]);\n//   };\n\n//   const onSubmit = async ev => {\n//     ev.preventDefault();\n//     const passwordReg = new RegExp(\n//       '^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{6,18}$'\n//     );\n//     const { email, password, passwordConfirm, name, mbti, gender } = register;\n\n//     if ([email, password, passwordConfirm, name, mbti, gender].includes('')) {\n//       setError('모두 입력하세요.');\n//       return;\n//     }\n\n//     if (!passwordReg.test(password)) {\n//       setError(\n//         '비밀번호는 숫자와 영문 포함 6자 이상 18자 이하로 입력해주세요.'\n//       );\n//       return;\n//     }\n\n//     if (password !== passwordConfirm) {\n//       setError('비밀번호가 일치하지 않습니다.');\n//       dispatch(\n//         changeRegisterForm({\n//           key: 'password',\n//           value: ''\n//         })\n//       );\n//       dispatch(\n//         changeRegisterForm({\n//           key: 'passwordConfirm',\n//           value: ''\n//         })\n//       );\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append('file', file);\n//     await postSignup(formData, register).then(result =>\n//       dispatch(registerMember(objectKeysToCamelCase(result.data)))\n//     );\n//     // history.push('/profile');\n//   };\n\n//   return (\n//     <>\n//       <BackTab title={'Sign up'} />\n//       <SignupForm\n//         register={register}\n//         onChange={onChange}\n//         onFileChange={onFileChange}\n//         onSubmit={onSubmit}\n//         error={error}\n//       />\n//     </>\n//   );\n// };\n\n// export default Signup;\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SignupForm from '../components/Signup/SignupForm';\nimport BackTab from '../components/BackTab/BackTab';\nimport { changeRegisterForm, getGeolocation, registerMember } from '../actions';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\nimport { postSignup } from '../api';\n\nconst Signup = () => {\n  const [error, setError] = useState('');\n  const [file, setFile] = useState(null);\n  const register = useSelector(state => state.register);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const getPosition = () => {\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      });\n    };\n\n    getPosition()\n      .then(position => {\n        dispatch(\n          getGeolocation('register', {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          })\n        );\n      })\n      .catch(() => {\n        setError('현재 위치를 받아올 수 없습니다.');\n      });\n  }, [dispatch]);\n\n  const onChange = ev => {\n    const { value, name } = ev.target;\n    dispatch(changeRegisterForm({ name, value }));\n  };\n\n  const onFileChange = ev => {\n    setFile(ev.target.files[0]);\n  };\n\n  const onSubmit = async ev => {\n    ev.preventDefault();\n    const passwordReg = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,18}$/;\n    const { email, password, passwordConfirm, name, mbti, gender } = register;\n\n    if ([email, password, passwordConfirm, name, mbti, gender].includes('')) {\n      setError('모두 입력하세요.');\n      return;\n    }\n\n    if (!passwordReg.test(password)) {\n      setError('비밀번호는 숫자와 영문 포함 6자 이상 18자 이하로 입력해주세요.');\n      return;\n    }\n\n    if (password !== passwordConfirm) {\n      setError('비밀번호가 일치하지 않습니다.');\n      dispatch(changeRegisterForm({ key: 'password', value: '' }));\n      dispatch(changeRegisterForm({ key: 'passwordConfirm', value: '' }));\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('email', register.email);\n    formData.append('password', register.password);\n    formData.append('name', register.name);\n    formData.append('mbti', register.mbti);\n    formData.append('gender', register.gender);\n\n    const result = await postSignup(formData, register);\n\n    console.log('[DEBUG] postSignup result.data:', result.data); // ✅ 확인용\n\n    dispatch(registerMember(objectKeysToCamelCase(result.data)));\n\n    // navigate('/profile');\n  };\n\n  return (\n    <>\n      <BackTab title={'Sign up'} />\n      <SignupForm\n        register={register}\n        onChange={onChange}\n        onFileChange={onFileChange}\n        onSubmit={onSubmit}\n        error={error}\n      />\n    </>\n  );\n};\n\nexport default Signup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}