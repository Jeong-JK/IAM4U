{"ast":null,"code":"import _slicedToArray from \"C:\\\\test\\\\mbti-match-client-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\test\\\\mbti-match-client-master\\\\src\\\\containers\\\\Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// import { withRouter } from 'react-router-dom';\nimport LoginForm from '../components/Login/LoginForm';\nimport Logo from '../components/Logo/Logo';\nimport { changeLoginForm, getGeolocation, successUserAuthentication } from '../actions';\nimport { postLogin } from '../api';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\nconst Login = ({\n  history\n}) => {\n  const _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    error = _useState2[0],\n    setError = _useState2[1];\n  const login = useSelector(state => state.login);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const getPosition = () => {\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      });\n    };\n    getPosition().then(position => {\n      console.log(position.coords);\n      dispatch(getGeolocation('login', {\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      }));\n    }).catch(error => {\n      setError('현재 위치를 받아올 수 없습니다.');\n    });\n  }, [dispatch]);\n  const onChange = ev => {\n    const _ev$target = ev.target,\n      value = _ev$target.value,\n      name = _ev$target.name;\n    dispatch(changeLoginForm({\n      name,\n      value\n    }));\n  };\n  const onSubmit = async ev => {\n    ev.preventDefault();\n    const result = await postLogin(login);\n    if (result.error) {\n      return setError(result.error);\n    }\n    dispatch(successUserAuthentication(objectKeysToCamelCase(result.data.user)));\n    history.push('/users/list');\n  };\n  return React.createElement(React.Fragment, null, React.createElement(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(LoginForm, {\n    onChange: onChange,\n    onSubmit: onSubmit,\n    error: error,\n    login: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n};\nexport default withRouter(Login);","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","LoginForm","Logo","changeLoginForm","getGeolocation","successUserAuthentication","postLogin","objectKeysToCamelCase","Login","history","_useState","_useState2","_slicedToArray","error","setError","login","state","dispatch","getPosition","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","then","position","console","log","coords","latitude","longitude","catch","onChange","ev","_ev$target","target","value","name","onSubmit","preventDefault","result","data","user","push","createElement","Fragment","__source","fileName","_jsxFileName","lineNumber","__self","withRouter"],"sources":["C:/test/mbti-match-client-master/src/containers/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// import { withRouter } from 'react-router-dom';\nimport LoginForm from '../components/Login/LoginForm';\nimport Logo from '../components/Logo/Logo';\nimport {\n  changeLoginForm,\n  getGeolocation,\n  successUserAuthentication\n} from '../actions';\nimport { postLogin } from '../api';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\n\nconst Login = ({ history }) => {\n  const [error, setError] = useState('');\n  const login = useSelector(state => state.login);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const getPosition = () => {\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      });\n    };\n\n    getPosition()\n      .then(position => {\n        console.log(position.coords);\n        dispatch(\n          getGeolocation('login', {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          })\n        );\n      })\n      .catch(error => {\n        setError('현재 위치를 받아올 수 없습니다.');\n      });\n  }, [dispatch]);\n\n  const onChange = ev => {\n    const { value, name } = ev.target;\n    dispatch(\n      changeLoginForm({\n        name,\n        value\n      })\n    );\n  };\n\n  const onSubmit = async ev => {\n    ev.preventDefault();\n    const result = await postLogin(login);\n    if (result.error) {\n      return setError(result.error);\n    }\n    dispatch(\n      successUserAuthentication(objectKeysToCamelCase(result.data.user))\n    );\n    history.push('/users/list');\n  };\n\n  return (\n    <>\n      <Logo />\n      <LoginForm\n        onChange={onChange}\n        onSubmit={onSubmit}\n        error={error}\n        login={login}\n      />\n    </>\n  );\n};\n\nexport default withRouter(Login);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}