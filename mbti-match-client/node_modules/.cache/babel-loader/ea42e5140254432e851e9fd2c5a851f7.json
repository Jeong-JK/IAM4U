{"ast":null,"code":"import _slicedToArray from \"C:\\\\test\\\\mbti-match-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\test\\\\mbti-match-client\\\\src\\\\containers\\\\Signup.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// import { withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SignupForm from '../components/Signup/SignupForm';\nimport BackTab from '../components/BackTab/BackTab';\nimport { changeRegisterForm, getGeolocation, registerMember } from '../actions';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\nimport { postSignup } from '../api';\nconst Signup = () => {\n  const _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    error = _useState2[0],\n    setError = _useState2[1];\n  const _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    file = _useState4[0],\n    setFile = _useState4[1];\n  const register = useSelector(state => state.register);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const getPosition = () => {\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      });\n    };\n    getPosition().then(position => {\n      console.log(position.coords);\n      dispatch(getGeolocation('register', {\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      }));\n    }).catch(error => {\n      setError('현재 위치를 받아올 수 없습니다.');\n    });\n  }, [dispatch]);\n  const onChange = ev => {\n    const _ev$target = ev.target,\n      value = _ev$target.value,\n      name = _ev$target.name;\n    dispatch(changeRegisterForm({\n      name,\n      value\n    }));\n  };\n  const onFileChange = ev => {\n    setFile(ev.target.files[0]);\n  };\n  const onSubmit = async ev => {\n    ev.preventDefault();\n    const passwordReg = new RegExp('^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{6,18}$');\n    const email = register.email,\n      password = register.password,\n      passwordConfirm = register.passwordConfirm,\n      name = register.name,\n      mbti = register.mbti,\n      gender = register.gender;\n    if ([email, password, passwordConfirm, name, mbti, gender].includes('')) {\n      setError('모두 입력하세요.');\n      return;\n    }\n    if (!passwordReg.test(password)) {\n      setError('비밀번호는 숫자와 영문 포함 6자 이상 18자 이하로 입력해주세요.');\n      return;\n    }\n    if (password !== passwordConfirm) {\n      setError('비밀번호가 일치하지 않습니다.');\n      dispatch(changeRegisterForm({\n        key: 'password',\n        value: ''\n      }));\n      dispatch(changeRegisterForm({\n        key: 'passwordConfirm',\n        value: ''\n      }));\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    await postSignup(formData, register).then(result => dispatch(registerMember(objectKeysToCamelCase(result.data))));\n    // history.push('/profile');\n  };\n  return React.createElement(React.Fragment, null, React.createElement(BackTab, {\n    title: 'Sign up',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(SignupForm, {\n    register: register,\n    onChange: onChange,\n    onFileChange: onFileChange,\n    onSubmit: onSubmit,\n    error: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }));\n};\nexport default Signup;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useSelector","useDispatch","SignupForm","BackTab","changeRegisterForm","getGeolocation","registerMember","objectKeysToCamelCase","postSignup","Signup","_useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","file","setFile","register","state","dispatch","getPosition","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","then","position","console","log","coords","latitude","longitude","catch","onChange","ev","_ev$target","target","value","name","onFileChange","files","onSubmit","preventDefault","passwordReg","RegExp","email","password","passwordConfirm","mbti","gender","includes","test","key","formData","FormData","append","result","data","createElement","Fragment","title","__source","fileName","_jsxFileName","lineNumber","__self"],"sources":["C:/test/mbti-match-client/src/containers/Signup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// import { withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SignupForm from '../components/Signup/SignupForm';\nimport BackTab from '../components/BackTab/BackTab';\nimport { changeRegisterForm, getGeolocation, registerMember } from '../actions';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\nimport { postSignup } from '../api';\n\nconst Signup = () => {\n  const [error, setError] = useState('');\n  const [file, setFile] = useState(null);\n  const register = useSelector(state => state.register);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const getPosition = () => {\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      });\n    };\n\n    getPosition()\n      .then(position => {\n        console.log(position.coords);\n        dispatch(\n          getGeolocation('register', {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          })\n        );\n      })\n      .catch(error => {\n        setError('현재 위치를 받아올 수 없습니다.');\n      });\n  }, [dispatch]);\n\n  const onChange = ev => {\n    const { value, name } = ev.target;\n    dispatch(\n      changeRegisterForm({\n        name,\n        value\n      })\n    );\n  };\n\n  const onFileChange = ev => {\n    setFile(ev.target.files[0]);\n  };\n\n  const onSubmit = async ev => {\n    ev.preventDefault();\n    const passwordReg = new RegExp(\n      '^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{6,18}$'\n    );\n    const { email, password, passwordConfirm, name, mbti, gender } = register;\n\n    if ([email, password, passwordConfirm, name, mbti, gender].includes('')) {\n      setError('모두 입력하세요.');\n      return;\n    }\n\n    if (!passwordReg.test(password)) {\n      setError(\n        '비밀번호는 숫자와 영문 포함 6자 이상 18자 이하로 입력해주세요.'\n      );\n      return;\n    }\n\n    if (password !== passwordConfirm) {\n      setError('비밀번호가 일치하지 않습니다.');\n      dispatch(\n        changeRegisterForm({\n          key: 'password',\n          value: ''\n        })\n      );\n      dispatch(\n        changeRegisterForm({\n          key: 'passwordConfirm',\n          value: ''\n        })\n      );\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n    await postSignup(formData, register).then(result =>\n      dispatch(registerMember(objectKeysToCamelCase(result.data)))\n    );\n    // history.push('/profile');\n  };\n\n  return (\n    <>\n      <BackTab title={'Sign up'} />\n      <SignupForm\n        register={register}\n        onChange={onChange}\n        onFileChange={onFileChange}\n        onSubmit={onSubmit}\n        error={error}\n      />\n    </>\n  );\n};\n\nexport default Signup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}