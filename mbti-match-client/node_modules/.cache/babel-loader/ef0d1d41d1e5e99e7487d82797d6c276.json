{"ast":null,"code":"import { CHANGE_REGISTER_FORM, CHANGE_LOGIN_FORM, GET_GEOLOCATION, SUCCESS_USER_AUTHENTICATION, LOAD_USERS_SUCCESS, INCREASE_CHOICE_COUNT, RESET_CHOICE_COUNT, INCREASE_PAGE_INDEX, LOAD_CHATS_LIST_SUCCESS, ENTER_CHAT_ROOM, ADD_NEW_MESSAGE, LEAVE_ROOM, CHANGE_EDIT_FORM, CONFIRMED_NOT_AUTHENTICATED, USER_LOGOUT, SUCCESS_USER_DATA_UPDATE, SUCCESS_REGISTER_MEMBER, SELECTED_ALL_MEMBERS, NONE_CHATS, ADD_NEW_USERS_LIST, LEAVE_MEMBERS_LIST } from '../contants/actionTypes';\n// import { useEffect } from 'react';\n// import { useSelector } from 'react-redux';\n// import { useNavigate } from 'react-router-dom';\n\nexport const CHECK_USER_NOT_LOGIN = 'CHECK_USER_NOT_LOGIN';\nexport const changeRegisterForm = ({\n  name,\n  value\n}) => ({\n  type: CHANGE_REGISTER_FORM,\n  name,\n  value\n});\nexport const changeLoginForm = ({\n  name,\n  value\n}) => ({\n  type: CHANGE_LOGIN_FORM,\n  name,\n  value\n});\nexport const checkUserNotLogin = () => ({\n  type: CHECK_USER_NOT_LOGIN\n});\n\n// export const registerMember = ({ user, isAuthenticated }) => {\n//   return {\n//     type: SUCCESS_REGISTER_MEMBER,\n//     user,\n//     edit: {\n//       mbti: user?.mbti?.type || '',\n//       name: user?.name || '',\n//       description: user?.description || ''\n//     },\n//     isAuthenticated\n//   };\n// };\n\nexport const registerMember = user => {\n  let mbti = '';\n  let name = '';\n  let description = '';\n  if (user && user.mbti && user.mbti.type) {\n    mbti = user.mbti.type;\n  }\n  if (user && user.name) {\n    name = user.name;\n  }\n  if (user && user.description) {\n    description = user.description;\n  }\n  return {\n    type: SUCCESS_REGISTER_MEMBER,\n    user,\n    edit: {\n      mbti,\n      name,\n      description\n    }\n  };\n};\nexport const logoutUser = () => ({\n  type: USER_LOGOUT\n});\nexport const changeEditForm = ({\n  name,\n  value\n}) => ({\n  type: CHANGE_EDIT_FORM,\n  name,\n  value\n});\nexport const getGeolocation = (state, location) => ({\n  type: GET_GEOLOCATION,\n  state,\n  location\n});\nexport const successUserAuthentication = user => ({\n  type: SUCCESS_USER_AUTHENTICATION,\n  user,\n  edit: {\n    mbti: user.mbti.type,\n    name: user.name,\n    description: user.description\n  }\n});\nexport const changeUserData = user => ({\n  type: SUCCESS_USER_DATA_UPDATE,\n  user\n});\nexport const loadUsersSuccess = data => ({\n  type: LOAD_USERS_SUCCESS,\n  users: data.users,\n  totalUserCount: data.totalUserCount\n});\nexport const increaseChoiceCount = () => ({\n  type: INCREASE_CHOICE_COUNT\n});\nexport const resetChoiceCount = () => ({\n  type: RESET_CHOICE_COUNT\n});\nexport const increasePageIndex = () => ({\n  type: INCREASE_PAGE_INDEX\n});\nexport const noticeSelectedAll = () => ({\n  type: SELECTED_ALL_MEMBERS\n});\nexport const loadChatsListSuccess = chats => ({\n  type: LOAD_CHATS_LIST_SUCCESS,\n  chats\n});\nexport const addNewMessage = newMessage => ({\n  type: ADD_NEW_MESSAGE,\n  newMessage\n});\nexport const enterChatRoom = chat => ({\n  type: ENTER_CHAT_ROOM,\n  chat\n});\nexport const leaveRoom = () => ({\n  type: LEAVE_ROOM\n});\nexport const noticeNoneChats = () => ({\n  type: NONE_CHATS\n});\nexport const addNewUsers = data => ({\n  type: ADD_NEW_USERS_LIST,\n  users: data.users\n});\nexport const leaveMemberList = () => ({\n  type: LEAVE_MEMBERS_LIST\n});\nexport const uploadImageToS3 = async file => {\n  const fileName = file.name;\n  const fileType = file.type;\n\n  // 1단계: Presigned URL 요청\n  const _await$axios$post = await axios.post(\"\".concat(config.ROOT, \"/api/upload\"), {\n      fileName,\n      fileType\n    }),\n    data = _await$axios$post.data; // 2단계: S3에 직접 업로드\n  const result = await axios.put(data.uploadURL, file, {\n    headers: {\n      'Content-Type': fileType\n    }\n  });\n\n  // 업로드된 파일 key 반환\n  return data.key;\n};\n\n// export const LoginRedirect = () => {\n//   const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (!isAuthenticated) {\n//       navigate('/login');\n//     }\n//   }, [isAuthenticated]);\n\n//   return null;\n// };","map":{"version":3,"names":["CHANGE_REGISTER_FORM","CHANGE_LOGIN_FORM","GET_GEOLOCATION","SUCCESS_USER_AUTHENTICATION","LOAD_USERS_SUCCESS","INCREASE_CHOICE_COUNT","RESET_CHOICE_COUNT","INCREASE_PAGE_INDEX","LOAD_CHATS_LIST_SUCCESS","ENTER_CHAT_ROOM","ADD_NEW_MESSAGE","LEAVE_ROOM","CHANGE_EDIT_FORM","CONFIRMED_NOT_AUTHENTICATED","USER_LOGOUT","SUCCESS_USER_DATA_UPDATE","SUCCESS_REGISTER_MEMBER","SELECTED_ALL_MEMBERS","NONE_CHATS","ADD_NEW_USERS_LIST","LEAVE_MEMBERS_LIST","CHECK_USER_NOT_LOGIN","changeRegisterForm","name","value","type","changeLoginForm","checkUserNotLogin","registerMember","user","mbti","description","edit","logoutUser","changeEditForm","getGeolocation","state","location","successUserAuthentication","changeUserData","loadUsersSuccess","data","users","totalUserCount","increaseChoiceCount","resetChoiceCount","increasePageIndex","noticeSelectedAll","loadChatsListSuccess","chats","addNewMessage","newMessage","enterChatRoom","chat","leaveRoom","noticeNoneChats","addNewUsers","leaveMemberList","uploadImageToS3","file","fileName","fileType","_await$axios$post","axios","post","concat","config","ROOT","result","put","uploadURL","headers","key"],"sources":["C:/test/mbti-match-client/src/actions/index.js"],"sourcesContent":["import {\n  CHANGE_REGISTER_FORM,\n  CHANGE_LOGIN_FORM,\n  GET_GEOLOCATION,\n  SUCCESS_USER_AUTHENTICATION,\n  LOAD_USERS_SUCCESS,\n  INCREASE_CHOICE_COUNT,\n  RESET_CHOICE_COUNT,\n  INCREASE_PAGE_INDEX,\n  LOAD_CHATS_LIST_SUCCESS,\n  ENTER_CHAT_ROOM,\n  ADD_NEW_MESSAGE,\n  LEAVE_ROOM,\n  CHANGE_EDIT_FORM,\n  CONFIRMED_NOT_AUTHENTICATED,\n  USER_LOGOUT,\n  SUCCESS_USER_DATA_UPDATE,\n  SUCCESS_REGISTER_MEMBER,\n  SELECTED_ALL_MEMBERS,\n  NONE_CHATS,\n  ADD_NEW_USERS_LIST,\n  LEAVE_MEMBERS_LIST\n} from '../contants/actionTypes';\n// import { useEffect } from 'react';\n// import { useSelector } from 'react-redux';\n// import { useNavigate } from 'react-router-dom';\n\nexport const CHECK_USER_NOT_LOGIN = 'CHECK_USER_NOT_LOGIN';\n\nexport const changeRegisterForm = ({ name, value }) => ({\n  type: CHANGE_REGISTER_FORM,\n  name,\n  value\n});\n\nexport const changeLoginForm = ({ name, value }) => ({\n  type: CHANGE_LOGIN_FORM,\n  name,\n  value\n});\n\nexport const checkUserNotLogin = () => ({\n  type: CHECK_USER_NOT_LOGIN\n});\n\n// export const registerMember = ({ user, isAuthenticated }) => {\n//   return {\n//     type: SUCCESS_REGISTER_MEMBER,\n//     user,\n//     edit: {\n//       mbti: user?.mbti?.type || '',\n//       name: user?.name || '',\n//       description: user?.description || ''\n//     },\n//     isAuthenticated\n//   };\n// };\n\nexport const registerMember = (user) => {\n  let mbti = '';\n  let name = '';\n  let description = '';\n\n  if (user && user.mbti && user.mbti.type) {\n    mbti = user.mbti.type;\n  }\n\n  if (user && user.name) {\n    name = user.name;\n  }\n\n  if (user && user.description) {\n    description = user.description;\n  }\n\n  return {\n    type: SUCCESS_REGISTER_MEMBER,\n    user,\n    edit: {\n      mbti,\n      name,\n      description\n    }\n  };\n};\n\nexport const logoutUser = () => ({\n  type: USER_LOGOUT\n});\n\nexport const changeEditForm = ({ name, value }) => ({\n  type: CHANGE_EDIT_FORM,\n  name,\n  value\n});\n\nexport const getGeolocation = (state, location) => ({\n  type: GET_GEOLOCATION,\n  state,\n  location\n});\n\nexport const successUserAuthentication = user => ({\n  type: SUCCESS_USER_AUTHENTICATION,\n  user,\n  edit: {\n    mbti: user.mbti.type,\n    name: user.name,\n    description: user.description\n  }\n});\n\nexport const changeUserData = user => ({\n  type: SUCCESS_USER_DATA_UPDATE,\n  user\n});\n\nexport const loadUsersSuccess = data => ({\n  type: LOAD_USERS_SUCCESS,\n  users: data.users,\n  totalUserCount: data.totalUserCount\n});\n\nexport const increaseChoiceCount = () => ({\n  type: INCREASE_CHOICE_COUNT\n});\n\nexport const resetChoiceCount = () => ({\n  type: RESET_CHOICE_COUNT\n});\n\nexport const increasePageIndex = () => ({\n  type: INCREASE_PAGE_INDEX\n});\n\nexport const noticeSelectedAll = () => ({\n  type: SELECTED_ALL_MEMBERS\n});\n\nexport const loadChatsListSuccess = chats => ({\n  type: LOAD_CHATS_LIST_SUCCESS,\n  chats\n});\n\nexport const addNewMessage = newMessage => ({\n  type: ADD_NEW_MESSAGE,\n  newMessage\n});\n\nexport const enterChatRoom = chat => ({\n  type: ENTER_CHAT_ROOM,\n  chat\n});\n\nexport const leaveRoom = () => ({\n  type: LEAVE_ROOM\n});\n\nexport const noticeNoneChats = () => ({\n  type: NONE_CHATS\n});\n\nexport const addNewUsers = data => ({\n  type: ADD_NEW_USERS_LIST,\n  users: data.users\n});\n\nexport const leaveMemberList = () => ({\n  type: LEAVE_MEMBERS_LIST\n});\n\nexport const uploadImageToS3 = async (file) => {\n  const fileName = file.name;\n  const fileType = file.type;\n\n  // 1단계: Presigned URL 요청\n  const { data } = await axios.post(`${config.ROOT}/api/upload`, {\n    fileName,\n    fileType\n  });\n\n  // 2단계: S3에 직접 업로드\n  const result = await axios.put(data.uploadURL, file, {\n    headers: {\n      'Content-Type': fileType\n    }\n  });\n\n  // 업로드된 파일 key 반환\n  return data.key;\n};\n\n\n// export const LoginRedirect = () => {\n//   const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (!isAuthenticated) {\n//       navigate('/login');\n//     }\n//   }, [isAuthenticated]);\n\n//   return null;\n// };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}