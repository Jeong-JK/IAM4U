{"version":3,"sources":["contants/actionTypes.js","aws-config.js","components/Login/LoginForm.js","components/Logo/Logo.js","actions/index.js","config/index.js","api/index.js","utility/formattingData.js","containers/Login.js","components/Signup/SignupForm.js","components/BackTab/BackTab.js","containers/Signup.js","components/Tab/TabList.js","components/ListMembers/List.js","components/ListMembers/ChoiceTab.js","components/ListMembers/NextTab.js","components/Notice/Notice.js","components/Popup/Popup.js","containers/ListMembers.js","components/Profile/View.js","containers/Profile.js","components/Edit/EditForm.js","containers/Edit.js","components/ChatList/List.js","containers/ChatList.js","components/ChatView/InputPanel.js","components/ChatView/View.js","containers/ChatView.js","containers/NotFound.js","containers/MainLoading.js","App.js","reducers/index.js","lib/socket/index.js","contants/socketEventTypes.js","index.js"],"names":["CHANGE_LOGIN_FORM","SUCCESS_USER_AUTHENTICATION","CONFIRMED_NOT_AUTHENTICATED","SUCCESS_REGISTER_MEMBER","USER_LOGOUT","CHANGE_REGISTER_FORM","SUCCESS_USER_DATA_UPDATE","GET_GEOLOCATION","LOAD_USERS_SUCCESS","INCREASE_CHOICE_COUNT","RESET_CHOICE_COUNT","INCREASE_PAGE_INDEX","SELECTED_ALL_MEMBERS","ADD_NEW_USERS_LIST","LEAVE_MEMBERS_LIST","LOAD_CHATS_LIST_SUCCESS","ENTER_CHAT_ROOM","ADD_NEW_MESSAGE","LEAVE_ROOM","CHANGE_EDIT_FORM","NONE_CHATS","awsconfig","Auth","region","userPoolId","userPoolWebClientId","mandatorySignIn","authenticationFlowType","Amplify","configure","LoginForm","_ref","onSubmit","onChange","login","error","renderErrors","Array","isArray","map","React","createElement","className","type","name","placeholder","maxLength","value","email","required","password","Link","to","Logo","data-heading","changeRegisterForm","registerMember","user","mbti","description","edit","getGeolocation","state","location","successUserAuthentication","changeUserData","noticeSelectedAll","loadChatsListSuccess","chats","enterChatRoom","chat","config","ROOT","SOCKET_ROOT","axios","defaults","withCredentials","postSignup","formData","registerData","post","concat","_objectSpread","then","response","put","result","data","catch","message","getUser","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","wrap","_context","prev","next","localStorage","getItem","get","headers","Authorization","sent","abrupt","t0","stop","apply","arguments","getUsers","_ref2","limit","pageIndex","url","method","console","log","addLikeUser","partnerId","getChat","roomId","putUserInfo","userData","length","undefined","objectKeysToCamelCase","snakeCaseObject","camelCaseObject","camelCaseArray","forEach","key","isPlainObject","push","camelCase","Login","_useState","useState","_useState2","_slicedToArray","setError","useSelector","dispatch","useDispatch","navigate","useNavigate","useEffect","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","ev","idToken","res","errorMsg","errorData","preventDefault","signIn","signInUserSession","jwtToken","sessionStorage","setItem","fetch","ok","json","t1","_x","Fragment","_ev$target","target","changeLoginForm","handleSignUp","register","file","presignedRes","_presignedRes$data","uploadURL","fileName","fileType","signUp","username","attributes","profileImage","alert","_x2","SignupForm","onFileChange","form","scrollIntoView","block","e","ref","le","htmlFor","id","href","minLength","passwordConfirm","checked","gender","accept","BackTab","title","onClick","Signup","_useState3","_useState4","passwordReg","includes","test","FormData","append","selectedFile","files","TabList","NavLink","activeClassName","FontAwesomeIcon","icon","faUserCircle","faUserFriends","faComment","List","partner","view","matchData","myMbti","myName","figure","match","src","alt","CountUp","start","end","duration","faArrowsAltH","Tab","onLikeClick","onUnLikeClick","faKissWinkHeart","faMeh","NextTab","onNextClick","faHandPointRight","Notice","_ref$notice","notice","Popup","onPopupClick","ListMembers","setView","setMatchData","_useState5","_useState6","viewPopup","setViewPopup","_useState7","_useState8","setnotice","_useSelector","users","hasUsersNotice","choiceCount","totalUserCount","totalChoiceCount","partners","total_user_count","setUsers","_callee2","compatibility","_context2","likes_me","Object","keys","find","_ref3","_callee3","_context3","_ref4","_callee4","_context4","ChoiceTab","Profile","likeMe","faHeart","onLogoutClick","callProtectedAPI","View","EditForm","cols","rows","Edit","setFile","changeEditForm","renderList","index","_id","profile_image","messages","content","ChatList","hasChatsNotice","chatList","getchatList","Roading","onMessageChange","onKeyPress","randerChat","hasOwnProperty","speaker","sender","ChatView","setMessage","client","currentRoomChat","useParams","userId","setChat","joinRoom","receiveNewMessage","newMessage","createAt","Date","leaveRoom","handleSubmit","sendMessage","postNewMessage","InputPanel","currentTarget","NotFound","MainLoading","PrivateRoute","children","useLocation","isAuthenticated","Navigate","from","NotLoggedInRoute","App","isMainLoading","Routes","Route","path","element","replace","initialState","dob","dislikeUsers","mailConfirm","socket","io","transports","secure","on","err","emit","cb","removeListener","reducer","action","assign","_defineProperty","_toConsumableArray","store","createStore","matchApp","window","__REDUX_DEVTOOLS_EXTENSION__","loadUser","ReactDOM","render","Provider","Router","document","getElementById"],"mappings":"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","file":"static/js/main.5dcb2145.chunk.js","sourcesContent":["export const CHANGE_LOGIN_FORM = 'CHANGE_LOGIN_FORM';\nexport const SUCCESS_USER_AUTHENTICATION = 'SUCCESS_USER_AUTHENTICATION';\nexport const CONFIRMED_NOT_AUTHENTICATED = 'CONFIRMED_NOT_AUTHENTICATED';\nexport const SUCCESS_REGISTER_MEMBER = 'SUCCESS_REGISTER_MEMBER';\nexport const USER_LOGOUT = 'USER_LOGOUT';\n\nexport const CHANGE_REGISTER_FORM = 'CHANGE_REGISTER_FORM';\nexport const SUCCESS_USER_DATA_UPDATE = 'SUCCESS_USER_DATA_UPDATE';\n\nexport const GET_GEOLOCATION = 'GET_GEOLOCATION';\n\nexport const LOADING_USERS = 'LOADING_USERS';\nexport const LOAD_USERS_SUCCESS = 'LOAD_USERS_SUCCESS';\nexport const INCREASE_CHOICE_COUNT = 'INCREASE_CHOICE_COUNT';\nexport const RESET_CHOICE_COUNT = 'RESET_CHOICE_COUNT';\nexport const INCREASE_PAGE_INDEX = 'INCREASE_PAGE_INDEX';\nexport const SELECTED_ALL_MEMBERS = 'SELECTED_ALL_MEMBERS';\nexport const ADD_NEW_USERS_LIST = 'ADD_NEW_USERS_LIST';\nexport const LEAVE_MEMBERS_LIST = 'LEAVE_MEMBERS_LIST';\n\nexport const LOAD_CHATS_LIST_SUCCESS = 'LOAD_CHATS_LIST_SUCCESS';\nexport const ENTER_CHAT_ROOM = 'ENTER_CHAT_ROOM';\nexport const ADD_NEW_MESSAGE = 'ADD_NEW_MESSAGE';\nexport const LEAVE_ROOM = 'LEAVE_ROOM';\nexport const CHANGE_EDIT_FORM = 'CHANGE_EDIT_FORM';\nexport const NONE_CHATS = 'NONE_CHATS';\n","const awsconfig = {\r\n  Auth: {\r\n    region: 'ap-northeast-2',\r\n    userPoolId: 'ap-northeast-2_he0NwXfAK',\r\n    userPoolWebClientId: 'r8ro24j5m9ggjdlq3rvkunsfn',\r\n    mandatorySignIn: false,\r\n    authenticationFlowType: 'USER_PASSWORD_AUTH',\r\n  },\r\n};\r\n\r\nexport default awsconfig;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './login.scss';\nimport { Auth } from 'aws-amplify';\nimport awsconfig from '../../aws-config';\nimport { Amplify } from 'aws-amplify';\n\nAmplify.configure(awsconfig);\n\nconst LoginForm = ({ onSubmit, onChange, login, error }) => {\n  let renderErrors = '';\n  if (Array.isArray(error)) {\n    renderErrors = error.map(error => <p className=\"error\">{error}</p>);\n  } else {\n    renderErrors = <p className=\"error\">{error}</p>;\n  }\n  return (\n    <div className=\"loginForm form\">\n      <div className=\"errors\">{renderErrors}</div>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"email\"\n          maxLength=\"80\"\n          value={login ? login.email : ''}\n          onChange={onChange}\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"password\"\n          value={login ? login.password : ''}\n          onChange={onChange}\n          required\n        />\n        <button type=\"submit\">Login</button>\n      </form>\n      <Link to=\"/signup\" className=\"button\">\n        Sign up\n      </Link>\n    </div>\n  );\n};\n\nconst handleLogin = async (login) => {\n  try {\n    const user = await Auth.signIn(login.email, login.password);\n    const jwt = user.signInUserSession.idToken.jwtToken;\n    localStorage.setItem('jwt', jwt);\n    alert('로그인 성공!');\n  } catch (error) {\n    console.error('로그인 실패:', error);\n  }\n};\nexport default LoginForm;\n","import React from 'react';\nimport './Logo.scss';\n\nconst Logo = () => (\n  <div className=\"logo-wrap\">\n    <div className=\"logo-area\">\n      <h1 className=\"logo\" data-heading=\"MATCH ♡ MINDS\">\n      MATCH ♡ MINDS\n      </h1>\n    </div>\n  </div>\n);\n\nexport default Logo;\n","import {\n  CHANGE_REGISTER_FORM,\n  CHANGE_LOGIN_FORM,\n  GET_GEOLOCATION,\n  SUCCESS_USER_AUTHENTICATION,\n  LOAD_USERS_SUCCESS,\n  INCREASE_CHOICE_COUNT,\n  RESET_CHOICE_COUNT,\n  INCREASE_PAGE_INDEX,\n  LOAD_CHATS_LIST_SUCCESS,\n  ENTER_CHAT_ROOM,\n  ADD_NEW_MESSAGE,\n  LEAVE_ROOM,\n  CHANGE_EDIT_FORM,\n  CONFIRMED_NOT_AUTHENTICATED,\n  USER_LOGOUT,\n  SUCCESS_USER_DATA_UPDATE,\n  SUCCESS_REGISTER_MEMBER,\n  SELECTED_ALL_MEMBERS,\n  NONE_CHATS,\n  ADD_NEW_USERS_LIST,\n  LEAVE_MEMBERS_LIST\n} from '../contants/actionTypes';\n// import { useEffect } from 'react';\n// import { useSelector } from 'react-redux';\n// import { useNavigate } from 'react-router-dom';\n\nexport const CHECK_USER_NOT_LOGIN = 'CHECK_USER_NOT_LOGIN';\n\nexport const changeRegisterForm = ({ name, value }) => ({\n  type: CHANGE_REGISTER_FORM,\n  name,\n  value\n});\n\nexport const changeLoginForm = ({ name, value }) => ({\n  type: CHANGE_LOGIN_FORM,\n  name,\n  value\n});\n\nexport const checkUserNotLogin = () => ({\n  type: CHECK_USER_NOT_LOGIN\n});\n\n// export const registerMember = ({ user, isAuthenticated }) => {\n//   return {\n//     type: SUCCESS_REGISTER_MEMBER,\n//     user,\n//     edit: {\n//       mbti: user?.mbti?.type || '',\n//       name: user?.name || '',\n//       description: user?.description || ''\n//     },\n//     isAuthenticated\n//   };\n// };\n\nexport const registerMember = (user) => {\n  let mbti = '';\n  let name = '';\n  let description = '';\n\n  if (user && user.mbti && user.mbti.type) {\n    mbti = user.mbti.type;\n  }\n\n  if (user && user.name) {\n    name = user.name;\n  }\n\n  if (user && user.description) {\n    description = user.description;\n  }\n\n  return {\n    type: SUCCESS_REGISTER_MEMBER,\n    user,\n    edit: {\n      mbti,\n      name,\n      description\n    }\n  };\n};\n\nexport const logoutUser = () => ({\n  type: USER_LOGOUT\n});\n\nexport const changeEditForm = ({ name, value }) => ({\n  type: CHANGE_EDIT_FORM,\n  name,\n  value\n});\n\nexport const getGeolocation = (state, location) => ({\n  type: GET_GEOLOCATION,\n  state,\n  location\n});\n\nexport const successUserAuthentication = user => ({\n  type: SUCCESS_USER_AUTHENTICATION,\n  user,\n  edit: {\n    mbti: user.mbti.type,\n    name: user.name,\n    description: user.description\n  }\n});\n\nexport const changeUserData = user => ({\n  type: SUCCESS_USER_DATA_UPDATE,\n  user\n});\n\nexport const loadUsersSuccess = data => ({\n  type: LOAD_USERS_SUCCESS,\n  users: data.users,\n  totalUserCount: data.totalUserCount\n});\n\nexport const increaseChoiceCount = () => ({\n  type: INCREASE_CHOICE_COUNT\n});\n\nexport const resetChoiceCount = () => ({\n  type: RESET_CHOICE_COUNT\n});\n\nexport const increasePageIndex = () => ({\n  type: INCREASE_PAGE_INDEX\n});\n\nexport const noticeSelectedAll = () => ({\n  type: SELECTED_ALL_MEMBERS\n});\n\nexport const loadChatsListSuccess = chats => ({\n  type: LOAD_CHATS_LIST_SUCCESS,\n  chats\n});\n\nexport const addNewMessage = newMessage => ({\n  type: ADD_NEW_MESSAGE,\n  newMessage\n});\n\nexport const enterChatRoom = chat => ({\n  type: ENTER_CHAT_ROOM,\n  chat\n});\n\nexport const leaveRoom = () => ({\n  type: LEAVE_ROOM\n});\n\nexport const noticeNoneChats = () => ({\n  type: NONE_CHATS\n});\n\nexport const addNewUsers = data => ({\n  type: ADD_NEW_USERS_LIST,\n  users: data.users\n});\n\nexport const leaveMemberList = () => ({\n  type: LEAVE_MEMBERS_LIST\n});\n\n\n// export const LoginRedirect = () => {\n//   const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (!isAuthenticated) {\n//       navigate('/login');\n//     }\n//   }, [isAuthenticated]);\n\n//   return null;\n// };\n","let ROOT, SOCKET_ROOT;\n\nif (process.env.NODE_ENV === 'development') {\n  ROOT = 'http://localhost:8081';\n  SOCKET_ROOT = 'http://localhost:8081';\n} else {\n  ROOT = 'https://jxsbyfmks7.execute-api.ap-northeast-2.amazonaws.com/prod/';\n  SOCKET_ROOT = 'http://3.38.152.226:8080';\n  //'https://qi4n73enh8.execute-api.ap-northeast-2.amazonaws.com/production/@connections';\n}\n\nexport const config = {\n  ROOT, //: process.env.REACT_APP_ROOT,\n  SOCKET_ROOT //: process.env.REACT_APP_SOCKET_ROOT\n};\n\n","import axios from 'axios';\nimport { config } from '../config';\n\naxios.defaults.withCredentials = true;\nconst { ROOT } = config;\n\nexport const postSignup = (formData, registerData) => {\n  return axios\n    .post(`${ROOT}/api/signup`, {\n      ...registerData\n    })\n    .then(response => {\n      return axios\n        .put(`${ROOT}/api/upload`, formData)\n        .then(result => {\n          return {\n            data: result.data,\n            error: ''\n          };\n        })\n        .catch(error => {\n          return {\n            error: error.response.data.message || 'server error'\n          };\n        });\n    })\n    .catch(error => {\n      let message = 'server error';\n      if (\n        error &&\n        error.response &&\n        error.response.data &&\n        error.response.data.message\n      ) {\n        message = error.response.data.message;\n      }\n    \n      return { error: message };\n    });\n};\n\nexport const getUser = async () => {\n  try {\n    const token = localStorage.getItem('jwt');\n    const response = await axios.get(`${config.ROOT}/auth/user`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    let message = 'server error';\n    if (\n      error &&\n      error.response &&\n      error.response.data &&\n      error.response.data.message\n    ) {\n      message = error.response.data.message;\n    }\n    return { error: message };\n  }\n};\n//   return axios\n//     .get(`${ROOT}/auth/user`)\n//     .then(response => response.data)\n//     // .catch(error => {\n//     //   return {\n//     //     error: error.response.data.message || 'server error'\n//     //   };\n//     // });\n//     .catch(error => {\n//       let message = 'server error';\n//       if (\n//         error &&\n//         error.response &&\n//         error.response.data &&\n//         error.response.data.message\n//       ) {\n//         message = error.response.data.message;\n//       }\n    \n//       return { error: message };\n//     });\n    \n// };\n\nexport const postLogin = data => {\n  return axios({\n    url: `${ROOT}/api/login`,\n    method: 'POST',\n    data\n  })\n    .then(response => {\n      return {\n        data: response.data,\n        error: ''\n      };\n    })\n    .catch(error => {\n      return {\n        error: error.response.data.message || 'server error'\n      };\n    });\n};\n\nexport const getLogout = () => {\n  return axios({\n    url: `${ROOT}/api/logout`,\n    method: 'GET'\n  }).catch(error => {\n    console.log(error);\n  });\n};\n\nexport const getUsers = ({ limit, pageIndex }) => {\n  return axios({\n    url: `${ROOT}/api/users?limit=${limit}&pageIndex=${pageIndex}`,\n    method: 'GET'\n  })\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const addLikeUser = partnerId => {\n  return axios({\n    url: `${ROOT}/api/users/likes/${partnerId}`,\n    method: 'PUT'\n  })\n    .then(response => {\n      console.log(response);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const getLikeMe = () => {\n  return axios({\n    url: `${ROOT}/api/user/likes`,\n    method: 'GET'\n  })\n    .then(response => {\n      return response.data.likes_me;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const postChat = partnerId => {\n  return axios({\n    url: `${ROOT}/api/chats/${partnerId}`,\n    method: 'POST'\n  })\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const getChats = () => {\n  return axios({\n    url: `${ROOT}/api/chats`,\n    method: 'GET'\n  })\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const getChat = roomId => {\n  return axios({\n    url: `${ROOT}/api/chats/${roomId}`,\n    method: 'GET'\n  })\n    .then(response => {\n      return response.data.chat;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const postNewMessage = (roomId, data) => {\n  return axios({\n    url: `${ROOT}/api/chats/${roomId}`,\n    method: 'PUT',\n    data\n  })\n    .then(response => {\n      console.log(response.data);\n      return response.data;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const putUserInfo = (userData, formData = null) => {\n  return axios\n    .put(`${ROOT}/api/user`, {\n      ...userData\n    })\n    .then(response => {\n      if (formData) {\n        return axios\n          .put('/api/upload', formData)\n          .then(result => {\n            return result.data.user;\n          })\n          .catch(error => {\n            return {\n              error: error.response.data.message || 'server error'\n            };\n          });\n      } else {\n        return response.data.user;\n      }\n    })\n    .catch(error => {\n      return {\n        error: error.response.data.message || 'server error'\n      };\n    });\n};\n\nexport const uploadImageToS3 = async (file) => {\n  const fileName = file.name;\n  const fileType = file.type;\n\n  // 1단계: Presigned URL 요청\n  const { data } = await axios.post(`${config.ROOT}/api/upload`, {\n    fileName,\n    fileType\n  });\n\n  // 2단계: S3에 직접 업로드\n  const result = await axios.put(data.uploadURL, file, {\n    headers: {\n      'Content-Type': fileType\n    }\n  });\n\n  // 업로드된 파일 key 반환\n  return data.key;\n};","import { isPlainObject, forEach, isArray, camelCase } from 'lodash';\n\nexport function objectKeysToCamelCase(snakeCaseObject = null) {\n  if (!snakeCaseObject) return {};\n  const camelCaseObject = {};\n  const camelCaseArray = [];\n\n  forEach(snakeCaseObject, function(value, key) {\n    if (isPlainObject(value) || isArray(value)) {\n      value = objectKeysToCamelCase(value);\n    }\n    if (isArray(snakeCaseObject)) {\n      camelCaseArray.push(value);\n    } else {\n      camelCaseObject[camelCase(key)] = value;\n    }\n  });\n\n  if (isArray(snakeCaseObject)) return camelCaseArray;\n  return camelCaseObject;\n}\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n// import { withRouter } from 'react-router-dom';\nimport LoginForm from '../components/Login/LoginForm';\nimport Logo from '../components/Logo/Logo';\nimport {\n  changeLoginForm,\n  getGeolocation,\n  successUserAuthentication\n} from '../actions';\nimport { postLogin } from '../api';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\nimport { Auth } from 'aws-amplify';\nimport awsconfig from '../aws-config';\nimport { Amplify } from 'aws-amplify';\n\nAmplify.configure(awsconfig);\n\nconst API_URL = 'https://jxsbyfmks7.execute-api.ap-northeast-2.amazonaws.com/prod';\n\nconst Login = () => {\n  const [error, setError] = useState('');\n  const login = useSelector(state => state.login);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleLoginSuccess = () => {\n    navigate('/profile'); // ✅ v6 방식\n  };\n\n  useEffect(() => {\n    const getPosition = () => {\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      });\n      // <button onClick={handleLoginSuccess}>로그인</button>);\n    };\n\n    getPosition()\n      .then(position => {\n        console.log(position.coords);\n        dispatch(\n          getGeolocation('login', {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          })\n        );\n      })\n      .catch(() => {\n        setError('현재 위치를 받아올 수 없습니다.');\n      });\n  }, [dispatch]);\n\n  const onChange = ev => {\n    const { value, name } = ev.target;\n    dispatch(\n      changeLoginForm({\n        name,\n        value\n      })\n    );\n  };\n\n  const onSubmit = async ev => {\n    ev.preventDefault();\n    try {\n      // ✅ Cognito 로그인\n      const user = await Auth.signIn(login.email, login.password);\n      const idToken = user.signInUserSession.idToken.jwtToken;\n  \n      // ✅ JWT 저장\n      sessionStorage.setItem('jwt', idToken);\n  \n      // ✅ 백엔드에서 유저 정보 요청 (API Gateway + Lambda)\n      const res = await fetch(`${API_URL}/auth/user`, {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${idToken}`,\n        },\n      });\n  \n      if (res.ok) {\n        const data = await res.json();\n        console.log('✅ 유저 정보:', data);\n      \n        if (data && data.user) {\n          dispatch(successUserAuthentication(objectKeysToCamelCase(data.user)));\n          navigate('/profile');\n        } else {\n          setError('유저 정보를 불러오지 못했습니다.');\n        }\n      } else {\n        // 서버 에러일 때 안전하게 처리\n        let errorMsg = '서버 오류가 발생했습니다.';\n        try {\n          const errorData = await res.json();\n          errorMsg = errorData.message || errorMsg;\n        } catch (parseErr) {\n          console.error('에러 메시지 파싱 실패:', parseErr);\n        }\n        setError(errorMsg);\n      }\n    } catch (err) {\n      console.error('API 호출 실패:', err);\n      if (err.name === 'UserNotConfirmedException') {\n        setError('이메일 인증이 필요합니다.');\n      } else if (err.name === 'NotAuthorizedException') {\n        setError('아이디 또는 비밀번호가 잘못되었습니다.');\n      } else {\n        setError('로그인 중 오류가 발생했습니다.');\n      }\n    }};\n\n  return (\n    <>\n      <Logo />\n      <LoginForm\n        onChange={onChange}\n        onSubmit={onSubmit}\n        error={error}\n        login={login}\n      />\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport './SignupForm.scss';\nimport { Auth } from 'aws-amplify';\n\nconst ROOT = 'https://jxsbyfmks7.execute-api.ap-northeast-2.amazonaws.com/prod';\n\n\nconst SignupForm = ({ onSubmit, onChange, register, error, onFileChange }) => {\n  let form = null;\n\n  useEffect(() => {\n    const scrollToTop = () => {\n      form.scrollIntoView({ block: 'start' });\n    };\n\n    scrollToTop();\n  }, [error, form]);\n  return (\n    <div className=\"signupForm form\">\n      <form onSubmit={(e) => {\n        e.preventDefault();\n        handleSignUp(register, register.file);  // 선택된 파일 넘기기\n      }} ref={le => (form = le)}>\n        <p className=\"error\">{error}</p>\n        <label htmlFor=\"mbit\" required>\n          MBTI\n        </label>\n        <select\n          name=\"mbti\"\n          id=\"mbti\"\n          required\n          value={register.mbti}\n          onChange={onChange}\n        >\n          <option value=\"\">mbti를 선택해 주세요.</option>\n          <option value=\"intj\">INTJ 용의주도한 전략가</option>\n          <option value=\"intp\">INTP 논리적인 사색가</option>\n          <option value=\"entj\">ENTJ 대담한 통솔자</option>\n          <option value=\"entp\">ENTP 뜨거운 논쟁을 즐기는 변론가</option>\n          <option value=\"infj\">INFJ 선의의 옹호자</option>\n          <option value=\"infp\">INFP 열정적인 중재자</option>\n          <option value=\"enfj\">ENFJ 정의로운 사회운동가</option>\n          <option value=\"enfp\">ENFP 재기발랄한 활동가</option>\n          <option value=\"istj\">ISTJ 청렴결백한 논리주의자</option>\n          <option value=\"isfj\">ISFJ 용감한 수호자</option>\n          <option value=\"estj\">ESTJ 엄격한 관리자</option>\n          <option value=\"esfj\">ESFJ 사교적인 외교관</option>\n          <option value=\"istp\">ISTP 만능 재주꾼</option>\n          <option value=\"isfp\">ISFP 호기심 많은 예술가</option>\n          <option value=\"estp\">ESTP 모험을 즐기는 사업가</option>\n          <option value=\"esfp\">ESFP 자유로운 영혼의 연예인</option>\n        </select>\n        <p>\n          mbti를 모르신다면\n          <a href=\"https://www.16personalities.com/ko/%EB%AC%B4%EB%A3%8C-%EC%84%B1%EA%B2%A9-%EC%9C%A0%ED%98%95-%EA%B2%80%EC%82%AC\">\n            mbti 사이트\n          </a>\n          에서 검사를 부탁드립니다.\n        </p>\n        <label htmlFor=\"email\">email</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          required\n          value={register.email}\n          onChange={onChange}\n          maxLength=\"100\"\n        />\n        <label htmlFor=\"password\">password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          required\n          value={register.password || ''}\n          onChange={onChange}\n          maxLength=\"18\"\n          minLength=\"6\"\n        />\n        <label htmlFor=\"passwordConfirm\">password confirm</label>\n        <input\n          type=\"password\"\n          name=\"passwordConfirm\"\n          required\n          value={register.passwordConfirm || ''}\n          onChange={onChange}\n          maxLength=\"18\"\n          minLength=\"6\"\n        />\n        <label htmlFor=\"name\">name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          required\n          value={register.name || ''}\n          onChange={onChange}\n          maxLength=\"13\"\n        />\n        <p className=\"title\">성별</p>\n        <div className=\"gender-area\">\n          <input\n            type=\"radio\"\n            name=\"gender\"\n            value=\"female\"\n            id=\"female\"\n            checked={register.gender === 'female'}\n            onChange={onChange}\n            required\n          />\n          <label htmlFor=\"female\">여성</label>\n          <input\n            type=\"radio\"\n            name=\"gender\"\n            value=\"male\"\n            id=\"male\"\n            checked={register.gender === 'male'}\n            onChange={onChange}\n          />\n          <label htmlFor=\"male\">남성</label>\n        </div>\n        <label htmlFor=\"file\">프로필 사진</label>\n        <input\n          type=\"file\"\n          name=\"file\"\n          id=\"file\"\n          onChange={onFileChange}\n          accept=\"image/x-png,image/gif,image/jpeg\"\n          required\n        />\n        <label htmlFor=\"description\">자기소개</label>\n        <textarea\n          type=\"text\"\n          name=\"description\"\n          maxLength=\"60\"\n          value={register.description}\n          onChange={onChange}\n        />\n        <button>Sign up</button>\n      </form>\n    </div>\n  );\n};\n\nconst handleSignUp = async (register, file) => {\n  try {\n    // 1️⃣ Presigned URL 요청\n    const presignedRes = await axios.put(`${ROOT}/api/upload`, {\n      fileName: file.name,\n      fileType: file.type\n    });\n    const { uploadURL, key } = presignedRes.data;\n\n    // 2️⃣ S3로 파일 업로드\n    await axios.put(uploadURL, file, {\n      headers: { 'Content-Type': file.type }\n    });\n\n    console.log('✅ 파일 업로드 성공:', key);\n\n    // 3️⃣ Cognito 회원가입\n    const { email, password } = register;\n    await Auth.signUp({\n      username: email,\n      password,\n      attributes: { email },\n    });\n\n    // 4️⃣ 추가 서버 회원가입 API 호출 (있다면)\n    await axios.post(`${ROOT}/api/signup`, {\n      ...register,\n      profileImage: key\n    });\n\n    alert('가입 성공!');\n  } catch (error) {\n    console.error('회원가입 에러:', error);\n \n    if (error.response) {\n       console.error('서버 응답 에러:', error.response.data);\n    } else if (error.message) {\n       console.error('에러 메시지:', error.message);\n    }\n \n    alert('가입 실패!');\n }\n \n};\nexport default SignupForm;\n","// import React from 'react';\n// // import { withRouter } from 'react-router-dom';\n// import { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import './BackTab.scss';\n\n// const BackTab = ({ history, title }) => {\n//   const onBackClick = () => history.goBack();\n\n//   return (\n//     <div className=\"back-tab\">\n//       <button onClick={onBackClick}>\n//         <FontAwesomeIcon icon={faArrowLeft} />\n//       </button>\n//       <span className=\"title\">{title}</span>\n//     </div>\n//   );\n// };\n\n// export default BackTab;\n\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './BackTab.scss';\n\nconst BackTab = ({ title }) => {\n  const navigate = useNavigate();\n\n  const onBackClick = () => {\n    navigate(-1); // -1 = go back\n  };\n\n  return (\n    <div className=\"back-tab\" onClick={onBackClick}>\n      ← {title}\n    </div>\n  );\n};\n\nexport default BackTab;\n","// import React, { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// // import { withRouter } from 'react-router-dom';\n// import { useSelector, useDispatch } from 'react-redux';\n// import SignupForm from '../components/Signup/SignupForm';\n// import BackTab from '../components/BackTab/BackTab';\n// import { changeRegisterForm, getGeolocation, registerMember } from '../actions';\n// import { objectKeysToCamelCase } from '../utility/formattingData';\n// import { postSignup } from '../api';\n\n// const Signup = () => {\n//   const [error, setError] = useState('');\n//   const [file, setFile] = useState(null);\n//   const register = useSelector(state => state.register);\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     const getPosition = () => {\n//       return new Promise((resolve, reject) => {\n//         navigator.geolocation.getCurrentPosition(resolve, reject);\n//       });\n//     };\n\n//     getPosition()\n//       .then(position => {\n//         console.log(position.coords);\n//         dispatch(\n//           getGeolocation('register', {\n//             latitude: position.coords.latitude,\n//             longitude: position.coords.longitude\n//           })\n//         );\n//       })\n//       .catch(error => {\n//         setError('현재 위치를 받아올 수 없습니다.');\n//       });\n//   }, [dispatch]);\n\n//   const onChange = ev => {\n//     const { value, name } = ev.target;\n//     dispatch(\n//       changeRegisterForm({\n//         name,\n//         value\n//       })\n//     );\n//   };\n\n//   const onFileChange = ev => {\n//     setFile(ev.target.files[0]);\n//   };\n\n//   const onSubmit = async ev => {\n//     ev.preventDefault();\n//     const passwordReg = new RegExp(\n//       '^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{6,18}$'\n//     );\n//     const { email, password, passwordConfirm, name, mbti, gender } = register;\n\n//     if ([email, password, passwordConfirm, name, mbti, gender].includes('')) {\n//       setError('모두 입력하세요.');\n//       return;\n//     }\n\n//     if (!passwordReg.test(password)) {\n//       setError(\n//         '비밀번호는 숫자와 영문 포함 6자 이상 18자 이하로 입력해주세요.'\n//       );\n//       return;\n//     }\n\n//     if (password !== passwordConfirm) {\n//       setError('비밀번호가 일치하지 않습니다.');\n//       dispatch(\n//         changeRegisterForm({\n//           key: 'password',\n//           value: ''\n//         })\n//       );\n//       dispatch(\n//         changeRegisterForm({\n//           key: 'passwordConfirm',\n//           value: ''\n//         })\n//       );\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append('file', file);\n//     await postSignup(formData, register).then(result =>\n//       dispatch(registerMember(objectKeysToCamelCase(result.data)))\n//     );\n//     // history.push('/profile');\n//   };\n\n//   return (\n//     <>\n//       <BackTab title={'Sign up'} />\n//       <SignupForm\n//         register={register}\n//         onChange={onChange}\n//         onFileChange={onFileChange}\n//         onSubmit={onSubmit}\n//         error={error}\n//       />\n//     </>\n//   );\n// };\n\n// export default Signup;\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SignupForm from '../components/Signup/SignupForm';\nimport BackTab from '../components/BackTab/BackTab';\nimport { changeRegisterForm, getGeolocation, registerMember } from '../actions';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\nimport { postSignup } from '../api';\n\nconst Signup = () => {\n  const [error, setError] = useState('');\n  const [file, setFile] = useState(null);\n  const register = useSelector(state => state.register);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const getPosition = () => {\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      });\n    };\n\n    getPosition()\n      .then(position => {\n        dispatch(\n          getGeolocation('register', {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          })\n        );\n      })\n      .catch(() => {\n        setError('현재 위치를 받아올 수 없습니다.');\n      });\n  }, [dispatch]);\n\n  const onChange = ev => {\n    const { value, name } = ev.target;\n    dispatch(changeRegisterForm({ name, value }));\n  };\n\n  const onFileChange = ev => {\n    const selectedFile = ev.target.files[0];\n    dispatch(changeRegisterForm({ name: 'file', value: selectedFile }));\n  };\n  \n\n  const onSubmit = async ev => {\n    ev.preventDefault();\n    const passwordReg = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,18}$/;\n    const { email, password, passwordConfirm, name, mbti, gender } = register;\n\n    if ([email, password, passwordConfirm, name, mbti, gender].includes('')) {\n      setError('모두 입력하세요.');\n      return;\n    }\n\n    if (!passwordReg.test(password)) {\n      setError('비밀번호는 숫자와 영문 포함 6자 이상 18자 이하로 입력해주세요.');\n      return;\n    }\n\n    if (password !== passwordConfirm) {\n      setError('비밀번호가 일치하지 않습니다.');\n      dispatch(changeRegisterForm({ key: 'password', value: '' }));\n      dispatch(changeRegisterForm({ key: 'passwordConfirm', value: '' }));\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('email', register.email);\n    formData.append('password', register.password);\n    formData.append('name', register.name);\n    formData.append('mbti', register.mbti);\n    formData.append('gender', register.gender);\n\n    const result = await postSignup(formData, register);\n\n    console.log('[DEBUG] postSignup result.data:', result.data); // ✅ 확인용\n\n    dispatch(registerMember(objectKeysToCamelCase(result.data)));\n\n    // navigate('/profile');\n  };\n\n  return (\n    <>\n      <BackTab title={'Sign up'} />\n      <SignupForm\n        register={register}\n        onChange={onChange}\n        onFileChange={onFileChange}\n        onSubmit={onSubmit}\n        error={error}\n      />\n    </>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {\n  faUserCircle,\n  faComment,\n  faUserFriends\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './TabList.scss';\n\nconst TabList = () => (\n  <nav className=\"tab-list\">\n    <ul>\n      <li>\n        <NavLink to=\"/profile\" activeClassName=\"selected\">\n          <FontAwesomeIcon icon={faUserCircle} />\n        </NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/users/list\" activeClassName=\"selected\">\n          <FontAwesomeIcon icon={faUserFriends} />\n        </NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/chats\" activeClassName=\"selected\">\n          <FontAwesomeIcon icon={faComment} />\n        </NavLink>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default TabList;\n","import React from 'react';\nimport { faArrowsAltH } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport CountUp from 'react-countup';\nimport './List.scss';\n\nconst List = ({ partner, view, matchData, myMbti, myName }) => {\n  const figure = matchData.match(/\\d+/)[0] * 25;\n\n  return (\n    <div className={`choice-list show-${view}`}>\n      {partner && (\n        <>\n          <div className=\"front card\">\n            <img\n              src={partner.profileImage}\n              className=\"profile-image\"\n              alt=\"profile\"\n            />\n            <div className=\"info\">\n              <p className=\"name\">{partner.name}</p>\n              <pre className=\"description\">{partner.description}</pre>\n            </div>\n          </div>\n          <div className={`back card ${matchData}`}>\n            <p className=\"title\">\n              내 MBTI와의\n              <br /> 적합성은?\n            </p>\n            <ul className=\"emoji-list\">\n              <li>\n                <div className=\"emoji emoji--haha\">\n                  <div className=\"emoji__face\">\n                    <div className=\"emoji__eyes\"></div>\n                    <div className=\"emoji__mouth\">\n                      <div className=\"emoji__tongue\"></div>\n                    </div>\n                  </div>\n                </div>\n              </li>\n              <li>\n                <div className=\"emoji emoji--yay\">\n                  <div className=\"emoji__face\">\n                    <div className=\"emoji__eyebrows\"></div>\n                    <div className=\"emoji__mouth\"></div>\n                  </div>\n                </div>\n              </li>\n              <li>\n                <div className=\"emoji emoji--wow\">\n                  <div className=\"emoji__face\">\n                    <div className=\"emoji__eyebrows\"></div>\n                    <div className=\"emoji__eyes\"></div>\n                    <div className=\"emoji__mouth\"></div>\n                  </div>\n                </div>\n              </li>\n              <li>\n                <div className=\"emoji emoji--sad\">\n                  <div className=\"emoji__face\">\n                    <div className=\"emoji__eyebrows\"></div>\n                    <div className=\"emoji__eyes\"></div>\n                    <div className=\"emoji__mouth\"></div>\n                  </div>\n                </div>\n              </li>\n              <li>\n                <div className=\"emoji emoji--angry\">\n                  <div className=\"emoji__face\">\n                    <div className=\"emoji__eyebrows\"></div>\n                    <div className=\"emoji__eyes\"></div>\n                    <div className=\"emoji__mouth\"></div>\n                  </div>\n                </div>\n              </li>\n            </ul>\n            <div className=\"figure\">\n              <CountUp start={0} end={figure} duration={3} />\n              <span>%</span>\n            </div>\n\n            <ul className=\"mbti-info\">\n              <li>\n                <p className=\"name\">{myName}</p>\n                <p className=\"mbti\">{myMbti}</p>\n              </li>\n              <li className=\"arrow\">\n                <FontAwesomeIcon icon={faArrowsAltH} />\n              </li>\n              <li>\n                <p className=\"name\">{partner.name}</p>\n                <p className=\"mbti\">{partner.mbti.type}</p>\n              </li>\n            </ul>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default List;\n","import React from 'react';\nimport { faKissWinkHeart, faMeh } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './ChoiceTab.scss';\n\nconst Tab = ({ onLikeClick, onUnLikeClick }) => {\n  return (\n    <div className=\"choice-tab\">\n      <ul>\n        <li>\n          <button onClick={onLikeClick}>\n            <FontAwesomeIcon icon={faKissWinkHeart} />\n            <span>Like</span>\n          </button>\n        </li>\n        <li>\n          <button onClick={onUnLikeClick}>\n            <FontAwesomeIcon icon={faMeh} />\n            <span>Pass</span>\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Tab;\n","import React from 'react';\nimport { faHandPointRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './NextTab.scss';\n\nconst NextTab = ({ onNextClick }) => (\n  <div className=\"next-tab\">\n    <button onClick={onNextClick}>\n      <span>next</span>\n      <FontAwesomeIcon icon={faHandPointRight} />\n    </button>\n  </div>\n);\n\nexport default NextTab;\n","import React from 'react';\nimport Logo from '../Logo/Logo';\n\nconst Notice = ({ notice = null }) => (\n  <div className=\"notice-content\">\n    <Logo />\n    <p>{notice}</p>\n  </div>\n);\n\nexport default Notice;\n","import React from 'react';\nimport './Popup.scss';\n\nconst Popup = ({ onPopupClick }) => (\n  <div className=\"popup\" onClick={onPopupClick}>\n    <p>\n      채팅방이\n      <br /> 생성되었습니다.\n    </p>\n    <button>확인</button>\n  </div>\n);\n\nexport default Popup;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Tab from '../components/Tab/TabList';\nimport List from '../components/ListMembers/List';\nimport ChoiceTab from '../components/ListMembers/ChoiceTab';\nimport NextTab from '../components/ListMembers/NextTab';\nimport Notice from '../components/Notice/Notice';\nimport Popup from '../components/Popup/Popup';\nimport { getUsers, getLikeMe, addLikeUser, postChat } from '../api';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\nimport {\n  loadUsersSuccess,\n  increaseChoiceCount,\n  resetChoiceCount,\n  increasePageIndex,\n  noticeSelectedAll,\n  addNewUsers,\n  leaveMemberList\n} from '../actions';\n\nconst ListMembers = () => {\n  const [view, setView] = useState('front');\n  const [matchData, setMatchData] = useState('level0');\n  const [viewPopup, setViewPopup] = useState(false);\n  const [notice, setnotice] = useState('유저 정보를 가져오고 있습니다.🙏');\n  const dispatch = useDispatch();\n  const {\n    users: partners,\n    user,\n    pageIndex,\n    hasUsersNotice,\n    choiceCount,\n    totalUserCount,\n    totalChoiceCount\n  } = useSelector(state => ({\n    users: state.users,\n    user: state.user,\n    pageIndex: state.pageIndex,\n    hasUsersNotice: state.hasUsersNotice,\n    choiceCount: state.choiceCount,\n    totalUserCount: state.totalUserCount,\n    totalChoiceCount: state.totalChoiceCount\n  }));\n\n  const LIMIT = 5;\n\n  useEffect(() => {\n    const setUsers = async () => {\n      const result = await getUsers({ limit: LIMIT, pageIndex: 0 });\n\n      if (!result.total_user_count) {\n        setnotice('모든 회원을 선택 하셨습니다~! 고생하셨습니다!👏');\n        dispatch(noticeSelectedAll());\n        return;\n      }\n\n      dispatch(loadUsersSuccess(objectKeysToCamelCase(result)));\n    };\n\n    setUsers();\n    return () => {\n      dispatch(leaveMemberList());\n    };\n  }, [dispatch]);\n\n  const onLikeClick = async () => {\n    const likeMeList = await getLikeMe();\n    if (likeMeList.includes(partners[choiceCount].id)) {\n      await postChat(partners[choiceCount].id);\n      setViewPopup(true);\n    } else {\n      addLikeUser(partners[choiceCount].id);\n    }\n\n    setView('back');\n    const compatibility = Object.keys(user.mbti).find(key => {\n      if (typeof user.mbti[key] === 'object') {\n        return user.mbti[key].includes(partners[choiceCount].mbti.type);\n      }\n    });\n\n    setMatchData(compatibility);\n  };\n\n  const onUnLikeClick = async () => {\n    await addLikeUser(partners[choiceCount].id);\n\n    onNextClick();\n  };\n\n  const onNextClick = async () => {\n    if (totalUserCount === totalChoiceCount + 1) {\n      setnotice('모든 회원을 선택 하셨습니다~! 고생하셨습니다!');\n      dispatch(noticeSelectedAll());\n      return;\n    }\n\n    // if (choiceCount === LIMIT - 1 || choiceCount + 2 === partners.length) {\n    //   let result = await getUsers({ limit: LIMIT, pageIndex: pageIndex + 1 });\n\n    //   if (!result.total_user_count || !partners.length) {\n    //     setnotice('모든 회원을 선택 하셨습니다~! 고생하셨습니다!');\n    //     dispatch(noticeSelectedAll());\n    //     return;\n    //   }\n\n    //   console.log('users' + result.length);\n    //   // result = await objectKeysToCamelCase(result);\n    //   dispatch(addNewUsers(result));\n    //   dispatch(resetChoiceCount());\n    //   dispatch(increasePageIndex());\n    //   setView('front');\n    //   setMatchData('level0');\n    //   return;\n    // }\n\n    dispatch(increaseChoiceCount());\n    setView('front');\n    setMatchData('level0');\n  };\n\n  const onPopupClick = () => {\n    setViewPopup(false);\n  };\n\n  return (\n    <div className=\"page-wrap\">\n      <Tab />\n      {hasUsersNotice ? (\n        <Notice notice={notice} />\n      ) : (\n        <>\n          <List\n            partner={partners[choiceCount]}\n            view={view}\n            matchData={matchData}\n            myMbti={user.mbti.type}\n            myName={user.name}\n          />\n          {(view === 'front' && (\n            <ChoiceTab\n              onLikeClick={onLikeClick}\n              onUnLikeClick={onUnLikeClick}\n            />\n          )) || <NextTab onNextClick={onNextClick} />}\n          {viewPopup && <Popup onPopupClick={onPopupClick} />}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ListMembers;\n","import React from 'react';\nimport './View.scss';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Profile = ({ user }) => {\n  const { profileImage, name, mbti, likeMe, description } = user;\n  return (\n    <div className=\"profile-area\">\n      <img src={profileImage} alt=\"profile\" className=\"profile-image\" />\n      <p>\n        <span className=\"name\">{name}</span>\n        <span className=\"mbti\">{mbti.type}</span>\n      </p>\n      <p className=\"likes\">\n        <FontAwesomeIcon icon={faHeart} />\n        <span className=\"num\">{likeMe.length}</span>\n      </p>\n      {description && <pre className=\"description\">{description}</pre>}\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Tab from '../components/Tab/TabList';\nimport View from '../components/Profile/View';\nimport { getLogout } from '../api';\nimport { logoutUser } from '../actions';\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const { user } = useSelector(state => ({\n    user: state.user\n  }));\n\n  const onLogoutClick = async () => {\n    getLogout().then(response => {\n      dispatch(logoutUser());\n    });\n  };\n\n  const callProtectedAPI = async () => {\n    const token = localStorage.getItem('jwt');\n    if (!token) return alert('로그인이 필요합니다.');\n  \n    try {\n      const res = await fetch('https://wfqynf004c.execute-api.ap-northeast-2.amazonaws.com/prod/user', {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n      const data = await res.json();\n      console.log('응답:', data);\n    } catch (err) {\n      console.error('API 호출 오류:', err);\n    }\n  };\n  \n  return (\n    <>\n      <Tab />\n      <div className=\"content\">\n        <View user={user} />\n        <Link to=\"/profile/edit\" className=\"link-button\">\n          수정하기\n        </Link>\n        <button href=\"#none\" onClick={onLogoutClick} className=\"link-button\">\n          로그아웃\n        </button>\n        <button onClick={callProtectedAPI}>내 정보 불러오기</button>\n      </div>\n    </>\n  );\n};\n\nexport default Profile;\n","import React, { useEffect } from 'react';\nimport './EditForm.scss';\n\nconst EditForm = ({ onSubmit, onChange, edit, error, onFileChange }) => {\n  let form = null;\n\n  useEffect(() => {\n    const scrollToTop = () => {\n      form.scrollIntoView({ block: 'start' });\n    };\n\n    scrollToTop();\n  }, [error, form]);\n\n  return (\n    <div className=\"edit-form form\">\n      <form onSubmit={onSubmit} ref={le => (form = le)}>\n        <p>{error}</p>\n        <select\n          name=\"mbti\"\n          id=\"mbti\"\n          required\n          value={edit.mbti}\n          onChange={onChange}\n        >\n          <option value=\"\">mbti를 선택해 주세요.</option>\n          <option value=\"intj\">INTJ 용의주도한 전략가</option>\n          <option value=\"intp\">INTP 논리적인 사색가</option>\n          <option value=\"entj\">ENTJ 대담한 통솔자</option>\n          <option value=\"entp\">ENTP 뜨거운 논쟁을 즐기는 변론가</option>\n          <option value=\"infj\">INFJ 선의의 옹호자</option>\n          <option value=\"infp\">INFP 열정적인 중재자</option>\n          <option value=\"enfj\">ENFJ 정의로운 사회운동가</option>\n          <option value=\"enfp\">ENFP 재기발랄한 활동가</option>\n          <option value=\"istj\">ISTJ 청렴결백한 논리주의자</option>\n          <option value=\"isfj\">ISFJ 용감한 수호자</option>\n          <option value=\"estj\">ESTJ 엄격한 관리자</option>\n          <option value=\"esfj\">ESFJ 사교적인 외교관</option>\n          <option value=\"istp\">ISTP 만능 재주꾼</option>\n          <option value=\"isfp\">ISFP 호기심 많은 예술가</option>\n          <option value=\"estp\">ESTP 모험을 즐기는 사업가</option>\n          <option value=\"esfp\">ESFP 자유로운 영혼의 연예인</option>\n        </select>\n        <label htmlFor=\"name\">name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          required\n          value={edit.name}\n          onChange={onChange}\n          maxLength=\"13\"\n        />\n        <label htmlFor=\"file\">프로필 사진</label>\n        <input\n          type=\"file\"\n          name=\"file\"\n          id=\"file\"\n          onChange={onFileChange}\n          accept=\"image/x-png,image/gif,image/jpeg\"\n        />\n        <p className=\"title\">회원님의 정보</p>\n        <textarea\n          name=\"description\"\n          className=\"description\"\n          cols=\"20\"\n          rows=\"3\"\n          maxLength=\"100\"\n          value={edit.description}\n          onChange={onChange}\n        ></textarea>\n        <button>수정하기</button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditForm;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// import { withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeEditForm, changeUserData } from '../actions';\nimport EditForm from '../components/Edit/EditForm';\nimport BackTab from '../components/BackTab/BackTab';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\nimport { putUserInfo } from '../api';\n\nconst Edit = () => {\n  const [error, setError] = useState('');\n  const [file, setFile] = useState(null);\n  const { edit, user } = useSelector(state => ({\n    edit: state.edit,\n    user: state.user\n  }));\n  const dispatch = useDispatch();\n\n  const onChange = ev => {\n    const { value, name } = ev.target;\n    dispatch(\n      changeEditForm({\n        name,\n        value\n      })\n    );\n  };\n\n  const onFileChange = ev => {\n    setFile(ev.target.files[0]);\n  };\n\n  const onSubmit = async ev => {\n    ev.preventDefault();\n\n    const { name, mbti } = edit;\n\n    if ([name, mbti].includes('')) {\n      setError('모두 입력하세요.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n    const userData = !file\n      ? await putUserInfo(edit)\n      : await putUserInfo(edit, formData);\n\n    dispatch(changeUserData(objectKeysToCamelCase(userData)));\n    // history.push('/profile');\n  };\n\n  return (\n    <>\n      <BackTab title={'Settings'} />\n      <EditForm\n        user={user}\n        edit={edit}\n        onChange={onChange}\n        onFileChange={onFileChange}\n        onSubmit={onSubmit}\n        error={error}\n      />\n    </>\n  );\n};\n\nexport default Edit;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './List.scss';\n\nconst List = ({ chats }) => {\n  const renderList = chats.map((chat, index) => (\n    <li key={index}>\n      <Link to={`/chat/room/${chat._id}`}>\n        <div className=\"left\">\n          <img src={chat.partner.profile_image} alt=\"profile\" />\n        </div>\n        <div className=\"right\">\n          <p className=\"name\">{chat.partner.name}</p>\n          {(chats[index].messages.length && (\n            <p className=\"message\">\n              {chats[index].messages[chats[index].messages.length - 1].content}\n            </p>\n          )) || <p className=\"message none\">먼저 인사해 보세요~!</p>}\n        </div>\n      </Link>\n    </li>\n  ));\n\n  return (\n    <div className=\"chat-list\">\n      <ul>{renderList}</ul>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Tab from '../components/Tab/TabList';\nimport List from '../components/ChatList/List';\nimport Roading from '../components/Notice/Notice';\nimport { loadChatsListSuccess } from '../actions';\nimport { getChats } from '../api/index';\n\nconst ChatList = () => {\n  const [notice, setnotice] = useState('채팅 정보를 가져오고 있습니다.🙏');\n  const { chats, hasChatsNotice } = useSelector(state => ({\n    chats: state.chats,\n    hasChatsNotice: state.hasChatsNotice\n  }));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const getchatList = async () => {\n      const chatList = await getChats();\n      if (!chatList.chats.length) {\n        setnotice('채팅 목록이 없습니다.😭');\n        return;\n      }\n      dispatch(loadChatsListSuccess(chatList.chats));\n    };\n\n    getchatList();\n  }, [dispatch]);\n\n  return (\n    <>\n      <Tab />\n      {hasChatsNotice ? <Roading notice={notice} /> : <List chats={chats} />}\n    </>\n  );\n};\n\nexport default ChatList;\n","import React from 'react';\nimport './InputPanel.scss';\n\nconst View = ({ onMessageChange, message, onSubmit, onKeyPress }) => {\n  return (\n    <div className=\"input-message\">\n      <input\n        type=\"text\"\n        className=\"input-text\"\n        onChange={onMessageChange}\n        value={message}\n        onKeyPress={onKeyPress}\n      />\n      <button onClick={onSubmit}>전송</button>\n    </div>\n  );\n};\n\nexport default View;\n","import React, { useEffect } from 'react';\nimport './View.scss';\n\nconst View = ({ chats, user }) => {\n  let chatList = null;\n  let randerChat = '';\n\n  useEffect(() => {\n    const scrollToBottom = () => {\n      chatList.scrollIntoView({ block: 'end' });\n    };\n\n    scrollToBottom();\n  }, [chats, chatList]);\n\n  if (chats.hasOwnProperty('messages')) {\n    randerChat = chats.messages.map((chat, index) => {\n      const position = chat.speaker !== user.id ? 'left' : 'right';\n      const sender = chat.speaker === user.id ? user : chats.partner;\n\n      return (\n        <li\n          key={index}\n          className={`${position} ${\n            sender === chats.partner ? 'partner' : 'me'\n          }`}\n        >\n          <img\n            src={sender.profileImage}\n            className=\"profile-image\"\n            alt=\"profile\"\n          />\n          {sender === chats.partner && <p className=\"name\">{sender.name}</p>}\n          <p className=\"talk\">{chat.content}</p>\n        </li>\n      );\n    });\n  }\n  return (\n    <div className=\"messages\">\n      <ul ref={le => (chatList = le)}>{randerChat}</ul>\n    </div>\n  );\n};\n\nexport default View;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport InputPanel from '../components/ChatView/InputPanel';\nimport View from '../components/ChatView/View';\nimport BackTab from '../components/BackTab/BackTab';\nimport { useParams } from 'react-router-dom';\nimport { getChat, postNewMessage } from '../api';\nimport { enterChatRoom, addNewMessage, leaveRoom } from '../actions';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\n\nconst ChatView = () => {\n  const [message, setMessage] = useState('');\n  const { client, user, currentRoomChat } = useSelector(state => ({\n    client: state.client,\n    user: state.user,\n    currentRoomChat: state.currentRoomChat\n  }));\n  const dispatch = useDispatch();\n  const { roomId } = useParams();\n  const userId = user.id;\n\n  useEffect(() => {\n    const setChat = async () => {\n      const chat = await getChat(roomId);\n      dispatch(enterChatRoom(objectKeysToCamelCase(chat)));\n    };\n\n    setChat();\n\n    client.joinRoom({ roomId, userId });\n\n    client.receiveNewMessage(data => {\n      dispatch(\n        addNewMessage({\n          createAt: new Date(),\n          content: data.message,\n          speaker: data.userId\n        })\n      );\n    });\n\n    return () => {\n      client.leaveRoom(roomId);\n      dispatch(leaveRoom());\n    };\n  }, []);\n\n  const onMessageChange = ev => {\n    const { value } = ev.currentTarget;\n    setMessage(value);\n  };\n\n  const handleSubmit = () => {\n    if (!message) return;\n    client.sendMessage({ roomId, userId, message });\n    postNewMessage(roomId, { message });\n    setMessage('');\n  };\n\n  const handleKeyPress = ev => {\n    if (ev.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  return (\n    <>\n      {currentRoomChat.hasOwnProperty('partner') && (\n        <BackTab title={currentRoomChat.partner.name || ''} />\n      )}\n      <View chats={currentRoomChat} user={user} />\n      <InputPanel\n        onMessageChange={onMessageChange}\n        message={message}\n        onKeyPress={handleKeyPress}\n        onSubmit={handleSubmit}\n        chat={currentRoomChat}\n      />\n    </>\n  );\n};\n\nexport default ChatView;\n","import React from 'react';\n\nconst NotFound = () => {\n  return <div>페이지를 찾지 못하였습니다.</div>;\n};\n\nexport default NotFound;\n","import React from 'react';\nimport Logo from '../components/Logo/Logo';\n\nconst MainLoading = () => (\n  <div className=\"main-loading\">\n    <Logo />\n  </div>\n);\n\nexport default MainLoading;\n","// import React from 'react';\n// import './App.scss';\n// import { useSelector } from 'react-redux';\n// import { BrowserRouter, Switch, Route, Redirect, useLocation } from 'react-router-dom';\n// import Login from './containers/Login';\n// import Signup from './containers/Signup';\n// import ListMembers from './containers/ListMembers';\n// import Profile from './containers/Profile';\n// import Edit from './containers/Edit';\n// import ChatList from './containers/ChatList';\n// import ChatView from './containers/ChatView';\n// import NotFound from './containers/NotFound';\n// import MainLoading from './containers/MainLoading';\n\n// const App = () => {\n//   const { isAuthenticated, isMainLoading } = useSelector(state => ({\n//     isAuthenticated: state.isAuthenticated,\n//     isMainLoading: state.isMainLoading\n//   }));\n\n//   const privateRender = (Component, props) => {\n//     return isAuthenticated === true ? (\n//       <Component props={props} />\n//     ) : (\n//       <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n//     );\n//   };\n\n//   const notLoginRender = (Component, props) => {\n//     return !isAuthenticated === true ? (\n//       <Component props={props} />\n//     ) : (\n//       <Redirect\n//         to={{ pathname: '/profile', state: { from: props.location } }}\n//       />\n//     );\n//   };\n\n//   return (\n//     <div className=\"app\">\n//       <div className=\"wrap\">\n//         {isMainLoading ? (\n//           <MainLoading />\n//         ) : (\n//           <Switch>\n//             <Route exact path=\"/\">\n//               <Redirect to=\"/login\" />\n//             </Route>\n\n//             <Route\n//               path=\"/login\"\n//               render={props => notLoginRender(Login, props)}\n//             />\n//             <Route\n//               path=\"/signup\"\n//               render={props => notLoginRender(Signup, props)}\n//             />\n//             <Route\n//               path=\"/profile/edit\"\n//               render={props => privateRender(Edit, props)}\n//             />\n//             <Route\n//               path=\"/profile\"\n//               render={props => privateRender(Profile, props)}\n//             />\n//             <Route\n//               path=\"/users/list\"\n//               render={props => privateRender(ListMembers, props)}\n//             />\n\n//             <Route\n//               path=\"/chats\"\n//               render={props => privateRender(ChatList, props)}\n//             />\n//             <Route\n//               path=\"/chat/room/:roomId\"\n//               render={props => privateRender(ChatView, props)}\n//             />\n//             <Route component={NotFound} />\n//           </Switch>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React from 'react';\nimport './App.scss';\nimport { useSelector } from 'react-redux';\nimport {\n  Routes,\n  Route,\n  Navigate,\n  useLocation,\n} from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { CONFIRMED_NOT_AUTHENTICATED } from './contants/actionTypes';\n\nimport Login from './containers/Login';\nimport Signup from './containers/Signup';\nimport ListMembers from './containers/ListMembers';\nimport Profile from './containers/Profile';\nimport Edit from './containers/Edit';\nimport ChatList from './containers/ChatList';\nimport ChatView from './containers/ChatView';\nimport NotFound from './containers/NotFound';\nimport MainLoading from './containers/MainLoading';\n\n\n// ✅ 로그인 여부 판단용 커스텀 라우터\nconst PrivateRoute = ({ children }) => {\n  const location = useLocation();\n  const isAuthenticated = useSelector(state => state.isAuthenticated);\n  return isAuthenticated ? children : <Navigate to=\"/login\" state={{ from: location }} />;\n};\n\nconst NotLoggedInRoute = ({ children }) => {\n  const isAuthenticated = useSelector(state => state.isAuthenticated);\n  return !isAuthenticated ? children : <Navigate to=\"/profile\" />;\n};\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const { isMainLoading } = useSelector(state => ({\n    isMainLoading: state.isMainLoading\n  }));\n\n  useEffect(() => {\n    dispatch({ type: CONFIRMED_NOT_AUTHENTICATED });\n  }, []);\n\n  \n  return (\n    <div className=\"app\">\n      <div className=\"wrap\">\n        {isMainLoading ? (\n          <MainLoading />\n        ) : (\n            <Routes>\n              {/* 홈 리디렉션 */}\n              <Route path=\"/\" element={<Navigate to=\"/login\" replace />} />\n\n              {/* 로그인/회원가입 */}\n              <Route path=\"/login\" element={\n                <NotLoggedInRoute><Login /></NotLoggedInRoute>\n              } />\n              <Route path=\"/signup\" element={\n                <NotLoggedInRoute><Signup /></NotLoggedInRoute>\n              } />\n\n              {/* 인증 필요 라우트 */}\n              <Route path=\"/profile/edit\" element={\n                <PrivateRoute><Edit /></PrivateRoute>\n              } />\n              <Route path=\"/profile\" element={\n                <PrivateRoute><Profile /></PrivateRoute>\n              } />\n              <Route path=\"/users/list\" element={\n                <PrivateRoute><ListMembers /></PrivateRoute>\n              } />\n              <Route path=\"/chats\" element={\n                <PrivateRoute><ChatList /></PrivateRoute>\n              } />\n              <Route path=\"/chat/room/:roomId\" element={\n                <PrivateRoute><ChatView /></PrivateRoute>\n              } />\n\n              {/* 404 */}\n              <Route path=\"*\" element={<NotFound />} />\n            </Routes>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import {\n  CHANGE_LOGIN_FORM,\n  CHANGE_REGISTER_FORM,\n  GET_GEOLOCATION,\n  SUCCESS_USER_AUTHENTICATION,\n  LOAD_USERS_SUCCESS,\n  INCREASE_CHOICE_COUNT,\n  RESET_CHOICE_COUNT,\n  INCREASE_PAGE_INDEX,\n  LOAD_CHATS_LIST_SUCCESS,\n  ENTER_CHAT_ROOM,\n  ADD_NEW_MESSAGE,\n  LEAVE_ROOM,\n  CHANGE_EDIT_FORM,\n  CONFIRMED_NOT_AUTHENTICATED,\n  USER_LOGOUT,\n  SUCCESS_USER_DATA_UPDATE,\n  SUCCESS_REGISTER_MEMBER,\n  SELECTED_ALL_MEMBERS,\n  NONE_CHATS,\n  ADD_NEW_USERS_LIST,\n  LEAVE_MEMBERS_LIST\n} from '../contants/actionTypes';\nimport socket from '../lib/socket';\n\nconst initialState = {\n  register: {\n    email: '',\n    mbti: '',\n    password: '',\n    passwordConfirm: '',\n    name: '',\n    location: {\n      latitude: 0,\n      longitude: 0\n    },\n    gender: '',\n    description: ''\n  },\n  login: {\n    email: '',\n    password: '',\n    location: {\n      latitude: 0,\n      longitude: 0\n    }\n  },\n  user: {\n    id: '',\n    mbti: {},\n    name: '',\n    profileImage: '',\n    dob: '',\n    location: {\n      latitude: 0,\n      longitude: 0\n    },\n    gender: '',\n    description: '',\n    dislikeUsers: [],\n    likeMe: [],\n    chats: [],\n    mailConfirm: false\n  },\n  edit: {\n    mbti: '',\n    name: '',\n    description: ''\n  },\n  isAuthenticated: false,\n  users: [],\n  totalUserCount: 0,\n  totalChoiceCount: 0,\n  choiceCount: 0,\n  pageIndex: 0,\n  chats: [],\n  client: socket(),\n  currentRoomChat: {},\n  isMainLoading: true,\n  hasUsersNotice: true,\n  hasChatsNotice: true\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_REGISTER_FORM:\n      return Object.assign({}, state, {\n        register: Object.assign({}, state.register, {\n          [action.name]: action.value\n        })\n      });\n    case CHANGE_EDIT_FORM:\n      return Object.assign({}, state, {\n        edit: Object.assign({}, state.edit, {\n          [action.name]: action.value\n        })\n      });\n    case CHANGE_LOGIN_FORM:\n      return Object.assign({}, state, {\n        login: Object.assign({}, state.login, {\n          [action.name]: action.value\n        })\n      });\n    case CONFIRMED_NOT_AUTHENTICATED:\n      return Object.assign({}, state, {\n        isMainLoading: false\n      });\n    case GET_GEOLOCATION:\n      return Object.assign({}, state, {\n        [action.state]: Object.assign({}, state[action.state], {\n          location: action.location\n        })\n      });\n    case SUCCESS_USER_AUTHENTICATION:\n      return Object.assign({}, state, {\n        edit: action.edit,\n        user: action.user,\n        isAuthenticated: true,\n        isMainLoading: false,\n        login: initialState.login\n      });\n    case SUCCESS_REGISTER_MEMBER:\n      return Object.assign({}, state, {\n        edit: action.edit,\n        user: action.user,\n        register: initialState.register,\n        isAuthenticated: action.isAuthenticated\n      });\n    case SUCCESS_USER_DATA_UPDATE:\n      return Object.assign({}, state, {\n        user: action.user\n      });\n    case LOAD_USERS_SUCCESS:\n      return Object.assign({}, state, {\n        users: action.users,\n        totalUserCount: action.totalUserCount,\n        totalChoiceCount: 0,\n        hasUsersNotice: false\n      });\n    case ADD_NEW_USERS_LIST:\n      return Object.assign({}, state, {\n        users: action.users,\n        hasUsersNotice: false\n      });\n    case USER_LOGOUT:\n      return Object.assign({}, state, {\n        users: initialState.users,\n        isAuthenticated: false\n      });\n    case INCREASE_CHOICE_COUNT:\n      return Object.assign({}, state, {\n        totalChoiceCount: state.totalChoiceCount + 1,\n        choiceCount: state.choiceCount + 1\n      });\n    case RESET_CHOICE_COUNT:\n      return Object.assign({}, state, {\n        choiceCount: 0\n      });\n    case INCREASE_PAGE_INDEX:\n      return Object.assign({}, state, {\n        pageIndex: state.pageIndex + 1\n      });\n    case SELECTED_ALL_MEMBERS:\n      return Object.assign({}, state, {\n        hasUsersNotice: true\n      });\n    case LOAD_CHATS_LIST_SUCCESS:\n      return Object.assign({}, state, {\n        chats: action.chats,\n        hasChatsNotice: false\n      });\n    case ENTER_CHAT_ROOM:\n      return Object.assign({}, state, {\n        currentRoomChat: action.chat\n      });\n    case ADD_NEW_MESSAGE:\n      return Object.assign({}, state, {\n        currentRoomChat: Object.assign({}, state.currentRoomChat, {\n          messages: [...state.currentRoomChat.messages, action.newMessage]\n        })\n      });\n    case LEAVE_ROOM:\n      return Object.assign({}, state, {\n        currentRoomChat: {}\n      });\n    case NONE_CHATS:\n      return Object.assign({}, state, {\n        hasChatsNotice: true\n      });\n    case LEAVE_MEMBERS_LIST:\n      return Object.assign({}, state, {\n        users: [],\n        totalUserCount: 0,\n        totalChoiceCount: 0,\n        choiceCount: 0,\n        pageIndex: 0,\n        hasUsersNotice: true\n      });\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import io from 'socket.io-client';\nimport { MESSAGE, ERROR, JOIN, LEAVE } from '../../contants/socketEventTypes';\nimport { config } from '../../config';\n\nconst { SOCKET_ROOT } = config;\n\nexport default function() {\n  // const socket = io.connect(SOCKET_ROOT);\n  const socket = io('wss://datingapp.store', {\n    path: '/socket.io/',\n    transports: ['websocket'],\n    secure: true\n  });\n\n  socket.on(ERROR, function(err) {\n    console.log(err);\n  });\n\n  const receiveNewMessage = cb => {\n    socket.on(MESSAGE, cb);\n  };\n\n  const joinRoom = data => {\n    socket.emit(JOIN, data);\n  };\n\n  const sendMessage = data => {\n    socket.emit(MESSAGE, data);\n  };\n\n  const leaveRoom = roomId => {\n    socket.removeListener(MESSAGE);\n    socket.removeListener(ERROR);\n    socket.emit(LEAVE, roomId);\n  };\n\n  return {\n    joinRoom,\n    sendMessage,\n    receiveNewMessage,\n    leaveRoom\n  };\n}\n","export const MESSAGE = 'MESSAGE';\nexport const ERROR = 'ERROR';\nexport const JOIN = 'JOIN';\nexport const LEAVE = 'LEAVE';\n","// import React from 'react';\n// import { render } from 'react-dom';\n// import { createStore } from 'redux';\n// import { Provider } from 'react-redux';\n// import { BrowserRouter as Router } from 'react-router-dom';\n// import ReactDOM from 'react-dom/client'\n// import matchApp from './reducers';\n// import App from './App';\n// import './index.scss';\n// import { successUserAuthentication, checkUserNotLogin } from './actions';\n// import { getUser } from './api';\n// import { objectKeysToCamelCase } from './utility/formattingData';\n// import { Amplify } from 'aws-amplify';\n// import awsconfig from './aws-config';\n\n// Amplify.configure(awsconfig);\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(<App />);\n\n// const store = createStore(\n//   matchApp,\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// );\n// const loadUser = async () => {\n//   const result = await getUser();\n// //   if (!result || !result.isAuthenticated) {\n// //     return store.dispatch(checkUserNotLogin());}\n// //   store.dispatch(successUserAuthentication(objectKeysToCamelCase(result.user)));\n// // };\n// if (!result || !result.isAuthenticated) {\n//   store.dispatch(checkUserNotLogin());\n// } else {\n//   store.dispatch(successUserAuthentication(objectKeysToCamelCase(result.user)));\n// }};\n\n\n// loadUser();\n\n// render(\n//   <Provider store={store}>\n//     <Router>\n//       <App />\n//     </Router>\n//   </Provider>,\n//   document.getElementById('root')\n// );\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport './index.scss';\nimport matchApp from './reducers';\nimport { successUserAuthentication, checkUserNotLogin } from './actions';\nimport { getUser } from './api';\nimport { objectKeysToCamelCase } from './utility/formattingData';\nimport { Amplify } from 'aws-amplify';\nimport awsconfig from './aws-config';\n\nAmplify.configure(awsconfig);\n\nconst store = createStore(\n  matchApp,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconst loadUser = async () => {\n  const result = await getUser();\n  if (!result || !result.isAuthenticated) {\n    store.dispatch(checkUserNotLogin());\n  } else {\n    store.dispatch(successUserAuthentication(objectKeysToCamelCase(result.user)));\n  }\n};\n\nloadUser();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}