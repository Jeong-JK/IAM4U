{"version":3,"sources":["contants/actionTypes.js","aws-config.js","components/Login/LoginForm.js","config/index.js","components/Logo/Logo.js","actions/index.js","api/index.js","utility/formattingData.js","containers/Login.js","components/Signup/SignupForm.js","components/BackTab/BackTab.js","containers/Signup.js","components/Tab/TabList.js","components/ListMembers/List.js","components/ListMembers/ChoiceTab.js","components/ListMembers/NextTab.js","components/Notice/Notice.js","components/Popup/Popup.js","containers/ListMembers.js","components/Profile/View.js","containers/Profile.js","components/Edit/EditForm.js","containers/Edit.js","components/ChatList/List.js","containers/ChatList.js","components/ChatView/InputPanel.js","components/ChatView/View.js","containers/ChatView.js","containers/NotFound.js","containers/MainLoading.js","App.js","reducers/index.js","lib/socket/index.js","contants/socketEventTypes.js","index.js"],"names":["CHANGE_LOGIN_FORM","SUCCESS_USER_AUTHENTICATION","CONFIRMED_NOT_AUTHENTICATED","SUCCESS_REGISTER_MEMBER","USER_LOGOUT","CHANGE_REGISTER_FORM","SUCCESS_USER_DATA_UPDATE","GET_GEOLOCATION","LOAD_USERS_SUCCESS","INCREASE_CHOICE_COUNT","RESET_CHOICE_COUNT","INCREASE_PAGE_INDEX","SELECTED_ALL_MEMBERS","ADD_NEW_USERS_LIST","LEAVE_MEMBERS_LIST","LOAD_CHATS_LIST_SUCCESS","ENTER_CHAT_ROOM","ADD_NEW_MESSAGE","LEAVE_ROOM","CHANGE_EDIT_FORM","NONE_CHATS","awsconfig","Auth","region","userPoolId","userPoolWebClientId","mandatorySignIn","authenticationFlowType","Amplify","configure","ROOT","SOCKET_ROOT","LoginForm","_ref","onSubmit","onChange","login","error","renderErrors","Array","isArray","map","React","createElement","className","type","name","placeholder","maxLength","value","email","required","password","Link","to","Logo","data-heading","changeRegisterForm","getGeolocation","state","location","successUserAuthentication","user","edit","mbti","description","changeUserData","noticeSelectedAll","loadChatsListSuccess","chats","enterChatRoom","chat","config","Object","freeze","axios","defaults","withCredentials","getUser","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","response","message","wrap","_context","prev","next","localStorage","getItem","get","concat","headers","Authorization","sent","abrupt","data","t0","stop","apply","arguments","getUsers","_ref2","limit","pageIndex","url","method","then","catch","console","log","addLikeUser","partnerId","getChat","roomId","putUserInfo","userData","formData","length","undefined","put","_objectSpread","result","objectKeysToCamelCase","snakeCaseObject","camelCaseObject","camelCaseArray","forEach","key","isPlainObject","push","camelCase","Login","_useState","useState","_useState2","_slicedToArray","setError","useSelector","dispatch","useDispatch","navigate","useNavigate","useEffect","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","ev","idToken","res","errorMsg","errorData","preventDefault","signIn","signInUserSession","jwtToken","setItem","fetch","ok","json","status","t1","_x","Fragment","_ev$target","target","changeLoginForm","SignupForm","register","onFileChange","isSignupComplete","code","setCode","handleConfirmCode","handleResendCode","form","scrollIntoView","block","e","onClick","ref","le","htmlFor","id","href","minLength","passwordConfirm","checked","gender","accept","BackTab","title","Signup","_useState3","_useState4","_useState5","_useState6","setIsSignupComplete","passwordReg","file","presignedRes","_presignedRes$data","uploadURL","includes","test","post","fileName","fileType","signUp","username","attributes","profileImage","alert","_callee2","_context2","confirmSignUp","selectedFile","files","_callee3","_context3","resendSignUp","TabList","NavLink","activeClassName","FontAwesomeIcon","icon","faUserCircle","faUserFriends","faComment","List","partner","view","matchData","myMbti","myName","figure","match","src","alt","CountUp","start","end","duration","faArrowsAltH","Tab","onLikeClick","onUnLikeClick","faKissWinkHeart","faMeh","NextTab","onNextClick","faHandPointRight","Notice","_ref$notice","notice","Popup","onPopupClick","ListMembers","setView","setMatchData","viewPopup","setViewPopup","_useState7","_useState8","setnotice","_useSelector","users","hasUsersNotice","choiceCount","totalUserCount","totalChoiceCount","partners","total_user_count","setUsers","compatibility","likes_me","keys","find","_ref3","_ref4","_callee4","_context4","ChoiceTab","Profile","likeMe","faHeart","onLogoutClick","callProtectedAPI","View","EditForm","cols","rows","Edit","setFile","FormData","append","changeEditForm","renderList","index","_id","profile_image","messages","content","ChatList","hasChatsNotice","chatList","getchatList","Roading","onMessageChange","onKeyPress","randerChat","hasOwnProperty","speaker","sender","ChatView","setMessage","client","currentRoomChat","useParams","userId","setChat","joinRoom","receiveNewMessage","newMessage","createAt","Date","leaveRoom","handleSubmit","sendMessage","postNewMessage","InputPanel","currentTarget","NotFound","MainLoading","PrivateRoute","children","useLocation","isAuthenticated","Navigate","from","NotLoggedInRoute","App","isMainLoading","Routes","Route","path","element","replace","initialState","dob","dislikeUsers","mailConfirm","socket","io","transports","secure","on","err","emit","cb","removeListener","reducer","action","assign","_defineProperty","_toConsumableArray","store","createStore","matchApp","window","__REDUX_DEVTOOLS_EXTENSION__","loadUser","ReactDOM","render","Provider","Router","document","getElementById"],"mappings":"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","file":"static/js/main.26d5852e.chunk.js","sourcesContent":["export const CHANGE_LOGIN_FORM = 'CHANGE_LOGIN_FORM';\nexport const SUCCESS_USER_AUTHENTICATION = 'SUCCESS_USER_AUTHENTICATION';\nexport const CONFIRMED_NOT_AUTHENTICATED = 'CONFIRMED_NOT_AUTHENTICATED';\nexport const SUCCESS_REGISTER_MEMBER = 'SUCCESS_REGISTER_MEMBER';\nexport const USER_LOGOUT = 'USER_LOGOUT';\n\nexport const CHANGE_REGISTER_FORM = 'CHANGE_REGISTER_FORM';\nexport const SUCCESS_USER_DATA_UPDATE = 'SUCCESS_USER_DATA_UPDATE';\n\nexport const GET_GEOLOCATION = 'GET_GEOLOCATION';\n\nexport const LOADING_USERS = 'LOADING_USERS';\nexport const LOAD_USERS_SUCCESS = 'LOAD_USERS_SUCCESS';\nexport const INCREASE_CHOICE_COUNT = 'INCREASE_CHOICE_COUNT';\nexport const RESET_CHOICE_COUNT = 'RESET_CHOICE_COUNT';\nexport const INCREASE_PAGE_INDEX = 'INCREASE_PAGE_INDEX';\nexport const SELECTED_ALL_MEMBERS = 'SELECTED_ALL_MEMBERS';\nexport const ADD_NEW_USERS_LIST = 'ADD_NEW_USERS_LIST';\nexport const LEAVE_MEMBERS_LIST = 'LEAVE_MEMBERS_LIST';\n\nexport const LOAD_CHATS_LIST_SUCCESS = 'LOAD_CHATS_LIST_SUCCESS';\nexport const ENTER_CHAT_ROOM = 'ENTER_CHAT_ROOM';\nexport const ADD_NEW_MESSAGE = 'ADD_NEW_MESSAGE';\nexport const LEAVE_ROOM = 'LEAVE_ROOM';\nexport const CHANGE_EDIT_FORM = 'CHANGE_EDIT_FORM';\nexport const NONE_CHATS = 'NONE_CHATS';\n","const awsconfig = {\r\n  Auth: {\r\n    region: 'ap-northeast-2',\r\n    userPoolId: 'ap-northeast-2_he0NwXfAK',\r\n    userPoolWebClientId: 'r8ro24j5m9ggjdlq3rvkunsfn',\r\n    mandatorySignIn: false,\r\n    authenticationFlowType: 'USER_PASSWORD_AUTH',\r\n  },\r\n};\r\n\r\nexport default awsconfig;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './login.scss';\nimport { Auth } from 'aws-amplify';\nimport awsconfig from '../../aws-config';\nimport { Amplify } from 'aws-amplify';\n\nAmplify.configure(awsconfig);\n\nconst LoginForm = ({ onSubmit, onChange, login, error }) => {\n  let renderErrors = '';\n  if (Array.isArray(error)) {\n    renderErrors = error.map(error => <p className=\"error\">{error}</p>);\n  } else {\n    renderErrors = <p className=\"error\">{error}</p>;\n  }\n  return (\n    <div className=\"loginForm form\">\n      <div className=\"errors\">{renderErrors}</div>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"email\"\n          maxLength=\"80\"\n          value={login ? login.email : ''}\n          onChange={onChange}\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"password\"\n          value={login ? login.password : ''}\n          onChange={onChange}\n          required\n        />\n        <button type=\"submit\">Login</button>\n      </form>\n      <Link to=\"/signup\" className=\"button\">\n        Sign up\n      </Link>\n    </div>\n  );\n};\n\nconst handleLogin = async (login) => {\n  try {\n    const user = await Auth.signIn(login.email, login.password);\n    const jwt = user.signInUserSession.idToken.jwtToken;\n    localStorage.setItem('jwt', jwt);\n    alert('로그인 성공!');\n  } catch (error) {\n    console.error('로그인 실패:', error);\n  }\n};\nexport default LoginForm;\n","let ROOT, SOCKET_ROOT;\n\nif (process.env.NODE_ENV === 'development') {\n  ROOT = 'http://localhost:8081';\n  SOCKET_ROOT = 'http://localhost:8081';\n} else {\n  ROOT = 'https://jxsbyfmks7.execute-api.ap-northeast-2.amazonaws.com/prod';\n  SOCKET_ROOT = 'http://43.203.217.7:8080';\n}\n\nexport const config = Object.freeze({\n  ROOT, //: process.env.REACT_APP_ROOT,\n  SOCKET_ROOT //: process.env.REACT_APP_SOCKET_ROOT\n});\n\n","import React from 'react';\nimport './Logo.scss';\n\nconst Logo = () => (\n  <div className=\"logo-wrap\">\n    <div className=\"logo-area\">\n      <h1 className=\"logo\" data-heading=\"MATCH ♡ MINDS\">\n      MATCH ♡ MINDS\n      </h1>\n    </div>\n  </div>\n);\n\nexport default Logo;\n","import {\n  CHANGE_REGISTER_FORM,\n  CHANGE_LOGIN_FORM,\n  GET_GEOLOCATION,\n  SUCCESS_USER_AUTHENTICATION,\n  LOAD_USERS_SUCCESS,\n  INCREASE_CHOICE_COUNT,\n  RESET_CHOICE_COUNT,\n  INCREASE_PAGE_INDEX,\n  LOAD_CHATS_LIST_SUCCESS,\n  ENTER_CHAT_ROOM,\n  ADD_NEW_MESSAGE,\n  LEAVE_ROOM,\n  CHANGE_EDIT_FORM,\n  CONFIRMED_NOT_AUTHENTICATED,\n  USER_LOGOUT,\n  SUCCESS_USER_DATA_UPDATE,\n  SUCCESS_REGISTER_MEMBER,\n  SELECTED_ALL_MEMBERS,\n  NONE_CHATS,\n  ADD_NEW_USERS_LIST,\n  LEAVE_MEMBERS_LIST\n} from '../contants/actionTypes';\n// import { useEffect } from 'react';\n// import { useSelector } from 'react-redux';\n// import { useNavigate } from 'react-router-dom';\n\nexport const CHECK_USER_NOT_LOGIN = 'CHECK_USER_NOT_LOGIN';\n\nexport const changeRegisterForm = ({ name, value }) => ({\n  type: CHANGE_REGISTER_FORM,\n  name,\n  value\n});\n\nexport const changeLoginForm = ({ name, value }) => ({\n  type: CHANGE_LOGIN_FORM,\n  name,\n  value\n});\n\nexport const checkUserNotLogin = () => ({\n  type: CHECK_USER_NOT_LOGIN\n});\n\n// export const registerMember = ({ user, isAuthenticated }) => {\n//   return {\n//     type: SUCCESS_REGISTER_MEMBER,\n//     user,\n//     edit: {\n//       mbti: user?.mbti?.type || '',\n//       name: user?.name || '',\n//       description: user?.description || ''\n//     },\n//     isAuthenticated\n//   };\n// };\n\nexport const registerMember = (user) => {\n  let mbti = '';\n  let name = '';\n  let description = '';\n\n  if (user && user.mbti && user.mbti.type) {\n    mbti = user.mbti.type;\n  }\n\n  if (user && user.name) {\n    name = user.name;\n  }\n\n  if (user && user.description) {\n    description = user.description;\n  }\n\n  return {\n    type: SUCCESS_REGISTER_MEMBER,\n    user,\n    edit: {\n      mbti,\n      name,\n      description\n    }\n  };\n};\n\nexport const logoutUser = () => ({\n  type: USER_LOGOUT\n});\n\nexport const changeEditForm = ({ name, value }) => ({\n  type: CHANGE_EDIT_FORM,\n  name,\n  value\n});\n\nexport const getGeolocation = (state, location) => ({\n  type: GET_GEOLOCATION,\n  state,\n  location\n});\n\nexport const successUserAuthentication = user => ({\n  type: SUCCESS_USER_AUTHENTICATION,\n  user,\n  edit: {\n    mbti: user.mbti.type,\n    name: user.name,\n    description: user.description\n  }\n});\n\nexport const changeUserData = user => ({\n  type: SUCCESS_USER_DATA_UPDATE,\n  user\n});\n\nexport const loadUsersSuccess = data => ({\n  type: LOAD_USERS_SUCCESS,\n  users: data.users,\n  totalUserCount: data.totalUserCount\n});\n\nexport const increaseChoiceCount = () => ({\n  type: INCREASE_CHOICE_COUNT\n});\n\nexport const resetChoiceCount = () => ({\n  type: RESET_CHOICE_COUNT\n});\n\nexport const increasePageIndex = () => ({\n  type: INCREASE_PAGE_INDEX\n});\n\nexport const noticeSelectedAll = () => ({\n  type: SELECTED_ALL_MEMBERS\n});\n\nexport const loadChatsListSuccess = chats => ({\n  type: LOAD_CHATS_LIST_SUCCESS,\n  chats\n});\n\nexport const addNewMessage = newMessage => ({\n  type: ADD_NEW_MESSAGE,\n  newMessage\n});\n\nexport const enterChatRoom = chat => ({\n  type: ENTER_CHAT_ROOM,\n  chat\n});\n\nexport const leaveRoom = () => ({\n  type: LEAVE_ROOM\n});\n\nexport const noticeNoneChats = () => ({\n  type: NONE_CHATS\n});\n\nexport const addNewUsers = data => ({\n  type: ADD_NEW_USERS_LIST,\n  users: data.users\n});\n\nexport const leaveMemberList = () => ({\n  type: LEAVE_MEMBERS_LIST\n});\n\n\n// export const LoginRedirect = () => {\n//   const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (!isAuthenticated) {\n//       navigate('/login');\n//     }\n//   }, [isAuthenticated]);\n\n//   return null;\n// };\n","import axios from 'axios';\nimport { config } from '../config';\n\naxios.defaults.withCredentials = true;\nconst { ROOT } = config;\n\nexport const postSignup = (formData, registerData) => {\n  return axios\n    .post(`${ROOT}/api/signup`, {\n      ...registerData\n    })\n    .then(response => {\n      return axios\n        .post(`${ROOT}/api/upload`, formData)\n        .then(result => {\n          return {\n            data: result.data,\n            error: ''\n          };\n        })\n        .catch(error => {\n          return {\n            error: error.response.data.message || 'server error'\n          };\n        });\n    })\n    .catch(error => {\n      let message = 'server error';\n      if (\n        error &&\n        error.response &&\n        error.response.data &&\n        error.response.data.message\n      ) {\n        message = error.response.data.message;\n      }\n    \n      return { error: message };\n    });\n};\n\nexport const getUser = async () => {\n  try {\n    const token = localStorage.getItem('jwt');\n    const response = await axios.get(`${config.ROOT}/auth/user`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    let message = 'server error';\n    if (\n      error &&\n      error.response &&\n      error.response.data &&\n      error.response.data.message\n    ) {\n      message = error.response.data.message;\n    }\n    return { error: message };\n  }\n};\n//   return axios\n//     .get(`${ROOT}/auth/user`)\n//     .then(response => response.data)\n//     // .catch(error => {\n//     //   return {\n//     //     error: error.response.data.message || 'server error'\n//     //   };\n//     // });\n//     .catch(error => {\n//       let message = 'server error';\n//       if (\n//         error &&\n//         error.response &&\n//         error.response.data &&\n//         error.response.data.message\n//       ) {\n//         message = error.response.data.message;\n//       }\n    \n//       return { error: message };\n//     });\n    \n// };\n\nexport const postLogin = data => {\n  return axios({\n    url: `${ROOT}/api/login`,\n    method: 'POST',\n    data\n  })\n    .then(response => {\n      return {\n        data: response.data,\n        error: ''\n      };\n    })\n    .catch(error => {\n      return {\n        error: error.response.data.message || 'server error'\n      };\n    });\n};\n\nexport const getLogout = () => {\n  return axios({\n    url: `${ROOT}/api/logout`,\n    method: 'GET'\n  }).catch(error => {\n    console.log(error);\n  });\n};\n\nexport const getUsers = ({ limit, pageIndex }) => {\n  return axios({\n    url: `${ROOT}/api/users?limit=${limit}&pageIndex=${pageIndex}`,\n    method: 'GET'\n  })\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const addLikeUser = partnerId => {\n  return axios({\n    url: `${ROOT}/api/users/likes/${partnerId}`,\n    method: 'PUT'\n  })\n    .then(response => {\n      console.log(response);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const getLikeMe = () => {\n  return axios({\n    url: `${ROOT}/api/user/likes`,\n    method: 'GET'\n  })\n    .then(response => {\n      return response.data.likes_me;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const postChat = partnerId => {\n  return axios({\n    url: `${ROOT}/api/chats/${partnerId}`,\n    method: 'POST'\n  })\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const getChats = () => {\n  return axios({\n    url: `${ROOT}/api/chats`,\n    method: 'GET'\n  })\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const getChat = roomId => {\n  return axios({\n    url: `${ROOT}/api/chats/${roomId}`,\n    method: 'GET'\n  })\n    .then(response => {\n      return response.data.chat;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const postNewMessage = (roomId, data) => {\n  return axios({\n    url: `${ROOT}/api/chats/${roomId}`,\n    method: 'PUT',\n    data\n  })\n    .then(response => {\n      console.log(response.data);\n      return response.data;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const putUserInfo = (userData, formData = null) => {\n  return axios\n    .put(`${ROOT}/api/user`, {\n      ...userData\n    })\n    .then(response => {\n      if (formData) {\n        return axios\n          .put('/api/upload', formData)\n          .then(result => {\n            return result.data.user;\n          })\n          .catch(error => {\n            return {\n              error: error.response.data.message || 'server error'\n            };\n          });\n      } else {\n        return response.data.user;\n      }\n    })\n    .catch(error => {\n      return {\n        error: error.response.data.message || 'server error'\n      };\n    });\n};\n\nexport const uploadImageToS3 = async (file) => {\n  const fileName = file.name;\n  const fileType = file.type;\n\n  // 1단계: Presigned URL 요청\n  const { data } = await axios.post(`${config.ROOT}/api/upload`, {\n    fileName,\n    fileType\n  });\n\n  // 2단계: S3에 직접 업로드\n  const result = await axios.put(data.uploadURL, file, {\n    headers: {\n      'Content-Type': fileType\n    }\n  });\n\n  // 업로드된 파일 key 반환\n  return data.key;\n};","import { isPlainObject, forEach, isArray, camelCase } from 'lodash';\n\nexport function objectKeysToCamelCase(snakeCaseObject = null) {\n  if (!snakeCaseObject) return {};\n  const camelCaseObject = {};\n  const camelCaseArray = [];\n\n  forEach(snakeCaseObject, function(value, key) {\n    if (isPlainObject(value) || isArray(value)) {\n      value = objectKeysToCamelCase(value);\n    }\n    if (isArray(snakeCaseObject)) {\n      camelCaseArray.push(value);\n    } else {\n      camelCaseObject[camelCase(key)] = value;\n    }\n  });\n\n  if (isArray(snakeCaseObject)) return camelCaseArray;\n  return camelCaseObject;\n}\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n// import { withRouter } from 'react-router-dom';\nimport LoginForm from '../components/Login/LoginForm';\nimport Logo from '../components/Logo/Logo';\nimport {\n  changeLoginForm,\n  getGeolocation,\n  successUserAuthentication\n} from '../actions';\nimport { postLogin } from '../api';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\nimport { Auth } from 'aws-amplify';\nimport awsconfig from '../aws-config';\nimport { Amplify } from 'aws-amplify';\n\nAmplify.configure(awsconfig);\n\nconst API_URL = 'https://jxsbyfmks7.execute-api.ap-northeast-2.amazonaws.com/prod';\n\nconst Login = () => {\n  const [error, setError] = useState('');\n  const login = useSelector(state => state.login);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleLoginSuccess = () => {\n    navigate('/profile'); // ✅ v6 방식\n  };\n\n  useEffect(() => {\n    const getPosition = () => {\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      });\n      // <button onClick={handleLoginSuccess}>로그인</button>);\n    };\n\n    getPosition()\n      .then(position => {\n        console.log(position.coords);\n        dispatch(\n          getGeolocation('login', {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          })\n        );\n      })\n      .catch(() => {\n        setError('현재 위치를 받아올 수 없습니다.');\n      });\n  }, [dispatch]);\n\n  const onChange = ev => {\n    const { value, name } = ev.target;\n    dispatch(\n      changeLoginForm({\n        name,\n        value\n      })\n    );\n  };\n\n  const onSubmit = async ev => {\n    ev.preventDefault();\n    try {\n      // ✅ Cognito 로그인\n      const user = await Auth.signIn(login.email, login.password);\n      const idToken = user.signInUserSession.idToken.jwtToken;\n  \n      // ✅ JWT 저장\n      localStorage.setItem('jwt', idToken);\n  \n      // ✅ 백엔드에서 유저 정보 요청 (API Gateway + Lambda)\n      const token = localStorage.getItem('jwt');\n      if (!token) {\n        setError('로그인 세션이 유효하지 않습니다. 다시 로그인 해주세요.');\n        return;\n      }\n      \n      const res = await fetch(`${API_URL}/auth/user`, {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n  \n      if (res.ok) {\n        const data = await res.json();\n        console.log('✅ 유저 정보:', data);\n      \n        if (data && data.user) {\n          dispatch(successUserAuthentication(objectKeysToCamelCase(data.user)));\n          navigate('/profile');\n        } else {\n          setError('유저 정보를 불러오지 못했습니다.');\n        }\n      } else {\n        // 서버 에러일 때 안전하게 처리\n        console.error(`❌ 서버 오류 [${res.status}]`);\n        let errorMsg = '서버 오류가 발생했습니다.';\n        try {\n          const errorData = await res.json();\n          errorMsg = errorData.message || errorMsg;\n        } catch (parseErr) {\n          console.error('에러 메시지 파싱 실패:', parseErr);\n        }\n        setError(errorMsg);\n      }\n    } catch (err) {\n      console.error('API 호출 실패:', err);\n      if (err.name === 'UserNotConfirmedException') {\n        setError('이메일 인증이 필요합니다.');\n      } else if (err.name === 'NotAuthorizedException') {\n        setError('아이디 또는 비밀번호가 잘못되었습니다.');\n      } else {\n        setError('로그인 중 오류가 발생했습니다.');\n      }\n    }};\n\n  return (\n    <>\n      <Logo />\n      <LoginForm\n        onChange={onChange}\n        onSubmit={onSubmit}\n        error={error}\n        login={login}\n      />\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useEffect } from 'react';\nimport './SignupForm.scss';\n\nconst SignupForm = ({ onSubmit, onChange, register, error, onFileChange, isSignupComplete, code, setCode, handleConfirmCode, handleResendCode}) => {\n  let form = null;\n\n  useEffect(() => {\n    if (form) {\n      form.scrollIntoView({ block: 'start' });\n    }\n  }, [error]);\n\n  return (\n    <div className=\"signupForm form\">\n      {!isSignupComplete ? (\n      <form onSubmit={onSubmit}\n      ref={le => (form = le)}>\n        <p className=\"error\">{error}</p>\n        <label htmlFor=\"mbit\" required>\n          MBTI\n        </label>\n        <select\n          name=\"mbti\"\n          id=\"mbti\"\n          required\n          value={register.mbti}\n          onChange={onChange}\n        >\n          <option value=\"\">mbti를 선택해 주세요.</option>\n          <option value=\"intj\">INTJ 용의주도한 전략가</option>\n          <option value=\"intp\">INTP 논리적인 사색가</option>\n          <option value=\"entj\">ENTJ 대담한 통솔자</option>\n          <option value=\"entp\">ENTP 뜨거운 논쟁을 즐기는 변론가</option>\n          <option value=\"infj\">INFJ 선의의 옹호자</option>\n          <option value=\"infp\">INFP 열정적인 중재자</option>\n          <option value=\"enfj\">ENFJ 정의로운 사회운동가</option>\n          <option value=\"enfp\">ENFP 재기발랄한 활동가</option>\n          <option value=\"istj\">ISTJ 청렴결백한 논리주의자</option>\n          <option value=\"isfj\">ISFJ 용감한 수호자</option>\n          <option value=\"estj\">ESTJ 엄격한 관리자</option>\n          <option value=\"esfj\">ESFJ 사교적인 외교관</option>\n          <option value=\"istp\">ISTP 만능 재주꾼</option>\n          <option value=\"isfp\">ISFP 호기심 많은 예술가</option>\n          <option value=\"estp\">ESTP 모험을 즐기는 사업가</option>\n          <option value=\"esfp\">ESFP 자유로운 영혼의 연예인</option>\n        </select>\n        <p>\n          mbti를 모르신다면\n          <a href=\"https://www.16personalities.com/ko/%EB%AC%B4%EB%A3%8C-%EC%84%B1%EA%B2%A9-%EC%9C%A0%ED%98%95-%EA%B2%80%EC%82%AC\">\n            mbti 사이트\n          </a>\n          에서 검사를 부탁드립니다.\n        </p>\n        <label htmlFor=\"email\">email</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          required\n          value={register.email}\n          onChange={onChange}\n          maxLength=\"100\"\n        />\n        <label htmlFor=\"password\">password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          required\n          value={register.password || ''}\n          onChange={onChange}\n          maxLength=\"18\"\n          minLength=\"6\"\n        />\n        <label htmlFor=\"passwordConfirm\">password confirm</label>\n        <input\n          type=\"password\"\n          name=\"passwordConfirm\"\n          required\n          value={register.passwordConfirm || ''}\n          onChange={onChange}\n          maxLength=\"18\"\n          minLength=\"6\"\n        />\n        <label htmlFor=\"name\">name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          required\n          value={register.name || ''}\n          onChange={onChange}\n          maxLength=\"13\"\n        />\n        <p className=\"title\">성별</p>\n        <div className=\"gender-area\">\n          <input\n            type=\"radio\"\n            name=\"gender\"\n            value=\"female\"\n            id=\"female\"\n            checked={register.gender === 'female'}\n            onChange={onChange}\n            required\n          />\n          <label htmlFor=\"female\">여성</label>\n          <input\n            type=\"radio\"\n            name=\"gender\"\n            value=\"male\"\n            id=\"male\"\n            checked={register.gender === 'male'}\n            onChange={onChange}\n          />\n          <label htmlFor=\"male\">남성</label>\n        </div>\n        <label htmlFor=\"file\">프로필 사진</label>\n        <input\n          type=\"file\"\n          name=\"file\"\n          id=\"file\"\n          onChange={onFileChange}\n          accept=\"image/x-png,image/gif,image/jpeg\"\n          required\n        />\n        <label htmlFor=\"description\">자기소개</label>\n        <textarea\n          type=\"text\"\n          name=\"description\"\n          maxLength=\"60\"\n          value={register.description}\n          onChange={onChange}\n        />\n        <button>Sign up</button>\n      </form>\n      ) : (\n        // ✅ 인증 코드 입력 UI\n        <div className=\"verify-section\">\n          <h3>이메일 인증</h3>\n          <p>이메일로 전송된 인증 코드를 입력하세요.</p>\n          <input\n            type=\"text\"\n            value={code}\n            onChange={(e) => setCode(e.target.value)}\n            placeholder=\"인증 코드 입력\"\n          />\n          <button onClick={handleConfirmCode}>인증 확인</button>\n          <button onClick={handleResendCode}>인증 코드 재전송</button>\n          {error && <p className=\"error\">{error}</p>}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SignupForm;\n","// import React from 'react';\n// // import { withRouter } from 'react-router-dom';\n// import { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import './BackTab.scss';\n\n// const BackTab = ({ history, title }) => {\n//   const onBackClick = () => history.goBack();\n\n//   return (\n//     <div className=\"back-tab\">\n//       <button onClick={onBackClick}>\n//         <FontAwesomeIcon icon={faArrowLeft} />\n//       </button>\n//       <span className=\"title\">{title}</span>\n//     </div>\n//   );\n// };\n\n// export default BackTab;\n\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './BackTab.scss';\n\nconst BackTab = ({ title }) => {\n  const navigate = useNavigate();\n\n  const onBackClick = () => {\n    navigate(-1); // -1 = go back\n  };\n\n  return (\n    <div className=\"back-tab\" onClick={onBackClick}>\n      ← {title}\n    </div>\n  );\n};\n\nexport default BackTab;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SignupForm from '../components/Signup/SignupForm';\nimport BackTab from '../components/BackTab/BackTab';\nimport { changeRegisterForm, getGeolocation } from '../actions';\nimport axios from 'axios';\nimport { Auth, Amplify } from 'aws-amplify';\nimport awsconfig from '../aws-config';\n\nAmplify.configure(awsconfig);\n\nconst ROOT = 'https://jxsbyfmks7.execute-api.ap-northeast-2.amazonaws.com/prod';\n\nconst Signup = () => {\n  const [error, setError] = useState('');\n  const [code, setCode] = useState('');\n  const [isSignupComplete, setIsSignupComplete] = useState(false);\n  const register = useSelector(state => state.register);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      position => {\n        dispatch(getGeolocation('register', {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        }));\n      },\n      () => setError('현재 위치를 받아올 수 없습니다.')\n    );\n  }, [dispatch]);\n\n  const onChange = ev => {\n    const { value, name } = ev.target;\n    dispatch(changeRegisterForm({ name, value }));\n  };\n\n  const onFileChange = ev => {\n    const selectedFile = ev.target.files[0];\n    dispatch(changeRegisterForm({ name: 'file', value: selectedFile }));\n  };\n\n  const onSubmit = async ev => {\n    ev.preventDefault();\n    const passwordReg = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,18}$/;\n    const { email, password, passwordConfirm, name, mbti, gender, file } = register;\n\n    if ([email, password, passwordConfirm, name, mbti, gender].includes('')) {\n      setError('모두 입력하세요.');\n      return;\n    }\n\n    if (!passwordReg.test(password)) {\n      setError('비밀번호는 숫자와 영문 포함 6자 이상 18자 이하로 입력해주세요.');\n      return;\n    }\n\n    if (password !== passwordConfirm) {\n      setError('비밀번호가 일치하지 않습니다.');\n      return;\n    }\n\n    try {\n      const presignedRes = await axios.post(`${ROOT}/api/upload`, {\n        fileName: file.name,\n        fileType: file.type\n      }, { headers: { 'Content-Type': 'application/json' } });\n\n      const { uploadURL, key } = presignedRes.data;\n      await axios.put(uploadURL, file, { headers: { 'Content-Type': file.type } });\n\n      await Auth.signUp({ username: email, password, attributes: { email } });\n\n      await axios.post(`${ROOT}/api/signup`, { email, password, name, mbti, gender, profileImage: key });\n\n      alert('가입 성공! 이메일 인증 코드를 입력하세요.');\n      setIsSignupComplete(true);\n\n    } catch (error) {\n      console.error('회원가입 에러:', error);\n      setError('회원가입 중 오류 발생!');\n    }\n  };\n\n  const handleConfirmCode = async () => {\n    try {\n      await Auth.confirmSignUp(register.email, code);\n      alert('✅ 이메일 인증이 완료되었습니다!');\n      navigate('/login');\n    } catch (err) {\n      console.error('인증 실패:', err);\n      setError('❌ 인증번호가 잘못되었거나 만료되었습니다.');\n    }\n  };\n\n  return (\n    <>\n      <BackTab title={'Sign up'} />\n      <SignupForm\n        register={register}\n        onChange={onChange}\n        onFileChange={onFileChange}\n        onSubmit={onSubmit}\n        error={error}\n        isSignupComplete={isSignupComplete}\n        code={code}\n        setCode={setCode}\n        handleConfirmCode={handleConfirmCode}\n        handleResendCode={async () => {\n          try {\n            await Auth.resendSignUp(register.email);\n            alert('📧 인증번호가 다시 전송되었습니다.');\n          } catch (err) {\n            console.error('재전송 실패:', err);\n            setError('인증번호 재전송 중 오류 발생.');\n          }\n        }}\n      />\n    </>\n  );\n};\n\nexport default Signup;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {\n  faUserCircle,\n  faComment,\n  faUserFriends\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './TabList.scss';\n\nconst TabList = () => (\n  <nav className=\"tab-list\">\n    <ul>\n      <li>\n        <NavLink to=\"/profile\" activeClassName=\"selected\">\n          <FontAwesomeIcon icon={faUserCircle} />\n        </NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/users/list\" activeClassName=\"selected\">\n          <FontAwesomeIcon icon={faUserFriends} />\n        </NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/chats\" activeClassName=\"selected\">\n          <FontAwesomeIcon icon={faComment} />\n        </NavLink>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default TabList;\n","import React from 'react';\nimport { faArrowsAltH } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport CountUp from 'react-countup';\nimport './List.scss';\n\nconst List = ({ partner, view, matchData, myMbti, myName }) => {\n  const figure = matchData.match(/\\d+/)[0] * 25;\n\n  return (\n    <div className={`choice-list show-${view}`}>\n      {partner && (\n        <>\n          <div className=\"front card\">\n            <img\n              src={partner.profileImage}\n              className=\"profile-image\"\n              alt=\"profile\"\n            />\n            <div className=\"info\">\n              <p className=\"name\">{partner.name}</p>\n              <pre className=\"description\">{partner.description}</pre>\n            </div>\n          </div>\n          <div className={`back card ${matchData}`}>\n            <p className=\"title\">\n              내 MBTI와의\n              <br /> 적합성은?\n            </p>\n            <ul className=\"emoji-list\">\n              <li>\n                <div className=\"emoji emoji--haha\">\n                  <div className=\"emoji__face\">\n                    <div className=\"emoji__eyes\"></div>\n                    <div className=\"emoji__mouth\">\n                      <div className=\"emoji__tongue\"></div>\n                    </div>\n                  </div>\n                </div>\n              </li>\n              <li>\n                <div className=\"emoji emoji--yay\">\n                  <div className=\"emoji__face\">\n                    <div className=\"emoji__eyebrows\"></div>\n                    <div className=\"emoji__mouth\"></div>\n                  </div>\n                </div>\n              </li>\n              <li>\n                <div className=\"emoji emoji--wow\">\n                  <div className=\"emoji__face\">\n                    <div className=\"emoji__eyebrows\"></div>\n                    <div className=\"emoji__eyes\"></div>\n                    <div className=\"emoji__mouth\"></div>\n                  </div>\n                </div>\n              </li>\n              <li>\n                <div className=\"emoji emoji--sad\">\n                  <div className=\"emoji__face\">\n                    <div className=\"emoji__eyebrows\"></div>\n                    <div className=\"emoji__eyes\"></div>\n                    <div className=\"emoji__mouth\"></div>\n                  </div>\n                </div>\n              </li>\n              <li>\n                <div className=\"emoji emoji--angry\">\n                  <div className=\"emoji__face\">\n                    <div className=\"emoji__eyebrows\"></div>\n                    <div className=\"emoji__eyes\"></div>\n                    <div className=\"emoji__mouth\"></div>\n                  </div>\n                </div>\n              </li>\n            </ul>\n            <div className=\"figure\">\n              <CountUp start={0} end={figure} duration={3} />\n              <span>%</span>\n            </div>\n\n            <ul className=\"mbti-info\">\n              <li>\n                <p className=\"name\">{myName}</p>\n                <p className=\"mbti\">{myMbti}</p>\n              </li>\n              <li className=\"arrow\">\n                <FontAwesomeIcon icon={faArrowsAltH} />\n              </li>\n              <li>\n                <p className=\"name\">{partner.name}</p>\n                <p className=\"mbti\">{partner.mbti.type}</p>\n              </li>\n            </ul>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default List;\n","import React from 'react';\nimport { faKissWinkHeart, faMeh } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './ChoiceTab.scss';\n\nconst Tab = ({ onLikeClick, onUnLikeClick }) => {\n  return (\n    <div className=\"choice-tab\">\n      <ul>\n        <li>\n          <button onClick={onLikeClick}>\n            <FontAwesomeIcon icon={faKissWinkHeart} />\n            <span>Like</span>\n          </button>\n        </li>\n        <li>\n          <button onClick={onUnLikeClick}>\n            <FontAwesomeIcon icon={faMeh} />\n            <span>Pass</span>\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Tab;\n","import React from 'react';\nimport { faHandPointRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './NextTab.scss';\n\nconst NextTab = ({ onNextClick }) => (\n  <div className=\"next-tab\">\n    <button onClick={onNextClick}>\n      <span>next</span>\n      <FontAwesomeIcon icon={faHandPointRight} />\n    </button>\n  </div>\n);\n\nexport default NextTab;\n","import React from 'react';\nimport Logo from '../Logo/Logo';\n\nconst Notice = ({ notice = null }) => (\n  <div className=\"notice-content\">\n    <Logo />\n    <p>{notice}</p>\n  </div>\n);\n\nexport default Notice;\n","import React from 'react';\nimport './Popup.scss';\n\nconst Popup = ({ onPopupClick }) => (\n  <div className=\"popup\" onClick={onPopupClick}>\n    <p>\n      채팅방이\n      <br /> 생성되었습니다.\n    </p>\n    <button>확인</button>\n  </div>\n);\n\nexport default Popup;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Tab from '../components/Tab/TabList';\nimport List from '../components/ListMembers/List';\nimport ChoiceTab from '../components/ListMembers/ChoiceTab';\nimport NextTab from '../components/ListMembers/NextTab';\nimport Notice from '../components/Notice/Notice';\nimport Popup from '../components/Popup/Popup';\nimport { getUsers, getLikeMe, addLikeUser, postChat } from '../api';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\nimport {\n  loadUsersSuccess,\n  increaseChoiceCount,\n  resetChoiceCount,\n  increasePageIndex,\n  noticeSelectedAll,\n  addNewUsers,\n  leaveMemberList\n} from '../actions';\n\nconst ListMembers = () => {\n  const [view, setView] = useState('front');\n  const [matchData, setMatchData] = useState('level0');\n  const [viewPopup, setViewPopup] = useState(false);\n  const [notice, setnotice] = useState('유저 정보를 가져오고 있습니다.🙏');\n  const dispatch = useDispatch();\n  const {\n    users: partners,\n    user,\n    pageIndex,\n    hasUsersNotice,\n    choiceCount,\n    totalUserCount,\n    totalChoiceCount\n  } = useSelector(state => ({\n    users: state.users,\n    user: state.user,\n    pageIndex: state.pageIndex,\n    hasUsersNotice: state.hasUsersNotice,\n    choiceCount: state.choiceCount,\n    totalUserCount: state.totalUserCount,\n    totalChoiceCount: state.totalChoiceCount\n  }));\n\n  const LIMIT = 5;\n\n  useEffect(() => {\n    const setUsers = async () => {\n      const result = await getUsers({ limit: LIMIT, pageIndex: 0 });\n\n      if (!result.total_user_count) {\n        setnotice('모든 회원을 선택 하셨습니다~! 고생하셨습니다!👏');\n        dispatch(noticeSelectedAll());\n        return;\n      }\n\n      dispatch(loadUsersSuccess(objectKeysToCamelCase(result)));\n    };\n\n    setUsers();\n    return () => {\n      dispatch(leaveMemberList());\n    };\n  }, [dispatch]);\n\n  const onLikeClick = async () => {\n    const likeMeList = await getLikeMe();\n    if (likeMeList.includes(partners[choiceCount].id)) {\n      await postChat(partners[choiceCount].id);\n      setViewPopup(true);\n    } else {\n      addLikeUser(partners[choiceCount].id);\n    }\n\n    setView('back');\n    const compatibility = Object.keys(user.mbti).find(key => {\n      if (typeof user.mbti[key] === 'object') {\n        return user.mbti[key].includes(partners[choiceCount].mbti.type);\n      }\n    });\n\n    setMatchData(compatibility);\n  };\n\n  const onUnLikeClick = async () => {\n    await addLikeUser(partners[choiceCount].id);\n\n    onNextClick();\n  };\n\n  const onNextClick = async () => {\n    if (totalUserCount === totalChoiceCount + 1) {\n      setnotice('모든 회원을 선택 하셨습니다~! 고생하셨습니다!');\n      dispatch(noticeSelectedAll());\n      return;\n    }\n\n    // if (choiceCount === LIMIT - 1 || choiceCount + 2 === partners.length) {\n    //   let result = await getUsers({ limit: LIMIT, pageIndex: pageIndex + 1 });\n\n    //   if (!result.total_user_count || !partners.length) {\n    //     setnotice('모든 회원을 선택 하셨습니다~! 고생하셨습니다!');\n    //     dispatch(noticeSelectedAll());\n    //     return;\n    //   }\n\n    //   console.log('users' + result.length);\n    //   // result = await objectKeysToCamelCase(result);\n    //   dispatch(addNewUsers(result));\n    //   dispatch(resetChoiceCount());\n    //   dispatch(increasePageIndex());\n    //   setView('front');\n    //   setMatchData('level0');\n    //   return;\n    // }\n\n    dispatch(increaseChoiceCount());\n    setView('front');\n    setMatchData('level0');\n  };\n\n  const onPopupClick = () => {\n    setViewPopup(false);\n  };\n\n  return (\n    <div className=\"page-wrap\">\n      <Tab />\n      {hasUsersNotice ? (\n        <Notice notice={notice} />\n      ) : (\n        <>\n          <List\n            partner={partners[choiceCount]}\n            view={view}\n            matchData={matchData}\n            myMbti={user.mbti.type}\n            myName={user.name}\n          />\n          {(view === 'front' && (\n            <ChoiceTab\n              onLikeClick={onLikeClick}\n              onUnLikeClick={onUnLikeClick}\n            />\n          )) || <NextTab onNextClick={onNextClick} />}\n          {viewPopup && <Popup onPopupClick={onPopupClick} />}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ListMembers;\n","import React from 'react';\nimport './View.scss';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Profile = ({ user }) => {\n  const { profileImage, name, mbti, likeMe, description } = user;\n  return (\n    <div className=\"profile-area\">\n      <img src={profileImage} alt=\"profile\" className=\"profile-image\" />\n      <p>\n        <span className=\"name\">{name}</span>\n        <span className=\"mbti\">{mbti.type}</span>\n      </p>\n      <p className=\"likes\">\n        <FontAwesomeIcon icon={faHeart} />\n        <span className=\"num\">{likeMe.length}</span>\n      </p>\n      {description && <pre className=\"description\">{description}</pre>}\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Tab from '../components/Tab/TabList';\nimport View from '../components/Profile/View';\nimport { getLogout } from '../api';\nimport { logoutUser } from '../actions';\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const { user } = useSelector(state => ({\n    user: state.user\n  }));\n\n  const onLogoutClick = async () => {\n    getLogout().then(response => {\n      dispatch(logoutUser());\n    });\n  };\n\n  const callProtectedAPI = async () => {\n    const token = localStorage.getItem('jwt');\n    if (!token) return alert('로그인이 필요합니다.');\n  \n    try {\n      const res = await fetch('https://wfqynf004c.execute-api.ap-northeast-2.amazonaws.com/prod/user', {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n      const data = await res.json();\n      console.log('응답:', data);\n    } catch (err) {\n      console.error('API 호출 오류:', err);\n    }\n  };\n  \n  return (\n    <>\n      <Tab />\n      <div className=\"content\">\n        <View user={user} />\n        <Link to=\"/profile/edit\" className=\"link-button\">\n          수정하기\n        </Link>\n        <button href=\"#none\" onClick={onLogoutClick} className=\"link-button\">\n          로그아웃\n        </button>\n        <button onClick={callProtectedAPI}>내 정보 불러오기</button>\n      </div>\n    </>\n  );\n};\n\nexport default Profile;\n","import React, { useEffect } from 'react';\nimport './EditForm.scss';\n\nconst EditForm = ({ onSubmit, onChange, edit, error, onFileChange }) => {\n  let form = null;\n\n  useEffect(() => {\n    const scrollToTop = () => {\n      form.scrollIntoView({ block: 'start' });\n    };\n\n    scrollToTop();\n  }, [error, form]);\n\n  return (\n    <div className=\"edit-form form\">\n      <form onSubmit={onSubmit} ref={le => (form = le)}>\n        <p>{error}</p>\n        <select\n          name=\"mbti\"\n          id=\"mbti\"\n          required\n          value={edit.mbti}\n          onChange={onChange}\n        >\n          <option value=\"\">mbti를 선택해 주세요.</option>\n          <option value=\"intj\">INTJ 용의주도한 전략가</option>\n          <option value=\"intp\">INTP 논리적인 사색가</option>\n          <option value=\"entj\">ENTJ 대담한 통솔자</option>\n          <option value=\"entp\">ENTP 뜨거운 논쟁을 즐기는 변론가</option>\n          <option value=\"infj\">INFJ 선의의 옹호자</option>\n          <option value=\"infp\">INFP 열정적인 중재자</option>\n          <option value=\"enfj\">ENFJ 정의로운 사회운동가</option>\n          <option value=\"enfp\">ENFP 재기발랄한 활동가</option>\n          <option value=\"istj\">ISTJ 청렴결백한 논리주의자</option>\n          <option value=\"isfj\">ISFJ 용감한 수호자</option>\n          <option value=\"estj\">ESTJ 엄격한 관리자</option>\n          <option value=\"esfj\">ESFJ 사교적인 외교관</option>\n          <option value=\"istp\">ISTP 만능 재주꾼</option>\n          <option value=\"isfp\">ISFP 호기심 많은 예술가</option>\n          <option value=\"estp\">ESTP 모험을 즐기는 사업가</option>\n          <option value=\"esfp\">ESFP 자유로운 영혼의 연예인</option>\n        </select>\n        <label htmlFor=\"name\">name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          required\n          value={edit.name}\n          onChange={onChange}\n          maxLength=\"13\"\n        />\n        <label htmlFor=\"file\">프로필 사진</label>\n        <input\n          type=\"file\"\n          name=\"file\"\n          id=\"file\"\n          onChange={onFileChange}\n          accept=\"image/x-png,image/gif,image/jpeg\"\n        />\n        <p className=\"title\">회원님의 정보</p>\n        <textarea\n          name=\"description\"\n          className=\"description\"\n          cols=\"20\"\n          rows=\"3\"\n          maxLength=\"100\"\n          value={edit.description}\n          onChange={onChange}\n        ></textarea>\n        <button>수정하기</button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditForm;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// import { withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeEditForm, changeUserData } from '../actions';\nimport EditForm from '../components/Edit/EditForm';\nimport BackTab from '../components/BackTab/BackTab';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\nimport { putUserInfo } from '../api';\n\nconst Edit = () => {\n  const [error, setError] = useState('');\n  const [file, setFile] = useState(null);\n  const { edit, user } = useSelector(state => ({\n    edit: state.edit,\n    user: state.user\n  }));\n  const dispatch = useDispatch();\n\n  const onChange = ev => {\n    const { value, name } = ev.target;\n    dispatch(\n      changeEditForm({\n        name,\n        value\n      })\n    );\n  };\n\n  const onFileChange = ev => {\n    setFile(ev.target.files[0]);\n  };\n\n  const onSubmit = async ev => {\n    ev.preventDefault();\n\n    const { name, mbti } = edit;\n\n    if ([name, mbti].includes('')) {\n      setError('모두 입력하세요.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n    const userData = !file\n      ? await putUserInfo(edit)\n      : await putUserInfo(edit, formData);\n\n    dispatch(changeUserData(objectKeysToCamelCase(userData)));\n    // history.push('/profile');\n  };\n\n  return (\n    <>\n      <BackTab title={'Settings'} />\n      <EditForm\n        user={user}\n        edit={edit}\n        onChange={onChange}\n        onFileChange={onFileChange}\n        onSubmit={onSubmit}\n        error={error}\n      />\n    </>\n  );\n};\n\nexport default Edit;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './List.scss';\n\nconst List = ({ chats }) => {\n  const renderList = chats.map((chat, index) => (\n    <li key={index}>\n      <Link to={`/chat/room/${chat._id}`}>\n        <div className=\"left\">\n          <img src={chat.partner.profile_image} alt=\"profile\" />\n        </div>\n        <div className=\"right\">\n          <p className=\"name\">{chat.partner.name}</p>\n          {(chats[index].messages.length && (\n            <p className=\"message\">\n              {chats[index].messages[chats[index].messages.length - 1].content}\n            </p>\n          )) || <p className=\"message none\">먼저 인사해 보세요~!</p>}\n        </div>\n      </Link>\n    </li>\n  ));\n\n  return (\n    <div className=\"chat-list\">\n      <ul>{renderList}</ul>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Tab from '../components/Tab/TabList';\nimport List from '../components/ChatList/List';\nimport Roading from '../components/Notice/Notice';\nimport { loadChatsListSuccess } from '../actions';\nimport { getChats } from '../api/index';\n\nconst ChatList = () => {\n  const [notice, setnotice] = useState('채팅 정보를 가져오고 있습니다.🙏');\n  const { chats, hasChatsNotice } = useSelector(state => ({\n    chats: state.chats,\n    hasChatsNotice: state.hasChatsNotice\n  }));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const getchatList = async () => {\n      const chatList = await getChats();\n      if (!chatList.chats.length) {\n        setnotice('채팅 목록이 없습니다.😭');\n        return;\n      }\n      dispatch(loadChatsListSuccess(chatList.chats));\n    };\n\n    getchatList();\n  }, [dispatch]);\n\n  return (\n    <>\n      <Tab />\n      {hasChatsNotice ? <Roading notice={notice} /> : <List chats={chats} />}\n    </>\n  );\n};\n\nexport default ChatList;\n","import React from 'react';\nimport './InputPanel.scss';\n\nconst View = ({ onMessageChange, message, onSubmit, onKeyPress }) => {\n  return (\n    <div className=\"input-message\">\n      <input\n        type=\"text\"\n        className=\"input-text\"\n        onChange={onMessageChange}\n        value={message}\n        onKeyPress={onKeyPress}\n      />\n      <button onClick={onSubmit}>전송</button>\n    </div>\n  );\n};\n\nexport default View;\n","import React, { useEffect } from 'react';\nimport './View.scss';\n\nconst View = ({ chats, user }) => {\n  let chatList = null;\n  let randerChat = '';\n\n  useEffect(() => {\n    const scrollToBottom = () => {\n      chatList.scrollIntoView({ block: 'end' });\n    };\n\n    scrollToBottom();\n  }, [chats, chatList]);\n\n  if (chats.hasOwnProperty('messages')) {\n    randerChat = chats.messages.map((chat, index) => {\n      const position = chat.speaker !== user.id ? 'left' : 'right';\n      const sender = chat.speaker === user.id ? user : chats.partner;\n\n      return (\n        <li\n          key={index}\n          className={`${position} ${\n            sender === chats.partner ? 'partner' : 'me'\n          }`}\n        >\n          <img\n            src={sender.profileImage}\n            className=\"profile-image\"\n            alt=\"profile\"\n          />\n          {sender === chats.partner && <p className=\"name\">{sender.name}</p>}\n          <p className=\"talk\">{chat.content}</p>\n        </li>\n      );\n    });\n  }\n  return (\n    <div className=\"messages\">\n      <ul ref={le => (chatList = le)}>{randerChat}</ul>\n    </div>\n  );\n};\n\nexport default View;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport InputPanel from '../components/ChatView/InputPanel';\nimport View from '../components/ChatView/View';\nimport BackTab from '../components/BackTab/BackTab';\nimport { useParams } from 'react-router-dom';\nimport { getChat, postNewMessage } from '../api';\nimport { enterChatRoom, addNewMessage, leaveRoom } from '../actions';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\n\nconst ChatView = () => {\n  const [message, setMessage] = useState('');\n  const { client, user, currentRoomChat } = useSelector(state => ({\n    client: state.client,\n    user: state.user,\n    currentRoomChat: state.currentRoomChat\n  }));\n  const dispatch = useDispatch();\n  const { roomId } = useParams();\n  const userId = user.id;\n\n  useEffect(() => {\n    const setChat = async () => {\n      const chat = await getChat(roomId);\n      dispatch(enterChatRoom(objectKeysToCamelCase(chat)));\n    };\n\n    setChat();\n\n    client.joinRoom({ roomId, userId });\n\n    client.receiveNewMessage(data => {\n      dispatch(\n        addNewMessage({\n          createAt: new Date(),\n          content: data.message,\n          speaker: data.userId\n        })\n      );\n    });\n\n    return () => {\n      client.leaveRoom(roomId);\n      dispatch(leaveRoom());\n    };\n  }, []);\n\n  const onMessageChange = ev => {\n    const { value } = ev.currentTarget;\n    setMessage(value);\n  };\n\n  const handleSubmit = () => {\n    if (!message) return;\n    client.sendMessage({ roomId, userId, message });\n    postNewMessage(roomId, { message });\n    setMessage('');\n  };\n\n  const handleKeyPress = ev => {\n    if (ev.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  return (\n    <>\n      {currentRoomChat.hasOwnProperty('partner') && (\n        <BackTab title={currentRoomChat.partner.name || ''} />\n      )}\n      <View chats={currentRoomChat} user={user} />\n      <InputPanel\n        onMessageChange={onMessageChange}\n        message={message}\n        onKeyPress={handleKeyPress}\n        onSubmit={handleSubmit}\n        chat={currentRoomChat}\n      />\n    </>\n  );\n};\n\nexport default ChatView;\n","import React from 'react';\n\nconst NotFound = () => {\n  return <div>페이지를 찾지 못하였습니다.</div>;\n};\n\nexport default NotFound;\n","import React from 'react';\nimport Logo from '../components/Logo/Logo';\n\nconst MainLoading = () => (\n  <div className=\"main-loading\">\n    <Logo />\n  </div>\n);\n\nexport default MainLoading;\n","\n\nimport React from 'react';\nimport './App.scss';\nimport { useSelector } from 'react-redux';\nimport {\n  Routes,\n  Route,\n  Navigate,\n  useLocation\n} from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { CONFIRMED_NOT_AUTHENTICATED } from './contants/actionTypes';\n\nimport Login from './containers/Login';\nimport Signup from './containers/Signup';\nimport ListMembers from './containers/ListMembers';\nimport Profile from './containers/Profile';\nimport Edit from './containers/Edit';\nimport ChatList from './containers/ChatList';\nimport ChatView from './containers/ChatView';\nimport NotFound from './containers/NotFound';\nimport MainLoading from './containers/MainLoading';\n\n\n\n// ✅ 로그인 여부 판단용 커스텀 라우터\nconst PrivateRoute = ({ children }) => {\n  const location = useLocation();\n  const isAuthenticated = useSelector(state => state.isAuthenticated);\n  return isAuthenticated ? children : <Navigate to=\"/login\" state={{ from: location }} />;\n};\n\nconst NotLoggedInRoute = ({ children }) => {\n  const isAuthenticated = useSelector(state => state.isAuthenticated);\n  return !isAuthenticated ? children : <Navigate to=\"/profile\" />;\n};\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const { isMainLoading } = useSelector(state => ({\n    isMainLoading: state.isMainLoading\n  }));\n\n  useEffect(() => {\n    dispatch({ type: CONFIRMED_NOT_AUTHENTICATED });\n  }, []);\n\n  \n  return (\n    <div className=\"app\">\n      <div className=\"wrap\">\n        {isMainLoading ? (\n          <MainLoading />\n        ) : (\n            <Routes>\n              {/* 홈 리디렉션 */}\n              <Route path=\"/\" element={<Navigate to=\"/login\" replace />} />\n\n              {/* 로그인/회원가입 */}\n              <Route path=\"/login\" element={\n                <NotLoggedInRoute><Login /></NotLoggedInRoute>\n              } />\n              <Route path=\"/signup\" element={\n                <NotLoggedInRoute><Signup /></NotLoggedInRoute>\n              } />\n\n              {/* 인증 필요 라우트 */}\n              <Route path=\"/profile/edit\" element={\n                <PrivateRoute><Edit /></PrivateRoute>\n              } />\n              <Route path=\"/profile\" element={\n                <PrivateRoute><Profile /></PrivateRoute>\n              } />\n              <Route path=\"/users/list\" element={\n                <PrivateRoute><ListMembers /></PrivateRoute>\n              } />\n              <Route path=\"/chats\" element={\n                <PrivateRoute><ChatList /></PrivateRoute>\n              } />\n              <Route path=\"/chat/room/:roomId\" element={\n                <PrivateRoute><ChatView /></PrivateRoute>\n              } />\n\n\n\n              {/* 404 */}\n              <Route path=\"*\" element={<NotFound />} />\n            </Routes>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import {\n  CHANGE_LOGIN_FORM,\n  CHANGE_REGISTER_FORM,\n  GET_GEOLOCATION,\n  SUCCESS_USER_AUTHENTICATION,\n  LOAD_USERS_SUCCESS,\n  INCREASE_CHOICE_COUNT,\n  RESET_CHOICE_COUNT,\n  INCREASE_PAGE_INDEX,\n  LOAD_CHATS_LIST_SUCCESS,\n  ENTER_CHAT_ROOM,\n  ADD_NEW_MESSAGE,\n  LEAVE_ROOM,\n  CHANGE_EDIT_FORM,\n  CONFIRMED_NOT_AUTHENTICATED,\n  USER_LOGOUT,\n  SUCCESS_USER_DATA_UPDATE,\n  SUCCESS_REGISTER_MEMBER,\n  SELECTED_ALL_MEMBERS,\n  NONE_CHATS,\n  ADD_NEW_USERS_LIST,\n  LEAVE_MEMBERS_LIST\n} from '../contants/actionTypes';\nimport socket from '../lib/socket';\n\nconst initialState = {\n  register: {\n    email: '',\n    mbti: '',\n    password: '',\n    passwordConfirm: '',\n    name: '',\n    location: {\n      latitude: 0,\n      longitude: 0\n    },\n    gender: '',\n    description: ''\n  },\n  login: {\n    email: '',\n    password: '',\n    location: {\n      latitude: 0,\n      longitude: 0\n    }\n  },\n  user: {\n    id: '',\n    mbti: {},\n    name: '',\n    profileImage: '',\n    dob: '',\n    location: {\n      latitude: 0,\n      longitude: 0\n    },\n    gender: '',\n    description: '',\n    dislikeUsers: [],\n    likeMe: [],\n    chats: [],\n    mailConfirm: false\n  },\n  edit: {\n    mbti: '',\n    name: '',\n    description: ''\n  },\n  isAuthenticated: false,\n  users: [],\n  totalUserCount: 0,\n  totalChoiceCount: 0,\n  choiceCount: 0,\n  pageIndex: 0,\n  chats: [],\n  client: socket(),\n  currentRoomChat: {},\n  isMainLoading: true,\n  hasUsersNotice: true,\n  hasChatsNotice: true\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_REGISTER_FORM:\n      return Object.assign({}, state, {\n        register: Object.assign({}, state.register, {\n          [action.name]: action.value\n        })\n      });\n    case CHANGE_EDIT_FORM:\n      return Object.assign({}, state, {\n        edit: Object.assign({}, state.edit, {\n          [action.name]: action.value\n        })\n      });\n    case CHANGE_LOGIN_FORM:\n      return Object.assign({}, state, {\n        login: Object.assign({}, state.login, {\n          [action.name]: action.value\n        })\n      });\n    case CONFIRMED_NOT_AUTHENTICATED:\n      return Object.assign({}, state, {\n        isMainLoading: false\n      });\n    case GET_GEOLOCATION:\n      return Object.assign({}, state, {\n        [action.state]: Object.assign({}, state[action.state], {\n          location: action.location\n        })\n      });\n    case SUCCESS_USER_AUTHENTICATION:\n      return Object.assign({}, state, {\n        edit: action.edit,\n        user: action.user,\n        isAuthenticated: true,\n        isMainLoading: false,\n        login: initialState.login\n      });\n    case SUCCESS_REGISTER_MEMBER:\n      return Object.assign({}, state, {\n        edit: action.edit,\n        user: action.user,\n        register: initialState.register,\n        isAuthenticated: action.isAuthenticated\n      });\n    case SUCCESS_USER_DATA_UPDATE:\n      return Object.assign({}, state, {\n        user: action.user\n      });\n    case LOAD_USERS_SUCCESS:\n      return Object.assign({}, state, {\n        users: action.users,\n        totalUserCount: action.totalUserCount,\n        totalChoiceCount: 0,\n        hasUsersNotice: false\n      });\n    case ADD_NEW_USERS_LIST:\n      return Object.assign({}, state, {\n        users: action.users,\n        hasUsersNotice: false\n      });\n    case USER_LOGOUT:\n      return Object.assign({}, state, {\n        users: initialState.users,\n        isAuthenticated: false\n      });\n    case INCREASE_CHOICE_COUNT:\n      return Object.assign({}, state, {\n        totalChoiceCount: state.totalChoiceCount + 1,\n        choiceCount: state.choiceCount + 1\n      });\n    case RESET_CHOICE_COUNT:\n      return Object.assign({}, state, {\n        choiceCount: 0\n      });\n    case INCREASE_PAGE_INDEX:\n      return Object.assign({}, state, {\n        pageIndex: state.pageIndex + 1\n      });\n    case SELECTED_ALL_MEMBERS:\n      return Object.assign({}, state, {\n        hasUsersNotice: true\n      });\n    case LOAD_CHATS_LIST_SUCCESS:\n      return Object.assign({}, state, {\n        chats: action.chats,\n        hasChatsNotice: false\n      });\n    case ENTER_CHAT_ROOM:\n      return Object.assign({}, state, {\n        currentRoomChat: action.chat\n      });\n    case ADD_NEW_MESSAGE:\n      return Object.assign({}, state, {\n        currentRoomChat: Object.assign({}, state.currentRoomChat, {\n          messages: [...state.currentRoomChat.messages, action.newMessage]\n        })\n      });\n    case LEAVE_ROOM:\n      return Object.assign({}, state, {\n        currentRoomChat: {}\n      });\n    case NONE_CHATS:\n      return Object.assign({}, state, {\n        hasChatsNotice: true\n      });\n    case LEAVE_MEMBERS_LIST:\n      return Object.assign({}, state, {\n        users: [],\n        totalUserCount: 0,\n        totalChoiceCount: 0,\n        choiceCount: 0,\n        pageIndex: 0,\n        hasUsersNotice: true\n      });\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import io from 'socket.io-client';\nimport { MESSAGE, ERROR, JOIN, LEAVE } from '../../contants/socketEventTypes';\nimport { config } from '../../config';\n\nconst { SOCKET_ROOT } = config;\n\nexport default function() {\n  // const socket = io.connect(SOCKET_ROOT);\n  const socket = io('wss://datingapp.store', {\n    path: '/socket.io/',\n    transports: ['websocket'],\n    secure: true\n  });\n\n  socket.on(ERROR, function(err) {\n    console.log(err);\n  });\n\n  const receiveNewMessage = cb => {\n    socket.on(MESSAGE, cb);\n  };\n\n  const joinRoom = data => {\n    socket.emit(JOIN, data);\n  };\n\n  const sendMessage = data => {\n    socket.emit(MESSAGE, data);\n  };\n\n  const leaveRoom = roomId => {\n    socket.removeListener(MESSAGE);\n    socket.removeListener(ERROR);\n    socket.emit(LEAVE, roomId);\n  };\n\n  return {\n    joinRoom,\n    sendMessage,\n    receiveNewMessage,\n    leaveRoom\n  };\n}\n","export const MESSAGE = 'MESSAGE';\nexport const ERROR = 'ERROR';\nexport const JOIN = 'JOIN';\nexport const LEAVE = 'LEAVE';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport './index.scss';\nimport matchApp from './reducers';\nimport { successUserAuthentication, checkUserNotLogin } from './actions';\nimport { getUser } from './api';\nimport { objectKeysToCamelCase } from './utility/formattingData';\nimport { Amplify } from 'aws-amplify';\nimport awsconfig from './aws-config';\n\nAmplify.configure(awsconfig);\n\nconst store = createStore(\n  matchApp,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconst loadUser = async () => {\n  const result = await getUser();\n  if (!result || !result.isAuthenticated) {\n    store.dispatch(checkUserNotLogin());\n  } else {\n    store.dispatch(successUserAuthentication(objectKeysToCamelCase(result.user)));\n  }\n};\n\nloadUser();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}