{"version":3,"sources":["contants/actionTypes.js","aws-config.js","components/Login/LoginForm.js","config/index.js","components/Logo/Logo.js","actions/index.js","api/index.js","utility/formattingData.js","containers/Login.js","components/Signup/SignupForm.js","components/BackTab/BackTab.js","containers/Signup.js","components/Tab/TabList.js","components/ListMembers/List.js","components/ListMembers/ChoiceTab.js","components/ListMembers/NextTab.js","components/Notice/Notice.js","components/Popup/Popup.js","containers/ListMembers.js","components/Profile/View.js","containers/Profile.js","components/Edit/EditForm.js","containers/Edit.js","components/ChatList/List.js","containers/ChatList.js","components/ChatView/InputPanel.js","components/ChatView/View.js","containers/ChatView.js","containers/NotFound.js","containers/MainLoading.js","App.js","reducers/index.js","lib/socket/index.js","contants/socketEventTypes.js","index.js"],"names":["CHANGE_LOGIN_FORM","SUCCESS_USER_AUTHENTICATION","CONFIRMED_NOT_AUTHENTICATED","SUCCESS_REGISTER_MEMBER","USER_LOGOUT","CHANGE_REGISTER_FORM","SUCCESS_USER_DATA_UPDATE","GET_GEOLOCATION","LOAD_USERS_SUCCESS","INCREASE_CHOICE_COUNT","RESET_CHOICE_COUNT","INCREASE_PAGE_INDEX","SELECTED_ALL_MEMBERS","ADD_NEW_USERS_LIST","LEAVE_MEMBERS_LIST","LOAD_CHATS_LIST_SUCCESS","ENTER_CHAT_ROOM","ADD_NEW_MESSAGE","LEAVE_ROOM","CHANGE_EDIT_FORM","NONE_CHATS","awsconfig","Auth","region","userPoolId","userPoolWebClientId","mandatorySignIn","authenticationFlowType","Amplify","configure","ROOT","SOCKET_ROOT","LoginForm","_ref","onSubmit","onChange","login","error","renderErrors","Array","isArray","map","React","createElement","className","type","name","placeholder","maxLength","value","email","required","password","Link","to","Logo","data-heading","changeRegisterForm","registerMember","user","mbti","description","edit","getGeolocation","state","location","successUserAuthentication","changeUserData","noticeSelectedAll","loadChatsListSuccess","chats","enterChatRoom","chat","config","Object","freeze","axios","defaults","withCredentials","postSignup","formData","registerData","post","concat","_objectSpread","then","response","result","data","catch","message","getUser","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","wrap","_context","prev","next","localStorage","getItem","get","headers","Authorization","sent","abrupt","t0","stop","apply","arguments","getUsers","_ref2","limit","pageIndex","url","method","console","log","addLikeUser","partnerId","getChat","roomId","putUserInfo","userData","length","undefined","put","objectKeysToCamelCase","snakeCaseObject","camelCaseObject","camelCaseArray","forEach","key","isPlainObject","push","camelCase","Login","_useState","useState","_useState2","_slicedToArray","setError","useSelector","dispatch","useDispatch","navigate","useNavigate","useEffect","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","ev","idToken","res","errorMsg","errorData","preventDefault","signIn","signInUserSession","jwtToken","setItem","fetch","ok","json","status","t1","_x","Fragment","_ev$target","target","changeLoginForm","handleSignUp","_ref3","_callee2","register","file","presignedRes","_presignedRes$data","uploadURL","_context2","alert","fileName","fileType","signUp","username","attributes","profileImage","_x2","SignupForm","onFileChange","isSignupComplete","code","setCode","handleConfirmCode","handleResendCode","form","scrollIntoView","block","handleSubmit","e","onClick","ref","le","htmlFor","id","href","minLength","passwordConfirm","checked","gender","accept","BackTab","title","Signup","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","setIsSignupComplete","passwordReg","includes","test","FormData","append","confirmSignUp","selectedFile","files","_callee3","_context3","resendSignUp","style","padding","TabList","NavLink","activeClassName","FontAwesomeIcon","icon","faUserCircle","faUserFriends","faComment","List","partner","view","matchData","myMbti","myName","figure","match","src","alt","CountUp","start","end","duration","faArrowsAltH","Tab","onLikeClick","onUnLikeClick","faKissWinkHeart","faMeh","NextTab","onNextClick","faHandPointRight","Notice","_ref$notice","notice","Popup","onPopupClick","ListMembers","setView","setMatchData","viewPopup","setViewPopup","setnotice","_useSelector","users","hasUsersNotice","choiceCount","totalUserCount","totalChoiceCount","partners","total_user_count","setUsers","compatibility","likes_me","keys","find","_ref4","_callee4","_context4","ChoiceTab","Profile","likeMe","faHeart","onLogoutClick","callProtectedAPI","View","EditForm","cols","rows","Edit","setFile","changeEditForm","renderList","index","_id","profile_image","messages","content","ChatList","hasChatsNotice","chatList","getchatList","Roading","onMessageChange","onKeyPress","randerChat","hasOwnProperty","speaker","sender","ChatView","setMessage","client","currentRoomChat","useParams","userId","setChat","joinRoom","receiveNewMessage","newMessage","createAt","Date","leaveRoom","sendMessage","postNewMessage","InputPanel","currentTarget","NotFound","MainLoading","PrivateRoute","children","useLocation","isAuthenticated","Navigate","from","NotLoggedInRoute","App","isMainLoading","Routes","Route","path","element","replace","initialState","dob","dislikeUsers","mailConfirm","socket","io","transports","secure","on","err","emit","cb","removeListener","reducer","action","assign","_defineProperty","_toConsumableArray","store","createStore","matchApp","window","__REDUX_DEVTOOLS_EXTENSION__","loadUser","ReactDOM","render","Provider","Router","document","getElementById"],"mappings":"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","file":"static/js/main.812e06c0.chunk.js","sourcesContent":["export const CHANGE_LOGIN_FORM = 'CHANGE_LOGIN_FORM';\nexport const SUCCESS_USER_AUTHENTICATION = 'SUCCESS_USER_AUTHENTICATION';\nexport const CONFIRMED_NOT_AUTHENTICATED = 'CONFIRMED_NOT_AUTHENTICATED';\nexport const SUCCESS_REGISTER_MEMBER = 'SUCCESS_REGISTER_MEMBER';\nexport const USER_LOGOUT = 'USER_LOGOUT';\n\nexport const CHANGE_REGISTER_FORM = 'CHANGE_REGISTER_FORM';\nexport const SUCCESS_USER_DATA_UPDATE = 'SUCCESS_USER_DATA_UPDATE';\n\nexport const GET_GEOLOCATION = 'GET_GEOLOCATION';\n\nexport const LOADING_USERS = 'LOADING_USERS';\nexport const LOAD_USERS_SUCCESS = 'LOAD_USERS_SUCCESS';\nexport const INCREASE_CHOICE_COUNT = 'INCREASE_CHOICE_COUNT';\nexport const RESET_CHOICE_COUNT = 'RESET_CHOICE_COUNT';\nexport const INCREASE_PAGE_INDEX = 'INCREASE_PAGE_INDEX';\nexport const SELECTED_ALL_MEMBERS = 'SELECTED_ALL_MEMBERS';\nexport const ADD_NEW_USERS_LIST = 'ADD_NEW_USERS_LIST';\nexport const LEAVE_MEMBERS_LIST = 'LEAVE_MEMBERS_LIST';\n\nexport const LOAD_CHATS_LIST_SUCCESS = 'LOAD_CHATS_LIST_SUCCESS';\nexport const ENTER_CHAT_ROOM = 'ENTER_CHAT_ROOM';\nexport const ADD_NEW_MESSAGE = 'ADD_NEW_MESSAGE';\nexport const LEAVE_ROOM = 'LEAVE_ROOM';\nexport const CHANGE_EDIT_FORM = 'CHANGE_EDIT_FORM';\nexport const NONE_CHATS = 'NONE_CHATS';\n","const awsconfig = {\r\n  Auth: {\r\n    region: 'ap-northeast-2',\r\n    userPoolId: 'ap-northeast-2_he0NwXfAK',\r\n    userPoolWebClientId: 'r8ro24j5m9ggjdlq3rvkunsfn',\r\n    mandatorySignIn: false,\r\n    authenticationFlowType: 'USER_PASSWORD_AUTH',\r\n  },\r\n};\r\n\r\nexport default awsconfig;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './login.scss';\nimport { Auth } from 'aws-amplify';\nimport awsconfig from '../../aws-config';\nimport { Amplify } from 'aws-amplify';\n\nAmplify.configure(awsconfig);\n\nconst LoginForm = ({ onSubmit, onChange, login, error }) => {\n  let renderErrors = '';\n  if (Array.isArray(error)) {\n    renderErrors = error.map(error => <p className=\"error\">{error}</p>);\n  } else {\n    renderErrors = <p className=\"error\">{error}</p>;\n  }\n  return (\n    <div className=\"loginForm form\">\n      <div className=\"errors\">{renderErrors}</div>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"email\"\n          maxLength=\"80\"\n          value={login ? login.email : ''}\n          onChange={onChange}\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"password\"\n          value={login ? login.password : ''}\n          onChange={onChange}\n          required\n        />\n        <button type=\"submit\">Login</button>\n      </form>\n      <Link to=\"/signup\" className=\"button\">\n        Sign up\n      </Link>\n    </div>\n  );\n};\n\nconst handleLogin = async (login) => {\n  try {\n    const user = await Auth.signIn(login.email, login.password);\n    const jwt = user.signInUserSession.idToken.jwtToken;\n    localStorage.setItem('jwt', jwt);\n    alert('로그인 성공!');\n  } catch (error) {\n    console.error('로그인 실패:', error);\n  }\n};\nexport default LoginForm;\n","let ROOT, SOCKET_ROOT;\n\nif (process.env.NODE_ENV === 'development') {\n  ROOT = 'http://localhost:8081';\n  SOCKET_ROOT = 'http://localhost:8081';\n} else {\n  ROOT = 'https://jxsbyfmks7.execute-api.ap-northeast-2.amazonaws.com/prod';\n  SOCKET_ROOT = 'http://3.38.152.226:8080';\n}\n\nexport const config = Object.freeze({\n  ROOT, //: process.env.REACT_APP_ROOT,\n  SOCKET_ROOT //: process.env.REACT_APP_SOCKET_ROOT\n});\n\n","import React from 'react';\nimport './Logo.scss';\n\nconst Logo = () => (\n  <div className=\"logo-wrap\">\n    <div className=\"logo-area\">\n      <h1 className=\"logo\" data-heading=\"MATCH ♡ MINDS\">\n      MATCH ♡ MINDS\n      </h1>\n    </div>\n  </div>\n);\n\nexport default Logo;\n","import {\n  CHANGE_REGISTER_FORM,\n  CHANGE_LOGIN_FORM,\n  GET_GEOLOCATION,\n  SUCCESS_USER_AUTHENTICATION,\n  LOAD_USERS_SUCCESS,\n  INCREASE_CHOICE_COUNT,\n  RESET_CHOICE_COUNT,\n  INCREASE_PAGE_INDEX,\n  LOAD_CHATS_LIST_SUCCESS,\n  ENTER_CHAT_ROOM,\n  ADD_NEW_MESSAGE,\n  LEAVE_ROOM,\n  CHANGE_EDIT_FORM,\n  CONFIRMED_NOT_AUTHENTICATED,\n  USER_LOGOUT,\n  SUCCESS_USER_DATA_UPDATE,\n  SUCCESS_REGISTER_MEMBER,\n  SELECTED_ALL_MEMBERS,\n  NONE_CHATS,\n  ADD_NEW_USERS_LIST,\n  LEAVE_MEMBERS_LIST\n} from '../contants/actionTypes';\n// import { useEffect } from 'react';\n// import { useSelector } from 'react-redux';\n// import { useNavigate } from 'react-router-dom';\n\nexport const CHECK_USER_NOT_LOGIN = 'CHECK_USER_NOT_LOGIN';\n\nexport const changeRegisterForm = ({ name, value }) => ({\n  type: CHANGE_REGISTER_FORM,\n  name,\n  value\n});\n\nexport const changeLoginForm = ({ name, value }) => ({\n  type: CHANGE_LOGIN_FORM,\n  name,\n  value\n});\n\nexport const checkUserNotLogin = () => ({\n  type: CHECK_USER_NOT_LOGIN\n});\n\n// export const registerMember = ({ user, isAuthenticated }) => {\n//   return {\n//     type: SUCCESS_REGISTER_MEMBER,\n//     user,\n//     edit: {\n//       mbti: user?.mbti?.type || '',\n//       name: user?.name || '',\n//       description: user?.description || ''\n//     },\n//     isAuthenticated\n//   };\n// };\n\nexport const registerMember = (user) => {\n  let mbti = '';\n  let name = '';\n  let description = '';\n\n  if (user && user.mbti && user.mbti.type) {\n    mbti = user.mbti.type;\n  }\n\n  if (user && user.name) {\n    name = user.name;\n  }\n\n  if (user && user.description) {\n    description = user.description;\n  }\n\n  return {\n    type: SUCCESS_REGISTER_MEMBER,\n    user,\n    edit: {\n      mbti,\n      name,\n      description\n    }\n  };\n};\n\nexport const logoutUser = () => ({\n  type: USER_LOGOUT\n});\n\nexport const changeEditForm = ({ name, value }) => ({\n  type: CHANGE_EDIT_FORM,\n  name,\n  value\n});\n\nexport const getGeolocation = (state, location) => ({\n  type: GET_GEOLOCATION,\n  state,\n  location\n});\n\nexport const successUserAuthentication = user => ({\n  type: SUCCESS_USER_AUTHENTICATION,\n  user,\n  edit: {\n    mbti: user.mbti.type,\n    name: user.name,\n    description: user.description\n  }\n});\n\nexport const changeUserData = user => ({\n  type: SUCCESS_USER_DATA_UPDATE,\n  user\n});\n\nexport const loadUsersSuccess = data => ({\n  type: LOAD_USERS_SUCCESS,\n  users: data.users,\n  totalUserCount: data.totalUserCount\n});\n\nexport const increaseChoiceCount = () => ({\n  type: INCREASE_CHOICE_COUNT\n});\n\nexport const resetChoiceCount = () => ({\n  type: RESET_CHOICE_COUNT\n});\n\nexport const increasePageIndex = () => ({\n  type: INCREASE_PAGE_INDEX\n});\n\nexport const noticeSelectedAll = () => ({\n  type: SELECTED_ALL_MEMBERS\n});\n\nexport const loadChatsListSuccess = chats => ({\n  type: LOAD_CHATS_LIST_SUCCESS,\n  chats\n});\n\nexport const addNewMessage = newMessage => ({\n  type: ADD_NEW_MESSAGE,\n  newMessage\n});\n\nexport const enterChatRoom = chat => ({\n  type: ENTER_CHAT_ROOM,\n  chat\n});\n\nexport const leaveRoom = () => ({\n  type: LEAVE_ROOM\n});\n\nexport const noticeNoneChats = () => ({\n  type: NONE_CHATS\n});\n\nexport const addNewUsers = data => ({\n  type: ADD_NEW_USERS_LIST,\n  users: data.users\n});\n\nexport const leaveMemberList = () => ({\n  type: LEAVE_MEMBERS_LIST\n});\n\n\n// export const LoginRedirect = () => {\n//   const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (!isAuthenticated) {\n//       navigate('/login');\n//     }\n//   }, [isAuthenticated]);\n\n//   return null;\n// };\n","import axios from 'axios';\nimport { config } from '../config';\n\naxios.defaults.withCredentials = true;\nconst { ROOT } = config;\n\nexport const postSignup = (formData, registerData) => {\n  return axios\n    .post(`${ROOT}/api/signup`, {\n      ...registerData\n    })\n    .then(response => {\n      return axios\n        .post(`${ROOT}/api/upload`, formData)\n        .then(result => {\n          return {\n            data: result.data,\n            error: ''\n          };\n        })\n        .catch(error => {\n          return {\n            error: error.response.data.message || 'server error'\n          };\n        });\n    })\n    .catch(error => {\n      let message = 'server error';\n      if (\n        error &&\n        error.response &&\n        error.response.data &&\n        error.response.data.message\n      ) {\n        message = error.response.data.message;\n      }\n    \n      return { error: message };\n    });\n};\n\nexport const getUser = async () => {\n  try {\n    const token = localStorage.getItem('jwt');\n    const response = await axios.get(`${config.ROOT}/auth/user`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    let message = 'server error';\n    if (\n      error &&\n      error.response &&\n      error.response.data &&\n      error.response.data.message\n    ) {\n      message = error.response.data.message;\n    }\n    return { error: message };\n  }\n};\n//   return axios\n//     .get(`${ROOT}/auth/user`)\n//     .then(response => response.data)\n//     // .catch(error => {\n//     //   return {\n//     //     error: error.response.data.message || 'server error'\n//     //   };\n//     // });\n//     .catch(error => {\n//       let message = 'server error';\n//       if (\n//         error &&\n//         error.response &&\n//         error.response.data &&\n//         error.response.data.message\n//       ) {\n//         message = error.response.data.message;\n//       }\n    \n//       return { error: message };\n//     });\n    \n// };\n\nexport const postLogin = data => {\n  return axios({\n    url: `${ROOT}/api/login`,\n    method: 'POST',\n    data\n  })\n    .then(response => {\n      return {\n        data: response.data,\n        error: ''\n      };\n    })\n    .catch(error => {\n      return {\n        error: error.response.data.message || 'server error'\n      };\n    });\n};\n\nexport const getLogout = () => {\n  return axios({\n    url: `${ROOT}/api/logout`,\n    method: 'GET'\n  }).catch(error => {\n    console.log(error);\n  });\n};\n\nexport const getUsers = ({ limit, pageIndex }) => {\n  return axios({\n    url: `${ROOT}/api/users?limit=${limit}&pageIndex=${pageIndex}`,\n    method: 'GET'\n  })\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const addLikeUser = partnerId => {\n  return axios({\n    url: `${ROOT}/api/users/likes/${partnerId}`,\n    method: 'PUT'\n  })\n    .then(response => {\n      console.log(response);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const getLikeMe = () => {\n  return axios({\n    url: `${ROOT}/api/user/likes`,\n    method: 'GET'\n  })\n    .then(response => {\n      return response.data.likes_me;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const postChat = partnerId => {\n  return axios({\n    url: `${ROOT}/api/chats/${partnerId}`,\n    method: 'POST'\n  })\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const getChats = () => {\n  return axios({\n    url: `${ROOT}/api/chats`,\n    method: 'GET'\n  })\n    .then(response => {\n      return response.data;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const getChat = roomId => {\n  return axios({\n    url: `${ROOT}/api/chats/${roomId}`,\n    method: 'GET'\n  })\n    .then(response => {\n      return response.data.chat;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const postNewMessage = (roomId, data) => {\n  return axios({\n    url: `${ROOT}/api/chats/${roomId}`,\n    method: 'PUT',\n    data\n  })\n    .then(response => {\n      console.log(response.data);\n      return response.data;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport const putUserInfo = (userData, formData = null) => {\n  return axios\n    .put(`${ROOT}/api/user`, {\n      ...userData\n    })\n    .then(response => {\n      if (formData) {\n        return axios\n          .put('/api/upload', formData)\n          .then(result => {\n            return result.data.user;\n          })\n          .catch(error => {\n            return {\n              error: error.response.data.message || 'server error'\n            };\n          });\n      } else {\n        return response.data.user;\n      }\n    })\n    .catch(error => {\n      return {\n        error: error.response.data.message || 'server error'\n      };\n    });\n};\n\nexport const uploadImageToS3 = async (file) => {\n  const fileName = file.name;\n  const fileType = file.type;\n\n  // 1단계: Presigned URL 요청\n  const { data } = await axios.post(`${config.ROOT}/api/upload`, {\n    fileName,\n    fileType\n  });\n\n  // 2단계: S3에 직접 업로드\n  const result = await axios.put(data.uploadURL, file, {\n    headers: {\n      'Content-Type': fileType\n    }\n  });\n\n  // 업로드된 파일 key 반환\n  return data.key;\n};","import { isPlainObject, forEach, isArray, camelCase } from 'lodash';\n\nexport function objectKeysToCamelCase(snakeCaseObject = null) {\n  if (!snakeCaseObject) return {};\n  const camelCaseObject = {};\n  const camelCaseArray = [];\n\n  forEach(snakeCaseObject, function(value, key) {\n    if (isPlainObject(value) || isArray(value)) {\n      value = objectKeysToCamelCase(value);\n    }\n    if (isArray(snakeCaseObject)) {\n      camelCaseArray.push(value);\n    } else {\n      camelCaseObject[camelCase(key)] = value;\n    }\n  });\n\n  if (isArray(snakeCaseObject)) return camelCaseArray;\n  return camelCaseObject;\n}\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n// import { withRouter } from 'react-router-dom';\nimport LoginForm from '../components/Login/LoginForm';\nimport Logo from '../components/Logo/Logo';\nimport {\n  changeLoginForm,\n  getGeolocation,\n  successUserAuthentication\n} from '../actions';\nimport { postLogin } from '../api';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\nimport { Auth } from 'aws-amplify';\nimport awsconfig from '../aws-config';\nimport { Amplify } from 'aws-amplify';\n\nAmplify.configure(awsconfig);\n\nconst API_URL = 'https://jxsbyfmks7.execute-api.ap-northeast-2.amazonaws.com/prod';\n\nconst Login = () => {\n  const [error, setError] = useState('');\n  const login = useSelector(state => state.login);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleLoginSuccess = () => {\n    navigate('/profile'); // ✅ v6 방식\n  };\n\n  useEffect(() => {\n    const getPosition = () => {\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      });\n      // <button onClick={handleLoginSuccess}>로그인</button>);\n    };\n\n    getPosition()\n      .then(position => {\n        console.log(position.coords);\n        dispatch(\n          getGeolocation('login', {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          })\n        );\n      })\n      .catch(() => {\n        setError('현재 위치를 받아올 수 없습니다.');\n      });\n  }, [dispatch]);\n\n  const onChange = ev => {\n    const { value, name } = ev.target;\n    dispatch(\n      changeLoginForm({\n        name,\n        value\n      })\n    );\n  };\n\n  const onSubmit = async ev => {\n    ev.preventDefault();\n    try {\n      // ✅ Cognito 로그인\n      const user = await Auth.signIn(login.email, login.password);\n      const idToken = user.signInUserSession.idToken.jwtToken;\n  \n      // ✅ JWT 저장\n      localStorage.setItem('jwt', idToken);\n  \n      // ✅ 백엔드에서 유저 정보 요청 (API Gateway + Lambda)\n      const token = localStorage.getItem('jwt');\n      if (!token) {\n        setError('로그인 세션이 유효하지 않습니다. 다시 로그인 해주세요.');\n        return;\n      }\n      \n      const res = await fetch(`${API_URL}/auth/user`, {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n  \n      if (res.ok) {\n        const data = await res.json();\n        console.log('✅ 유저 정보:', data);\n      \n        if (data && data.user) {\n          dispatch(successUserAuthentication(objectKeysToCamelCase(data.user)));\n          navigate('/profile');\n        } else {\n          setError('유저 정보를 불러오지 못했습니다.');\n        }\n      } else {\n        // 서버 에러일 때 안전하게 처리\n        console.error(`❌ 서버 오류 [${res.status}]`);\n        let errorMsg = '서버 오류가 발생했습니다.';\n        try {\n          const errorData = await res.json();\n          errorMsg = errorData.message || errorMsg;\n        } catch (parseErr) {\n          console.error('에러 메시지 파싱 실패:', parseErr);\n        }\n        setError(errorMsg);\n      }\n    } catch (err) {\n      console.error('API 호출 실패:', err);\n      if (err.name === 'UserNotConfirmedException') {\n        setError('이메일 인증이 필요합니다.');\n      } else if (err.name === 'NotAuthorizedException') {\n        setError('아이디 또는 비밀번호가 잘못되었습니다.');\n      } else {\n        setError('로그인 중 오류가 발생했습니다.');\n      }\n    }};\n\n  return (\n    <>\n      <Logo />\n      <LoginForm\n        onChange={onChange}\n        onSubmit={onSubmit}\n        error={error}\n        login={login}\n      />\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport './SignupForm.scss';\nimport { Auth } from 'aws-amplify';\n\nconst ROOT = 'https://jxsbyfmks7.execute-api.ap-northeast-2.amazonaws.com/prod';\n\n\nconst SignupForm = ({ onChange, register, error, onFileChange, isSignupComplete, code, setCode, handleConfirmCode, handleResendCode}) => {\n  let form = null;\n\n  useEffect(() => {\n    const scrollToTop = () => {\n      form.scrollIntoView({ block: 'start' });\n    };\n\n    scrollToTop();\n  }, [error, form]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    await handleSignUp(register);\n  };\n\n  return (\n    <div className=\"signupForm form\">\n      {!isSignupComplete ? (\n      <form onSubmit={handleSubmit}\n        // e.preventDefault();\n        // handleSignUp(register, register.file);  // 선택된 파일 넘기기\n      ref={le => (form = le)}>\n        <p className=\"error\">{error}</p>\n        <label htmlFor=\"mbit\" required>\n          MBTI\n        </label>\n        <select\n          name=\"mbti\"\n          id=\"mbti\"\n          required\n          value={register.mbti}\n          onChange={onChange}\n        >\n          <option value=\"\">mbti를 선택해 주세요.</option>\n          <option value=\"intj\">INTJ 용의주도한 전략가</option>\n          <option value=\"intp\">INTP 논리적인 사색가</option>\n          <option value=\"entj\">ENTJ 대담한 통솔자</option>\n          <option value=\"entp\">ENTP 뜨거운 논쟁을 즐기는 변론가</option>\n          <option value=\"infj\">INFJ 선의의 옹호자</option>\n          <option value=\"infp\">INFP 열정적인 중재자</option>\n          <option value=\"enfj\">ENFJ 정의로운 사회운동가</option>\n          <option value=\"enfp\">ENFP 재기발랄한 활동가</option>\n          <option value=\"istj\">ISTJ 청렴결백한 논리주의자</option>\n          <option value=\"isfj\">ISFJ 용감한 수호자</option>\n          <option value=\"estj\">ESTJ 엄격한 관리자</option>\n          <option value=\"esfj\">ESFJ 사교적인 외교관</option>\n          <option value=\"istp\">ISTP 만능 재주꾼</option>\n          <option value=\"isfp\">ISFP 호기심 많은 예술가</option>\n          <option value=\"estp\">ESTP 모험을 즐기는 사업가</option>\n          <option value=\"esfp\">ESFP 자유로운 영혼의 연예인</option>\n        </select>\n        <p>\n          mbti를 모르신다면\n          <a href=\"https://www.16personalities.com/ko/%EB%AC%B4%EB%A3%8C-%EC%84%B1%EA%B2%A9-%EC%9C%A0%ED%98%95-%EA%B2%80%EC%82%AC\">\n            mbti 사이트\n          </a>\n          에서 검사를 부탁드립니다.\n        </p>\n        <label htmlFor=\"email\">email</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          required\n          value={register.email}\n          onChange={onChange}\n          maxLength=\"100\"\n        />\n        <label htmlFor=\"password\">password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          required\n          value={register.password || ''}\n          onChange={onChange}\n          maxLength=\"18\"\n          minLength=\"6\"\n        />\n        <label htmlFor=\"passwordConfirm\">password confirm</label>\n        <input\n          type=\"password\"\n          name=\"passwordConfirm\"\n          required\n          value={register.passwordConfirm || ''}\n          onChange={onChange}\n          maxLength=\"18\"\n          minLength=\"6\"\n        />\n        <label htmlFor=\"name\">name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          required\n          value={register.name || ''}\n          onChange={onChange}\n          maxLength=\"13\"\n        />\n        <p className=\"title\">성별</p>\n        <div className=\"gender-area\">\n          <input\n            type=\"radio\"\n            name=\"gender\"\n            value=\"female\"\n            id=\"female\"\n            checked={register.gender === 'female'}\n            onChange={onChange}\n            required\n          />\n          <label htmlFor=\"female\">여성</label>\n          <input\n            type=\"radio\"\n            name=\"gender\"\n            value=\"male\"\n            id=\"male\"\n            checked={register.gender === 'male'}\n            onChange={onChange}\n          />\n          <label htmlFor=\"male\">남성</label>\n        </div>\n        <label htmlFor=\"file\">프로필 사진</label>\n        <input\n          type=\"file\"\n          name=\"file\"\n          id=\"file\"\n          onChange={onFileChange}\n          accept=\"image/x-png,image/gif,image/jpeg\"\n          required\n        />\n        <label htmlFor=\"description\">자기소개</label>\n        <textarea\n          type=\"text\"\n          name=\"description\"\n          maxLength=\"60\"\n          value={register.description}\n          onChange={onChange}\n        />\n        <button>Sign up</button>\n      </form>\n      ) : (\n        // ✅ 인증 코드 입력 UI\n        <div className=\"verify-section\">\n          <h3>이메일 인증</h3>\n          <p>이메일로 전송된 인증 코드를 입력하세요.</p>\n          <input\n            type=\"text\"\n            value={code}\n            onChange={(e) => setCode(e.target.value)}\n            placeholder=\"인증 코드 입력\"\n          />\n          <button onClick={handleConfirmCode}>인증 확인</button>\n          <button onClick={handleResendCode}>인증 코드 재전송</button>\n          {error && <p className=\"error\">{error}</p>}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport const handleSignUp = async (register) => {\n  try {\n    const file = register.file;\n    if (!file) {\n      alert('파일이 선택되지 않았습니다.');\n      return;\n    }\n\n    // 1️⃣ Presigned URL 요청\n    const presignedRes = await axios.post(`${ROOT}/api/upload`, {\n      fileName: file.name,\n      fileType: file.type\n    },\n      {\n        headers: { 'Content-Type': 'application/json' }\n      }\n    );\n\n    const { uploadURL, key } = presignedRes.data;\n\n    // 2️⃣ S3로 파일 업로드\n    await axios.put(uploadURL, file, {\n      headers: { 'Content-Type': file.type }\n    });\n\n    console.log('✅ 파일 업로드 성공:', key);\n\n    // 3️⃣ Cognito 회원가입\n    const { email, password } = register;\n    await Auth.signUp({\n      username: email,\n      password,\n      attributes: { email },\n    });\n\n    // 4️⃣ 추가 서버 회원가입 API 호출 (있다면)\n    await axios.post(`${ROOT}/api/signup`, {\n      ...register,\n      profileImage: key\n    });\n\n    alert('가입 성공! 이메일 인증 코드를 입력하세요.');\n  } catch (error) {\n    console.error('회원가입 에러:', error);\n \n    if (error.response) {\n       console.error('서버 응답 에러:', error.response.data);\n    } else if (error.message) {\n       console.error('에러 메시지:', error.message);\n    }\n \n    alert('가입 실패!');\n }\n \n};\nexport default SignupForm;\n","// import React from 'react';\n// // import { withRouter } from 'react-router-dom';\n// import { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import './BackTab.scss';\n\n// const BackTab = ({ history, title }) => {\n//   const onBackClick = () => history.goBack();\n\n//   return (\n//     <div className=\"back-tab\">\n//       <button onClick={onBackClick}>\n//         <FontAwesomeIcon icon={faArrowLeft} />\n//       </button>\n//       <span className=\"title\">{title}</span>\n//     </div>\n//   );\n// };\n\n// export default BackTab;\n\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './BackTab.scss';\n\nconst BackTab = ({ title }) => {\n  const navigate = useNavigate();\n\n  const onBackClick = () => {\n    navigate(-1); // -1 = go back\n  };\n\n  return (\n    <div className=\"back-tab\" onClick={onBackClick}>\n      ← {title}\n    </div>\n  );\n};\n\nexport default BackTab;\n","// import React, { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// // import { withRouter } from 'react-router-dom';\n// import { useSelector, useDispatch } from 'react-redux';\n// import SignupForm from '../components/Signup/SignupForm';\n// import BackTab from '../components/BackTab/BackTab';\n// import { changeRegisterForm, getGeolocation, registerMember } from '../actions';\n// import { objectKeysToCamelCase } from '../utility/formattingData';\n// import { postSignup } from '../api';\n\n// const Signup = () => {\n//   const [error, setError] = useState('');\n//   const [file, setFile] = useState(null);\n//   const register = useSelector(state => state.register);\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     const getPosition = () => {\n//       return new Promise((resolve, reject) => {\n//         navigator.geolocation.getCurrentPosition(resolve, reject);\n//       });\n//     };\n\n//     getPosition()\n//       .then(position => {\n//         console.log(position.coords);\n//         dispatch(\n//           getGeolocation('register', {\n//             latitude: position.coords.latitude,\n//             longitude: position.coords.longitude\n//           })\n//         );\n//       })\n//       .catch(error => {\n//         setError('현재 위치를 받아올 수 없습니다.');\n//       });\n//   }, [dispatch]);\n\n//   const onChange = ev => {\n//     const { value, name } = ev.target;\n//     dispatch(\n//       changeRegisterForm({\n//         name,\n//         value\n//       })\n//     );\n//   };\n\n//   const onFileChange = ev => {\n//     setFile(ev.target.files[0]);\n//   };\n\n//   const onSubmit = async ev => {\n//     ev.preventDefault();\n//     const passwordReg = new RegExp(\n//       '^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{6,18}$'\n//     );\n//     const { email, password, passwordConfirm, name, mbti, gender } = register;\n\n//     if ([email, password, passwordConfirm, name, mbti, gender].includes('')) {\n//       setError('모두 입력하세요.');\n//       return;\n//     }\n\n//     if (!passwordReg.test(password)) {\n//       setError(\n//         '비밀번호는 숫자와 영문 포함 6자 이상 18자 이하로 입력해주세요.'\n//       );\n//       return;\n//     }\n\n//     if (password !== passwordConfirm) {\n//       setError('비밀번호가 일치하지 않습니다.');\n//       dispatch(\n//         changeRegisterForm({\n//           key: 'password',\n//           value: ''\n//         })\n//       );\n//       dispatch(\n//         changeRegisterForm({\n//           key: 'passwordConfirm',\n//           value: ''\n//         })\n//       );\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append('file', file);\n//     await postSignup(formData, register).then(result =>\n//       dispatch(registerMember(objectKeysToCamelCase(result.data)))\n//     );\n//     // history.push('/profile');\n//   };\n\n//   return (\n//     <>\n//       <BackTab title={'Sign up'} />\n//       <SignupForm\n//         register={register}\n//         onChange={onChange}\n//         onFileChange={onFileChange}\n//         onSubmit={onSubmit}\n//         error={error}\n//       />\n//     </>\n//   );\n// };\n\n// export default Signup;\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SignupForm from '../components/Signup/SignupForm';\nimport BackTab from '../components/BackTab/BackTab';\nimport { changeRegisterForm, getGeolocation, registerMember } from '../actions';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\nimport { postSignup } from '../api';\nimport { Auth } from 'aws-amplify';\n\nconst Signup = () => {\n  const [error, setError] = useState('');\n  const [file, setFile] = useState(null);\n  const [code, setCode] = useState('');\n  const [isSignupComplete, setIsSignupComplete] = useState(false);\n  const register = useSelector(state => state.register);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const getPosition = () => {\n      return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject);\n      });\n    };\n\n    getPosition()\n      .then(position => {\n        dispatch(\n          getGeolocation('register', {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          })\n        );\n      })\n      .catch(() => {\n        setError('현재 위치를 받아올 수 없습니다.');\n      });\n  }, [dispatch]);\n\n  const onChange = ev => {\n    const { value, name } = ev.target;\n    dispatch(changeRegisterForm({ name, value }));\n  };\n\n  const onFileChange = ev => {\n    const selectedFile = ev.target.files[0];\n    dispatch(changeRegisterForm({ name: 'file', value: selectedFile }));\n  };\n  \n\n  const onSubmit = async ev => {\n    ev.preventDefault();\n    const passwordReg = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,18}$/;\n    const { email, password, passwordConfirm, name, mbti, gender } = register;\n\n    if ([email, password, passwordConfirm, name, mbti, gender].includes('')) {\n      setError('모두 입력하세요.');\n      return;\n    }\n\n    if (!passwordReg.test(password)) {\n      setError('비밀번호는 숫자와 영문 포함 6자 이상 18자 이하로 입력해주세요.');\n      return;\n    }\n\n    if (password !== passwordConfirm) {\n      setError('비밀번호가 일치하지 않습니다.');\n      dispatch(changeRegisterForm({ key: 'password', value: '' }));\n      dispatch(changeRegisterForm({ key: 'passwordConfirm', value: '' }));\n      return;\n    }\n    \n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('email', register.email);\n    formData.append('password', register.password);\n    formData.append('name', register.name);\n    formData.append('mbti', register.mbti);\n    formData.append('gender', register.gender);\n\n    try {\n      const result = await postSignup(formData, register);\n\n    console.log('[DEBUG] postSignup result.data:', result.data); // ✅ 확인용\n\n    await dispatch(registerMember(objectKeysToCamelCase(result.data)));\n  \n      // ✅ 회원가입 성공 시 이메일 인증 페이지로 이동\n    alert('회원가입 성공! 이메일로 전송된 인증 코드를 입력해주세요.');\n    setIsSignupComplete(true);\n  \n    } catch (err) {\n      console.error('회원가입 오류:', err);\n      setError('회원가입 중 오류가 발생했습니다.');\n    }\n  }\n\n  // ✅ 인증 코드 확인 핸들러\n  const handleConfirmCode = async () => {\n    try {\n      await Auth.confirmSignUp(register.email, code);\n      alert('✅ 이메일 인증이 완료되었습니다!');\n      navigate('/login');\n    } catch (err) {\n      console.error('인증 실패:', err);\n      setError('❌ 인증번호가 잘못되었거나 만료되었습니다.');\n    }\n  };\n  \n\n  return (\n    <>\n      <BackTab title={'Sign up'} />\n      <SignupForm\n        register={register}\n        onChange={onChange}\n        onFileChange={onFileChange}\n        onSubmit={onSubmit}\n        error={error}\n        isSignupComplete={isSignupComplete}   // ✅ 추가\n        code={code}                           // ✅ 추가\n        setCode={setCode}                     // ✅ 추가\n        handleConfirmCode={handleConfirmCode} // ✅ 추가\n        handleResendCode={async () => {       // ✅ 재전송 핸들러\n          try {\n            await Auth.resendSignUp(register.email);\n            alert('📧 인증번호가 다시 전송되었습니다.');\n          } catch (err) {\n            console.error('재전송 실패:', err);\n            setError('인증번호 재전송 중 오류 발생.');\n          }\n        }}\n      />\n\n    {isSignupComplete && (\n        <div style={{ padding: '20px' }}>\n          <h3>이메일로 받은 인증 코드를 입력하세요</h3>\n          <input\n            type=\"text\"\n            value={code}\n            onChange={(e) => setCode(e.target.value)}\n            placeholder=\"인증 코드 입력\"\n          />\n          <button onClick={handleConfirmCode}>인증 완료</button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {\n  faUserCircle,\n  faComment,\n  faUserFriends\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './TabList.scss';\n\nconst TabList = () => (\n  <nav className=\"tab-list\">\n    <ul>\n      <li>\n        <NavLink to=\"/profile\" activeClassName=\"selected\">\n          <FontAwesomeIcon icon={faUserCircle} />\n        </NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/users/list\" activeClassName=\"selected\">\n          <FontAwesomeIcon icon={faUserFriends} />\n        </NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/chats\" activeClassName=\"selected\">\n          <FontAwesomeIcon icon={faComment} />\n        </NavLink>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default TabList;\n","import React from 'react';\nimport { faArrowsAltH } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport CountUp from 'react-countup';\nimport './List.scss';\n\nconst List = ({ partner, view, matchData, myMbti, myName }) => {\n  const figure = matchData.match(/\\d+/)[0] * 25;\n\n  return (\n    <div className={`choice-list show-${view}`}>\n      {partner && (\n        <>\n          <div className=\"front card\">\n            <img\n              src={partner.profileImage}\n              className=\"profile-image\"\n              alt=\"profile\"\n            />\n            <div className=\"info\">\n              <p className=\"name\">{partner.name}</p>\n              <pre className=\"description\">{partner.description}</pre>\n            </div>\n          </div>\n          <div className={`back card ${matchData}`}>\n            <p className=\"title\">\n              내 MBTI와의\n              <br /> 적합성은?\n            </p>\n            <ul className=\"emoji-list\">\n              <li>\n                <div className=\"emoji emoji--haha\">\n                  <div className=\"emoji__face\">\n                    <div className=\"emoji__eyes\"></div>\n                    <div className=\"emoji__mouth\">\n                      <div className=\"emoji__tongue\"></div>\n                    </div>\n                  </div>\n                </div>\n              </li>\n              <li>\n                <div className=\"emoji emoji--yay\">\n                  <div className=\"emoji__face\">\n                    <div className=\"emoji__eyebrows\"></div>\n                    <div className=\"emoji__mouth\"></div>\n                  </div>\n                </div>\n              </li>\n              <li>\n                <div className=\"emoji emoji--wow\">\n                  <div className=\"emoji__face\">\n                    <div className=\"emoji__eyebrows\"></div>\n                    <div className=\"emoji__eyes\"></div>\n                    <div className=\"emoji__mouth\"></div>\n                  </div>\n                </div>\n              </li>\n              <li>\n                <div className=\"emoji emoji--sad\">\n                  <div className=\"emoji__face\">\n                    <div className=\"emoji__eyebrows\"></div>\n                    <div className=\"emoji__eyes\"></div>\n                    <div className=\"emoji__mouth\"></div>\n                  </div>\n                </div>\n              </li>\n              <li>\n                <div className=\"emoji emoji--angry\">\n                  <div className=\"emoji__face\">\n                    <div className=\"emoji__eyebrows\"></div>\n                    <div className=\"emoji__eyes\"></div>\n                    <div className=\"emoji__mouth\"></div>\n                  </div>\n                </div>\n              </li>\n            </ul>\n            <div className=\"figure\">\n              <CountUp start={0} end={figure} duration={3} />\n              <span>%</span>\n            </div>\n\n            <ul className=\"mbti-info\">\n              <li>\n                <p className=\"name\">{myName}</p>\n                <p className=\"mbti\">{myMbti}</p>\n              </li>\n              <li className=\"arrow\">\n                <FontAwesomeIcon icon={faArrowsAltH} />\n              </li>\n              <li>\n                <p className=\"name\">{partner.name}</p>\n                <p className=\"mbti\">{partner.mbti.type}</p>\n              </li>\n            </ul>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default List;\n","import React from 'react';\nimport { faKissWinkHeart, faMeh } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './ChoiceTab.scss';\n\nconst Tab = ({ onLikeClick, onUnLikeClick }) => {\n  return (\n    <div className=\"choice-tab\">\n      <ul>\n        <li>\n          <button onClick={onLikeClick}>\n            <FontAwesomeIcon icon={faKissWinkHeart} />\n            <span>Like</span>\n          </button>\n        </li>\n        <li>\n          <button onClick={onUnLikeClick}>\n            <FontAwesomeIcon icon={faMeh} />\n            <span>Pass</span>\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Tab;\n","import React from 'react';\nimport { faHandPointRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './NextTab.scss';\n\nconst NextTab = ({ onNextClick }) => (\n  <div className=\"next-tab\">\n    <button onClick={onNextClick}>\n      <span>next</span>\n      <FontAwesomeIcon icon={faHandPointRight} />\n    </button>\n  </div>\n);\n\nexport default NextTab;\n","import React from 'react';\nimport Logo from '../Logo/Logo';\n\nconst Notice = ({ notice = null }) => (\n  <div className=\"notice-content\">\n    <Logo />\n    <p>{notice}</p>\n  </div>\n);\n\nexport default Notice;\n","import React from 'react';\nimport './Popup.scss';\n\nconst Popup = ({ onPopupClick }) => (\n  <div className=\"popup\" onClick={onPopupClick}>\n    <p>\n      채팅방이\n      <br /> 생성되었습니다.\n    </p>\n    <button>확인</button>\n  </div>\n);\n\nexport default Popup;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Tab from '../components/Tab/TabList';\nimport List from '../components/ListMembers/List';\nimport ChoiceTab from '../components/ListMembers/ChoiceTab';\nimport NextTab from '../components/ListMembers/NextTab';\nimport Notice from '../components/Notice/Notice';\nimport Popup from '../components/Popup/Popup';\nimport { getUsers, getLikeMe, addLikeUser, postChat } from '../api';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\nimport {\n  loadUsersSuccess,\n  increaseChoiceCount,\n  resetChoiceCount,\n  increasePageIndex,\n  noticeSelectedAll,\n  addNewUsers,\n  leaveMemberList\n} from '../actions';\n\nconst ListMembers = () => {\n  const [view, setView] = useState('front');\n  const [matchData, setMatchData] = useState('level0');\n  const [viewPopup, setViewPopup] = useState(false);\n  const [notice, setnotice] = useState('유저 정보를 가져오고 있습니다.🙏');\n  const dispatch = useDispatch();\n  const {\n    users: partners,\n    user,\n    pageIndex,\n    hasUsersNotice,\n    choiceCount,\n    totalUserCount,\n    totalChoiceCount\n  } = useSelector(state => ({\n    users: state.users,\n    user: state.user,\n    pageIndex: state.pageIndex,\n    hasUsersNotice: state.hasUsersNotice,\n    choiceCount: state.choiceCount,\n    totalUserCount: state.totalUserCount,\n    totalChoiceCount: state.totalChoiceCount\n  }));\n\n  const LIMIT = 5;\n\n  useEffect(() => {\n    const setUsers = async () => {\n      const result = await getUsers({ limit: LIMIT, pageIndex: 0 });\n\n      if (!result.total_user_count) {\n        setnotice('모든 회원을 선택 하셨습니다~! 고생하셨습니다!👏');\n        dispatch(noticeSelectedAll());\n        return;\n      }\n\n      dispatch(loadUsersSuccess(objectKeysToCamelCase(result)));\n    };\n\n    setUsers();\n    return () => {\n      dispatch(leaveMemberList());\n    };\n  }, [dispatch]);\n\n  const onLikeClick = async () => {\n    const likeMeList = await getLikeMe();\n    if (likeMeList.includes(partners[choiceCount].id)) {\n      await postChat(partners[choiceCount].id);\n      setViewPopup(true);\n    } else {\n      addLikeUser(partners[choiceCount].id);\n    }\n\n    setView('back');\n    const compatibility = Object.keys(user.mbti).find(key => {\n      if (typeof user.mbti[key] === 'object') {\n        return user.mbti[key].includes(partners[choiceCount].mbti.type);\n      }\n    });\n\n    setMatchData(compatibility);\n  };\n\n  const onUnLikeClick = async () => {\n    await addLikeUser(partners[choiceCount].id);\n\n    onNextClick();\n  };\n\n  const onNextClick = async () => {\n    if (totalUserCount === totalChoiceCount + 1) {\n      setnotice('모든 회원을 선택 하셨습니다~! 고생하셨습니다!');\n      dispatch(noticeSelectedAll());\n      return;\n    }\n\n    // if (choiceCount === LIMIT - 1 || choiceCount + 2 === partners.length) {\n    //   let result = await getUsers({ limit: LIMIT, pageIndex: pageIndex + 1 });\n\n    //   if (!result.total_user_count || !partners.length) {\n    //     setnotice('모든 회원을 선택 하셨습니다~! 고생하셨습니다!');\n    //     dispatch(noticeSelectedAll());\n    //     return;\n    //   }\n\n    //   console.log('users' + result.length);\n    //   // result = await objectKeysToCamelCase(result);\n    //   dispatch(addNewUsers(result));\n    //   dispatch(resetChoiceCount());\n    //   dispatch(increasePageIndex());\n    //   setView('front');\n    //   setMatchData('level0');\n    //   return;\n    // }\n\n    dispatch(increaseChoiceCount());\n    setView('front');\n    setMatchData('level0');\n  };\n\n  const onPopupClick = () => {\n    setViewPopup(false);\n  };\n\n  return (\n    <div className=\"page-wrap\">\n      <Tab />\n      {hasUsersNotice ? (\n        <Notice notice={notice} />\n      ) : (\n        <>\n          <List\n            partner={partners[choiceCount]}\n            view={view}\n            matchData={matchData}\n            myMbti={user.mbti.type}\n            myName={user.name}\n          />\n          {(view === 'front' && (\n            <ChoiceTab\n              onLikeClick={onLikeClick}\n              onUnLikeClick={onUnLikeClick}\n            />\n          )) || <NextTab onNextClick={onNextClick} />}\n          {viewPopup && <Popup onPopupClick={onPopupClick} />}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ListMembers;\n","import React from 'react';\nimport './View.scss';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Profile = ({ user }) => {\n  const { profileImage, name, mbti, likeMe, description } = user;\n  return (\n    <div className=\"profile-area\">\n      <img src={profileImage} alt=\"profile\" className=\"profile-image\" />\n      <p>\n        <span className=\"name\">{name}</span>\n        <span className=\"mbti\">{mbti.type}</span>\n      </p>\n      <p className=\"likes\">\n        <FontAwesomeIcon icon={faHeart} />\n        <span className=\"num\">{likeMe.length}</span>\n      </p>\n      {description && <pre className=\"description\">{description}</pre>}\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Tab from '../components/Tab/TabList';\nimport View from '../components/Profile/View';\nimport { getLogout } from '../api';\nimport { logoutUser } from '../actions';\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const { user } = useSelector(state => ({\n    user: state.user\n  }));\n\n  const onLogoutClick = async () => {\n    getLogout().then(response => {\n      dispatch(logoutUser());\n    });\n  };\n\n  const callProtectedAPI = async () => {\n    const token = localStorage.getItem('jwt');\n    if (!token) return alert('로그인이 필요합니다.');\n  \n    try {\n      const res = await fetch('https://wfqynf004c.execute-api.ap-northeast-2.amazonaws.com/prod/user', {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n      const data = await res.json();\n      console.log('응답:', data);\n    } catch (err) {\n      console.error('API 호출 오류:', err);\n    }\n  };\n  \n  return (\n    <>\n      <Tab />\n      <div className=\"content\">\n        <View user={user} />\n        <Link to=\"/profile/edit\" className=\"link-button\">\n          수정하기\n        </Link>\n        <button href=\"#none\" onClick={onLogoutClick} className=\"link-button\">\n          로그아웃\n        </button>\n        <button onClick={callProtectedAPI}>내 정보 불러오기</button>\n      </div>\n    </>\n  );\n};\n\nexport default Profile;\n","import React, { useEffect } from 'react';\nimport './EditForm.scss';\n\nconst EditForm = ({ onSubmit, onChange, edit, error, onFileChange }) => {\n  let form = null;\n\n  useEffect(() => {\n    const scrollToTop = () => {\n      form.scrollIntoView({ block: 'start' });\n    };\n\n    scrollToTop();\n  }, [error, form]);\n\n  return (\n    <div className=\"edit-form form\">\n      <form onSubmit={onSubmit} ref={le => (form = le)}>\n        <p>{error}</p>\n        <select\n          name=\"mbti\"\n          id=\"mbti\"\n          required\n          value={edit.mbti}\n          onChange={onChange}\n        >\n          <option value=\"\">mbti를 선택해 주세요.</option>\n          <option value=\"intj\">INTJ 용의주도한 전략가</option>\n          <option value=\"intp\">INTP 논리적인 사색가</option>\n          <option value=\"entj\">ENTJ 대담한 통솔자</option>\n          <option value=\"entp\">ENTP 뜨거운 논쟁을 즐기는 변론가</option>\n          <option value=\"infj\">INFJ 선의의 옹호자</option>\n          <option value=\"infp\">INFP 열정적인 중재자</option>\n          <option value=\"enfj\">ENFJ 정의로운 사회운동가</option>\n          <option value=\"enfp\">ENFP 재기발랄한 활동가</option>\n          <option value=\"istj\">ISTJ 청렴결백한 논리주의자</option>\n          <option value=\"isfj\">ISFJ 용감한 수호자</option>\n          <option value=\"estj\">ESTJ 엄격한 관리자</option>\n          <option value=\"esfj\">ESFJ 사교적인 외교관</option>\n          <option value=\"istp\">ISTP 만능 재주꾼</option>\n          <option value=\"isfp\">ISFP 호기심 많은 예술가</option>\n          <option value=\"estp\">ESTP 모험을 즐기는 사업가</option>\n          <option value=\"esfp\">ESFP 자유로운 영혼의 연예인</option>\n        </select>\n        <label htmlFor=\"name\">name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          required\n          value={edit.name}\n          onChange={onChange}\n          maxLength=\"13\"\n        />\n        <label htmlFor=\"file\">프로필 사진</label>\n        <input\n          type=\"file\"\n          name=\"file\"\n          id=\"file\"\n          onChange={onFileChange}\n          accept=\"image/x-png,image/gif,image/jpeg\"\n        />\n        <p className=\"title\">회원님의 정보</p>\n        <textarea\n          name=\"description\"\n          className=\"description\"\n          cols=\"20\"\n          rows=\"3\"\n          maxLength=\"100\"\n          value={edit.description}\n          onChange={onChange}\n        ></textarea>\n        <button>수정하기</button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditForm;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// import { withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeEditForm, changeUserData } from '../actions';\nimport EditForm from '../components/Edit/EditForm';\nimport BackTab from '../components/BackTab/BackTab';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\nimport { putUserInfo } from '../api';\n\nconst Edit = () => {\n  const [error, setError] = useState('');\n  const [file, setFile] = useState(null);\n  const { edit, user } = useSelector(state => ({\n    edit: state.edit,\n    user: state.user\n  }));\n  const dispatch = useDispatch();\n\n  const onChange = ev => {\n    const { value, name } = ev.target;\n    dispatch(\n      changeEditForm({\n        name,\n        value\n      })\n    );\n  };\n\n  const onFileChange = ev => {\n    setFile(ev.target.files[0]);\n  };\n\n  const onSubmit = async ev => {\n    ev.preventDefault();\n\n    const { name, mbti } = edit;\n\n    if ([name, mbti].includes('')) {\n      setError('모두 입력하세요.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n    const userData = !file\n      ? await putUserInfo(edit)\n      : await putUserInfo(edit, formData);\n\n    dispatch(changeUserData(objectKeysToCamelCase(userData)));\n    // history.push('/profile');\n  };\n\n  return (\n    <>\n      <BackTab title={'Settings'} />\n      <EditForm\n        user={user}\n        edit={edit}\n        onChange={onChange}\n        onFileChange={onFileChange}\n        onSubmit={onSubmit}\n        error={error}\n      />\n    </>\n  );\n};\n\nexport default Edit;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './List.scss';\n\nconst List = ({ chats }) => {\n  const renderList = chats.map((chat, index) => (\n    <li key={index}>\n      <Link to={`/chat/room/${chat._id}`}>\n        <div className=\"left\">\n          <img src={chat.partner.profile_image} alt=\"profile\" />\n        </div>\n        <div className=\"right\">\n          <p className=\"name\">{chat.partner.name}</p>\n          {(chats[index].messages.length && (\n            <p className=\"message\">\n              {chats[index].messages[chats[index].messages.length - 1].content}\n            </p>\n          )) || <p className=\"message none\">먼저 인사해 보세요~!</p>}\n        </div>\n      </Link>\n    </li>\n  ));\n\n  return (\n    <div className=\"chat-list\">\n      <ul>{renderList}</ul>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Tab from '../components/Tab/TabList';\nimport List from '../components/ChatList/List';\nimport Roading from '../components/Notice/Notice';\nimport { loadChatsListSuccess } from '../actions';\nimport { getChats } from '../api/index';\n\nconst ChatList = () => {\n  const [notice, setnotice] = useState('채팅 정보를 가져오고 있습니다.🙏');\n  const { chats, hasChatsNotice } = useSelector(state => ({\n    chats: state.chats,\n    hasChatsNotice: state.hasChatsNotice\n  }));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const getchatList = async () => {\n      const chatList = await getChats();\n      if (!chatList.chats.length) {\n        setnotice('채팅 목록이 없습니다.😭');\n        return;\n      }\n      dispatch(loadChatsListSuccess(chatList.chats));\n    };\n\n    getchatList();\n  }, [dispatch]);\n\n  return (\n    <>\n      <Tab />\n      {hasChatsNotice ? <Roading notice={notice} /> : <List chats={chats} />}\n    </>\n  );\n};\n\nexport default ChatList;\n","import React from 'react';\nimport './InputPanel.scss';\n\nconst View = ({ onMessageChange, message, onSubmit, onKeyPress }) => {\n  return (\n    <div className=\"input-message\">\n      <input\n        type=\"text\"\n        className=\"input-text\"\n        onChange={onMessageChange}\n        value={message}\n        onKeyPress={onKeyPress}\n      />\n      <button onClick={onSubmit}>전송</button>\n    </div>\n  );\n};\n\nexport default View;\n","import React, { useEffect } from 'react';\nimport './View.scss';\n\nconst View = ({ chats, user }) => {\n  let chatList = null;\n  let randerChat = '';\n\n  useEffect(() => {\n    const scrollToBottom = () => {\n      chatList.scrollIntoView({ block: 'end' });\n    };\n\n    scrollToBottom();\n  }, [chats, chatList]);\n\n  if (chats.hasOwnProperty('messages')) {\n    randerChat = chats.messages.map((chat, index) => {\n      const position = chat.speaker !== user.id ? 'left' : 'right';\n      const sender = chat.speaker === user.id ? user : chats.partner;\n\n      return (\n        <li\n          key={index}\n          className={`${position} ${\n            sender === chats.partner ? 'partner' : 'me'\n          }`}\n        >\n          <img\n            src={sender.profileImage}\n            className=\"profile-image\"\n            alt=\"profile\"\n          />\n          {sender === chats.partner && <p className=\"name\">{sender.name}</p>}\n          <p className=\"talk\">{chat.content}</p>\n        </li>\n      );\n    });\n  }\n  return (\n    <div className=\"messages\">\n      <ul ref={le => (chatList = le)}>{randerChat}</ul>\n    </div>\n  );\n};\n\nexport default View;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport InputPanel from '../components/ChatView/InputPanel';\nimport View from '../components/ChatView/View';\nimport BackTab from '../components/BackTab/BackTab';\nimport { useParams } from 'react-router-dom';\nimport { getChat, postNewMessage } from '../api';\nimport { enterChatRoom, addNewMessage, leaveRoom } from '../actions';\nimport { objectKeysToCamelCase } from '../utility/formattingData';\n\nconst ChatView = () => {\n  const [message, setMessage] = useState('');\n  const { client, user, currentRoomChat } = useSelector(state => ({\n    client: state.client,\n    user: state.user,\n    currentRoomChat: state.currentRoomChat\n  }));\n  const dispatch = useDispatch();\n  const { roomId } = useParams();\n  const userId = user.id;\n\n  useEffect(() => {\n    const setChat = async () => {\n      const chat = await getChat(roomId);\n      dispatch(enterChatRoom(objectKeysToCamelCase(chat)));\n    };\n\n    setChat();\n\n    client.joinRoom({ roomId, userId });\n\n    client.receiveNewMessage(data => {\n      dispatch(\n        addNewMessage({\n          createAt: new Date(),\n          content: data.message,\n          speaker: data.userId\n        })\n      );\n    });\n\n    return () => {\n      client.leaveRoom(roomId);\n      dispatch(leaveRoom());\n    };\n  }, []);\n\n  const onMessageChange = ev => {\n    const { value } = ev.currentTarget;\n    setMessage(value);\n  };\n\n  const handleSubmit = () => {\n    if (!message) return;\n    client.sendMessage({ roomId, userId, message });\n    postNewMessage(roomId, { message });\n    setMessage('');\n  };\n\n  const handleKeyPress = ev => {\n    if (ev.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  return (\n    <>\n      {currentRoomChat.hasOwnProperty('partner') && (\n        <BackTab title={currentRoomChat.partner.name || ''} />\n      )}\n      <View chats={currentRoomChat} user={user} />\n      <InputPanel\n        onMessageChange={onMessageChange}\n        message={message}\n        onKeyPress={handleKeyPress}\n        onSubmit={handleSubmit}\n        chat={currentRoomChat}\n      />\n    </>\n  );\n};\n\nexport default ChatView;\n","import React from 'react';\n\nconst NotFound = () => {\n  return <div>페이지를 찾지 못하였습니다.</div>;\n};\n\nexport default NotFound;\n","import React from 'react';\nimport Logo from '../components/Logo/Logo';\n\nconst MainLoading = () => (\n  <div className=\"main-loading\">\n    <Logo />\n  </div>\n);\n\nexport default MainLoading;\n","// import React from 'react';\n// import './App.scss';\n// import { useSelector } from 'react-redux';\n// import { BrowserRouter, Switch, Route, Redirect, useLocation } from 'react-router-dom';\n// import Login from './containers/Login';\n// import Signup from './containers/Signup';\n// import ListMembers from './containers/ListMembers';\n// import Profile from './containers/Profile';\n// import Edit from './containers/Edit';\n// import ChatList from './containers/ChatList';\n// import ChatView from './containers/ChatView';\n// import NotFound from './containers/NotFound';\n// import MainLoading from './containers/MainLoading';\n\n// const App = () => {\n//   const { isAuthenticated, isMainLoading } = useSelector(state => ({\n//     isAuthenticated: state.isAuthenticated,\n//     isMainLoading: state.isMainLoading\n//   }));\n\n//   const privateRender = (Component, props) => {\n//     return isAuthenticated === true ? (\n//       <Component props={props} />\n//     ) : (\n//       <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n//     );\n//   };\n\n//   const notLoginRender = (Component, props) => {\n//     return !isAuthenticated === true ? (\n//       <Component props={props} />\n//     ) : (\n//       <Redirect\n//         to={{ pathname: '/profile', state: { from: props.location } }}\n//       />\n//     );\n//   };\n\n//   return (\n//     <div className=\"app\">\n//       <div className=\"wrap\">\n//         {isMainLoading ? (\n//           <MainLoading />\n//         ) : (\n//           <Switch>\n//             <Route exact path=\"/\">\n//               <Redirect to=\"/login\" />\n//             </Route>\n\n//             <Route\n//               path=\"/login\"\n//               render={props => notLoginRender(Login, props)}\n//             />\n//             <Route\n//               path=\"/signup\"\n//               render={props => notLoginRender(Signup, props)}\n//             />\n//             <Route\n//               path=\"/profile/edit\"\n//               render={props => privateRender(Edit, props)}\n//             />\n//             <Route\n//               path=\"/profile\"\n//               render={props => privateRender(Profile, props)}\n//             />\n//             <Route\n//               path=\"/users/list\"\n//               render={props => privateRender(ListMembers, props)}\n//             />\n\n//             <Route\n//               path=\"/chats\"\n//               render={props => privateRender(ChatList, props)}\n//             />\n//             <Route\n//               path=\"/chat/room/:roomId\"\n//               render={props => privateRender(ChatView, props)}\n//             />\n//             <Route component={NotFound} />\n//           </Switch>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React from 'react';\nimport './App.scss';\nimport { useSelector } from 'react-redux';\nimport {\n  Routes,\n  Route,\n  Navigate,\n  useLocation\n} from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { CONFIRMED_NOT_AUTHENTICATED } from './contants/actionTypes';\n\nimport Login from './containers/Login';\nimport Signup from './containers/Signup';\nimport ListMembers from './containers/ListMembers';\nimport Profile from './containers/Profile';\nimport Edit from './containers/Edit';\nimport ChatList from './containers/ChatList';\nimport ChatView from './containers/ChatView';\nimport NotFound from './containers/NotFound';\nimport MainLoading from './containers/MainLoading';\n\n\n\n// ✅ 로그인 여부 판단용 커스텀 라우터\nconst PrivateRoute = ({ children }) => {\n  const location = useLocation();\n  const isAuthenticated = useSelector(state => state.isAuthenticated);\n  return isAuthenticated ? children : <Navigate to=\"/login\" state={{ from: location }} />;\n};\n\nconst NotLoggedInRoute = ({ children }) => {\n  const isAuthenticated = useSelector(state => state.isAuthenticated);\n  return !isAuthenticated ? children : <Navigate to=\"/profile\" />;\n};\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const { isMainLoading } = useSelector(state => ({\n    isMainLoading: state.isMainLoading\n  }));\n\n  useEffect(() => {\n    dispatch({ type: CONFIRMED_NOT_AUTHENTICATED });\n  }, []);\n\n  \n  return (\n    <div className=\"app\">\n      <div className=\"wrap\">\n        {isMainLoading ? (\n          <MainLoading />\n        ) : (\n            <Routes>\n              {/* 홈 리디렉션 */}\n              <Route path=\"/\" element={<Navigate to=\"/login\" replace />} />\n\n              {/* 로그인/회원가입 */}\n              <Route path=\"/login\" element={\n                <NotLoggedInRoute><Login /></NotLoggedInRoute>\n              } />\n              <Route path=\"/signup\" element={\n                <NotLoggedInRoute><Signup /></NotLoggedInRoute>\n              } />\n\n              {/* 인증 필요 라우트 */}\n              <Route path=\"/profile/edit\" element={\n                <PrivateRoute><Edit /></PrivateRoute>\n              } />\n              <Route path=\"/profile\" element={\n                <PrivateRoute><Profile /></PrivateRoute>\n              } />\n              <Route path=\"/users/list\" element={\n                <PrivateRoute><ListMembers /></PrivateRoute>\n              } />\n              <Route path=\"/chats\" element={\n                <PrivateRoute><ChatList /></PrivateRoute>\n              } />\n              <Route path=\"/chat/room/:roomId\" element={\n                <PrivateRoute><ChatView /></PrivateRoute>\n              } />\n\n\n\n              {/* 404 */}\n              <Route path=\"*\" element={<NotFound />} />\n            </Routes>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import {\n  CHANGE_LOGIN_FORM,\n  CHANGE_REGISTER_FORM,\n  GET_GEOLOCATION,\n  SUCCESS_USER_AUTHENTICATION,\n  LOAD_USERS_SUCCESS,\n  INCREASE_CHOICE_COUNT,\n  RESET_CHOICE_COUNT,\n  INCREASE_PAGE_INDEX,\n  LOAD_CHATS_LIST_SUCCESS,\n  ENTER_CHAT_ROOM,\n  ADD_NEW_MESSAGE,\n  LEAVE_ROOM,\n  CHANGE_EDIT_FORM,\n  CONFIRMED_NOT_AUTHENTICATED,\n  USER_LOGOUT,\n  SUCCESS_USER_DATA_UPDATE,\n  SUCCESS_REGISTER_MEMBER,\n  SELECTED_ALL_MEMBERS,\n  NONE_CHATS,\n  ADD_NEW_USERS_LIST,\n  LEAVE_MEMBERS_LIST\n} from '../contants/actionTypes';\nimport socket from '../lib/socket';\n\nconst initialState = {\n  register: {\n    email: '',\n    mbti: '',\n    password: '',\n    passwordConfirm: '',\n    name: '',\n    location: {\n      latitude: 0,\n      longitude: 0\n    },\n    gender: '',\n    description: ''\n  },\n  login: {\n    email: '',\n    password: '',\n    location: {\n      latitude: 0,\n      longitude: 0\n    }\n  },\n  user: {\n    id: '',\n    mbti: {},\n    name: '',\n    profileImage: '',\n    dob: '',\n    location: {\n      latitude: 0,\n      longitude: 0\n    },\n    gender: '',\n    description: '',\n    dislikeUsers: [],\n    likeMe: [],\n    chats: [],\n    mailConfirm: false\n  },\n  edit: {\n    mbti: '',\n    name: '',\n    description: ''\n  },\n  isAuthenticated: false,\n  users: [],\n  totalUserCount: 0,\n  totalChoiceCount: 0,\n  choiceCount: 0,\n  pageIndex: 0,\n  chats: [],\n  client: socket(),\n  currentRoomChat: {},\n  isMainLoading: true,\n  hasUsersNotice: true,\n  hasChatsNotice: true\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_REGISTER_FORM:\n      return Object.assign({}, state, {\n        register: Object.assign({}, state.register, {\n          [action.name]: action.value\n        })\n      });\n    case CHANGE_EDIT_FORM:\n      return Object.assign({}, state, {\n        edit: Object.assign({}, state.edit, {\n          [action.name]: action.value\n        })\n      });\n    case CHANGE_LOGIN_FORM:\n      return Object.assign({}, state, {\n        login: Object.assign({}, state.login, {\n          [action.name]: action.value\n        })\n      });\n    case CONFIRMED_NOT_AUTHENTICATED:\n      return Object.assign({}, state, {\n        isMainLoading: false\n      });\n    case GET_GEOLOCATION:\n      return Object.assign({}, state, {\n        [action.state]: Object.assign({}, state[action.state], {\n          location: action.location\n        })\n      });\n    case SUCCESS_USER_AUTHENTICATION:\n      return Object.assign({}, state, {\n        edit: action.edit,\n        user: action.user,\n        isAuthenticated: true,\n        isMainLoading: false,\n        login: initialState.login\n      });\n    case SUCCESS_REGISTER_MEMBER:\n      return Object.assign({}, state, {\n        edit: action.edit,\n        user: action.user,\n        register: initialState.register,\n        isAuthenticated: action.isAuthenticated\n      });\n    case SUCCESS_USER_DATA_UPDATE:\n      return Object.assign({}, state, {\n        user: action.user\n      });\n    case LOAD_USERS_SUCCESS:\n      return Object.assign({}, state, {\n        users: action.users,\n        totalUserCount: action.totalUserCount,\n        totalChoiceCount: 0,\n        hasUsersNotice: false\n      });\n    case ADD_NEW_USERS_LIST:\n      return Object.assign({}, state, {\n        users: action.users,\n        hasUsersNotice: false\n      });\n    case USER_LOGOUT:\n      return Object.assign({}, state, {\n        users: initialState.users,\n        isAuthenticated: false\n      });\n    case INCREASE_CHOICE_COUNT:\n      return Object.assign({}, state, {\n        totalChoiceCount: state.totalChoiceCount + 1,\n        choiceCount: state.choiceCount + 1\n      });\n    case RESET_CHOICE_COUNT:\n      return Object.assign({}, state, {\n        choiceCount: 0\n      });\n    case INCREASE_PAGE_INDEX:\n      return Object.assign({}, state, {\n        pageIndex: state.pageIndex + 1\n      });\n    case SELECTED_ALL_MEMBERS:\n      return Object.assign({}, state, {\n        hasUsersNotice: true\n      });\n    case LOAD_CHATS_LIST_SUCCESS:\n      return Object.assign({}, state, {\n        chats: action.chats,\n        hasChatsNotice: false\n      });\n    case ENTER_CHAT_ROOM:\n      return Object.assign({}, state, {\n        currentRoomChat: action.chat\n      });\n    case ADD_NEW_MESSAGE:\n      return Object.assign({}, state, {\n        currentRoomChat: Object.assign({}, state.currentRoomChat, {\n          messages: [...state.currentRoomChat.messages, action.newMessage]\n        })\n      });\n    case LEAVE_ROOM:\n      return Object.assign({}, state, {\n        currentRoomChat: {}\n      });\n    case NONE_CHATS:\n      return Object.assign({}, state, {\n        hasChatsNotice: true\n      });\n    case LEAVE_MEMBERS_LIST:\n      return Object.assign({}, state, {\n        users: [],\n        totalUserCount: 0,\n        totalChoiceCount: 0,\n        choiceCount: 0,\n        pageIndex: 0,\n        hasUsersNotice: true\n      });\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import io from 'socket.io-client';\nimport { MESSAGE, ERROR, JOIN, LEAVE } from '../../contants/socketEventTypes';\nimport { config } from '../../config';\n\nconst { SOCKET_ROOT } = config;\n\nexport default function() {\n  // const socket = io.connect(SOCKET_ROOT);\n  const socket = io('wss://datingapp.store', {\n    path: '/socket.io/',\n    transports: ['websocket'],\n    secure: true\n  });\n\n  socket.on(ERROR, function(err) {\n    console.log(err);\n  });\n\n  const receiveNewMessage = cb => {\n    socket.on(MESSAGE, cb);\n  };\n\n  const joinRoom = data => {\n    socket.emit(JOIN, data);\n  };\n\n  const sendMessage = data => {\n    socket.emit(MESSAGE, data);\n  };\n\n  const leaveRoom = roomId => {\n    socket.removeListener(MESSAGE);\n    socket.removeListener(ERROR);\n    socket.emit(LEAVE, roomId);\n  };\n\n  return {\n    joinRoom,\n    sendMessage,\n    receiveNewMessage,\n    leaveRoom\n  };\n}\n","export const MESSAGE = 'MESSAGE';\nexport const ERROR = 'ERROR';\nexport const JOIN = 'JOIN';\nexport const LEAVE = 'LEAVE';\n","// import React from 'react';\n// import { render } from 'react-dom';\n// import { createStore } from 'redux';\n// import { Provider } from 'react-redux';\n// import { BrowserRouter as Router } from 'react-router-dom';\n// import ReactDOM from 'react-dom/client'\n// import matchApp from './reducers';\n// import App from './App';\n// import './index.scss';\n// import { successUserAuthentication, checkUserNotLogin } from './actions';\n// import { getUser } from './api';\n// import { objectKeysToCamelCase } from './utility/formattingData';\n// import { Amplify } from 'aws-amplify';\n// import awsconfig from './aws-config';\n\n// Amplify.configure(awsconfig);\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(<App />);\n\n// const store = createStore(\n//   matchApp,\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// );\n// const loadUser = async () => {\n//   const result = await getUser();\n// //   if (!result || !result.isAuthenticated) {\n// //     return store.dispatch(checkUserNotLogin());}\n// //   store.dispatch(successUserAuthentication(objectKeysToCamelCase(result.user)));\n// // };\n// if (!result || !result.isAuthenticated) {\n//   store.dispatch(checkUserNotLogin());\n// } else {\n//   store.dispatch(successUserAuthentication(objectKeysToCamelCase(result.user)));\n// }};\n\n\n// loadUser();\n\n// render(\n//   <Provider store={store}>\n//     <Router>\n//       <App />\n//     </Router>\n//   </Provider>,\n//   document.getElementById('root')\n// );\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport './index.scss';\nimport matchApp from './reducers';\nimport { successUserAuthentication, checkUserNotLogin } from './actions';\nimport { getUser } from './api';\nimport { objectKeysToCamelCase } from './utility/formattingData';\nimport { Amplify } from 'aws-amplify';\nimport awsconfig from './aws-config';\n\nAmplify.configure(awsconfig);\n\nconst store = createStore(\n  matchApp,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconst loadUser = async () => {\n  const result = await getUser();\n  if (!result || !result.isAuthenticated) {\n    store.dispatch(checkUserNotLogin());\n  } else {\n    store.dispatch(successUserAuthentication(objectKeysToCamelCase(result.user)));\n  }\n};\n\nloadUser();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}