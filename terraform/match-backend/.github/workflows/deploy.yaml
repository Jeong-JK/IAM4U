name: Deploy to EKS

on:
  push:
    paths:
      - '**'
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/match-backend
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker Image
        run: |
          cd terraform/match-backend
          docker build -t match-backend .
          docker tag match-backend:latest 113701560990.dkr.ecr.ap-northeast-2.amazonaws.com/match-backend:latest
          docker push 113701560990.dkr.ecr.ap-northeast-2.amazonaws.com/match-backend:latest

      - name: Deploy to EKS
        run: |
          aws eks update-kubeconfig --region ap-northeast-2 --name match-cluster
          kubectl rollout restart deployment match-backend

      - name: Check Service Health
        run: |
          STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://aaad6e4a1341f473a9476314b1b429c7-1446099923.ap-northeast-2.elb.amazonaws.com)
          if [ "$STATUS_CODE" -ne 200 ]; then
            echo "❌ 서비스 헬스 체크 실패 (상태 코드: $STATUS_CODE)"
            exit 1
          else
            echo "✅ 서비스 헬스 체크 성공! (상태 코드: $STATUS_CODE)"
          fi

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ needs.deploy.result }}
          fields: repo,message,commit,author
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
